<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>万取一收斋</title>
  
  <subtitle>浅深聚散，万取一收</subtitle>
  <link href="https://www.maolilan.top/atom.xml" rel="self"/>
  
  <link href="https://www.maolilan.top/"/>
  <updated>2021-02-05T21:03:41.118Z</updated>
  <id>https://www.maolilan.top/</id>
  
  <author>
    <name>EMT</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>遇到和解决的问题</title>
    <link href="https://www.maolilan.top/article/be7f81a3.html"/>
    <id>https://www.maolilan.top/article/be7f81a3.html</id>
    <published>2021-01-16T18:05:03.000Z</published>
    <updated>2021-02-05T21:03:41.118Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\css\APlayer.min.css"><script src="\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\js\Meting.min.js"></script><h1 id="遇到的问题汇总"><a href="#遇到的问题汇总" class="headerlink" title="遇到的问题汇总"></a>遇到的问题汇总</h1><h2 id="数据库版本问题"><a href="#数据库版本问题" class="headerlink" title="数据库版本问题"></a>数据库版本问题</h2><p>ERROR 3554 (HY000) at line 752: Access to system table ‘mysql.innodb_index_stats’ is rejected.”</p><p>解决方法：<a href="https://www.lmonkey.com/ask/6846">https://www.lmonkey.com/ask/6846</a></p><p>推荐卸载8重新安装5</p><h2 id="MySQL-server-has-gone-away"><a href="#MySQL-server-has-gone-away" class="headerlink" title="MySQL server has gone away"></a>MySQL server has gone away</h2><p>解决方法:调整max_allow_apcket</p><p><a href="https://blog.csdn.net/fdipzone/article/details/51974165?ops_request_misc=%25257B%252522request%25255Fid%252522%25253A%252522161081893016780299092731%252522%25252C%252522scm%252522%25253A%25252220140713.130102334.pc%25255Fall.%252522%25257D&amp;request_id=161081893016780299092731&amp;biz_id=0&amp;utm_medium=distribute.pc_search_result.none-task-blog-2~all~first_rank_v2~rank_v29-1-51974165.pc_search_result_cache&amp;utm_term=%202006%20-%20MySQL%20server%20has%20gone%20away">https://blog.csdn.net/fdipzone/article/details/51974165?ops_request_misc=%25257B%252522request%25255Fid%252522%25253A%252522161081893016780299092731%252522%25252C%252522scm%252522%25253A%25252220140713.130102334.pc%25255Fall.%252522%25257D&amp;request_id=161081893016780299092731&amp;biz_id=0&amp;utm_medium=distribute.pc_search_result.none-task-blog-2~all~first_rank_v2~rank_v29-1-51974165.pc_search_result_cache&amp;utm_term=%202006%20-%20MySQL%20server%20has%20gone%20away</a></p><p>也可以</p><p><a href="https://blog.csdn.net/qq_34528297/article/details/88384452?ops_request_misc=%25257B%252522request%25255Fid%252522%25253A%252522161081893016780299092731%252522%25252C%252522scm%252522%25253A%25252220140713.130102334.pc%25255Fall.%252522%25257D&amp;request_id=161081893016780299092731&amp;biz_id=0&amp;utm_medium=distribute.pc_search_result.none-task-blog-2~all~first_rank_v2~rank_v29-4-88384452.pc_search_result_cache&amp;utm_term=%202006%20-%20MySQL%20server%20has%20gone%20away">https://blog.csdn.net/qq_34528297/article/details/88384452?ops_request_misc=%25257B%252522request%25255Fid%252522%25253A%252522161081893016780299092731%252522%25252C%252522scm%252522%25253A%25252220140713.130102334.pc%25255Fall.%252522%25257D&amp;request_id=161081893016780299092731&amp;biz_id=0&amp;utm_medium=distribute.pc_search_result.none-task-blog-2~all~first_rank_v2~rank_v29-4-88384452.pc_search_result_cache&amp;utm_term=%202006%20-%20MySQL%20server%20has%20gone%20away</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\js\APlayer.min.js&quot; class=&quot;aplayer-se</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>JVM双亲委派机制详解</title>
    <link href="https://www.maolilan.top/article/c9c0e075.html"/>
    <id>https://www.maolilan.top/article/c9c0e075.html</id>
    <published>2020-10-25T15:15:31.000Z</published>
    <updated>2020-10-25T15:18:43.629Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\css\APlayer.min.css"><script src="\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\js\Meting.min.js"></script><h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>这个是阿里云活动白嫖的学习会员，课程名是 《11分钟搞定JVM的双亲委派机制》 ，这个是学习笔记。</p><h1 id="学习后可以解决的问题"><a href="#学习后可以解决的问题" class="headerlink" title="学习后可以解决的问题"></a>学习后可以解决的问题</h1><p>JVM为什么会抛出ClassNotFund异常？在抛出这个异常的时候JVM的类加载器做了什么工作？</p><p>Java程序在执行的过程中，是先执行父类还是先执行子类。如果加载父类，那么父类还有父类呢，这个时候JVM还要怎么处理，</p><p>JVM是如何保证类加载的有序性和安全性？</p><h1 id="类加载器的分类"><a href="#类加载器的分类" class="headerlink" title="类加载器的分类"></a>类加载器的分类</h1><h2 id="分类"><a href="#分类" class="headerlink" title="分类"></a>分类</h2><p><img src= "/img/loading.gif" data-src="https://img-blog.csdnimg.cn/20201025220912742.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxMzE4NDAw,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p><h2 id="每个类加载器的作用"><a href="#每个类加载器的作用" class="headerlink" title="每个类加载器的作用"></a>每个类加载器的作用</h2><h3 id="启动类加载器"><a href="#启动类加载器" class="headerlink" title="启动类加载器"></a>启动类加载器</h3><p>负责加载Java_HOME目录下，lib的目录下的类库。<br><img src= "/img/loading.gif" data-src="https://img-blog.csdnimg.cn/20201025221137358.png?,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxMzE4NDAw,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p><h3 id="扩展类加载器"><a href="#扩展类加载器" class="headerlink" title="扩展类加载器"></a>扩展类加载器</h3><p>负责加载Java_HOME目录下，lib子目录下的ext的子目录的类库<br><img src= "/img/loading.gif" data-src="https://img-blog.csdnimg.cn/20201025221159443.png?,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxMzE4NDAw,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p><h3 id="应用程序类加载器"><a href="#应用程序类加载器" class="headerlink" title="应用程序类加载器"></a>应用程序类加载器</h3><p><img src= "/img/loading.gif" data-src="https://img-blog.csdnimg.cn/20201025221227625.png?,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxMzE4NDAw,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br>加载用户路径classpath上的类库。</p><h3 id="自定义类加载器"><a href="#自定义类加载器" class="headerlink" title="自定义类加载器"></a>自定义类加载器</h3><p>通过继承 java.lang.ClassLoader，根据不同的需求来实现自定义的类加载器。然而在实际开发中，我们必然是要继承JDK中的类或者实现JDK中的接口。<br><img src= "/img/loading.gif" data-src="https://img-blog.csdnimg.cn/20201025221522562.png?,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxMzE4NDAw,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p><h1 id="解决方法：双亲委派"><a href="#解决方法：双亲委派" class="headerlink" title="解决方法：双亲委派"></a>解决方法：双亲委派</h1><h2 id="包含内容"><a href="#包含内容" class="headerlink" title="包含内容"></a>包含内容</h2><p><img src= "/img/loading.gif" data-src="https://img-blog.csdnimg.cn/20201025221709852.png?,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxMzE4NDAw,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p><h2 id="向上委派"><a href="#向上委派" class="headerlink" title="向上委派"></a>向上委派</h2><h3 id="如何理解向上委派？"><a href="#如何理解向上委派？" class="headerlink" title="如何理解向上委派？"></a>如何理解向上委派？</h3><p>一个类在收到类加载请求后，不会自己加载这个类，而是把这个类加载请求向上委派给它的父类去完成，父类收到这个请求后又继续向上委派给自己的父类，以此类推，直到所有的请求委派到启动类加载器中。</p><p>tips： 这让双亲委派机制保证类加载的顺序性。</p><p><img src= "/img/loading.gif" data-src="https://img-blog.csdnimg.cn/20201025221752132.png?,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxMzE4NDAw,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p><h3 id="向上委派的过程是怎样的？"><a href="#向上委派的过程是怎样的？" class="headerlink" title="向上委派的过程是怎样的？"></a>向上委派的过程是怎样的？</h3><p>第一步： 将自定义加载器挂载到应用程序类加载器<br>第二步： 应用程序类加载器将请求委托给扩展类加载器<br>第三步： 扩展类加载器将请求委托给启动类加载器<br><img src= "/img/loading.gif" data-src="https://img-blog.csdnimg.cn/2020102522224879.png?,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxMzE4NDAw,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p><h2 id="向下委派"><a href="#向下委派" class="headerlink" title="向下委派"></a>向下委派</h2><h3 id="如何理解向下委派"><a href="#如何理解向下委派" class="headerlink" title="如何理解向下委派"></a>如何理解向下委派</h3><p>当父类加载器在接收到类加载请求后，发现自己也无法加载这个类（这个情况通常是因为这个类的Class文件在父类的加载路径中不存在）这时父类会把这个信息反馈给子类，并向下委派子类加载器来加载这个类，直到这个请求被成功加载，但是一直到自定义加载器都没有找到，JVM就会抛出ClassNotFund异常。<br><img src= "/img/loading.gif" data-src="https://img-blog.csdnimg.cn/20201025222807670.png?,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxMzE4NDAw,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p><h3 id="向下委派的加载过程（报ClassNotFund的过程）"><a href="#向下委派的加载过程（报ClassNotFund的过程）" class="headerlink" title="向下委派的加载过程（报ClassNotFund的过程）"></a>向下委派的加载过程（报ClassNotFund的过程）</h3><p>第一步： 启动类在加载路径下查找并加载Class文件，如果没有找到就交给扩展类加载器加载<br>第二步：扩展类加载器在它的加载路径下查找并加载Class文件，如果还是没有找到，再交给应用程序类加载器加载<br>第三步：应用程序类加载器在加载路径下查找并加载Class文件，如果还是没有找到，就交给自定义加载器进行加载<br>第四步：自定义加载器在用户指定的位置进行查找并加载Class文件，如果还是没有找到，JVM抛出ClassNotFund异常。这时类加载失败，JVM也启动失败。<br><img src= "/img/loading.gif" data-src="https://img-blog.csdnimg.cn/20201025223325560.png?type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxMzE4NDAw,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p><h2 id="双亲委派的核心：保证类的安全性和唯一性"><a href="#双亲委派的核心：保证类的安全性和唯一性" class="headerlink" title="双亲委派的核心：保证类的安全性和唯一性"></a>双亲委派的核心：保证类的安全性和唯一性</h2><p><img src= "/img/loading.gif" data-src="https://img-blog.csdnimg.cn/20201025224033610.png?,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxMzE4NDAw,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br>向上委派机制保证先加载JDK的核心类，再加载应用程序的类，有效防止了因为应用程序中因为某个类的存在一些不安全问题，导致JVM变得不安全。</p><p>向下委派机制保证需要加载的类，都得到了加载。</p><p>例子：<br>不管是在哪个jar包下的类最终都会委派给启动类加载器进行加载。比如我自定义</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">StringBuffer</span> </span>&#123;</span><br><span class="line">      <span class="function"><span class="keyword">public</span> <span class="title">StringBuffer</span><span class="params">()</span></span>&#123;</span><br><span class="line">      &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>如果没有向下委派一直到启动类加载器，那StringBuffer就变成我这个了。安全性出来了。<br>如果在JVM存在包名和类名完全相同的两个类，这个类就无法被加载。</p><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p><img src= "/img/loading.gif" data-src="https://img-blog.csdnimg.cn/20201025230042136.png?,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxMzE4NDAw,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p>]]></content>
    
    
    <summary type="html">JVM双亲委派机制详解</summary>
    
    
    
    <category term="Java复习巩固" scheme="https://www.maolilan.top/categories/Java%E5%A4%8D%E4%B9%A0%E5%B7%A9%E5%9B%BA/"/>
    
    
    <category term="笔记" scheme="https://www.maolilan.top/tags/%E7%AC%94%E8%AE%B0/"/>
    
    <category term="Java" scheme="https://www.maolilan.top/tags/Java/"/>
    
  </entry>
  
  <entry>
    <title>Spring实战第四版-阅读笔记-第一章</title>
    <link href="https://www.maolilan.top/article/4de36022.html"/>
    <id>https://www.maolilan.top/article/4de36022.html</id>
    <published>2020-10-23T09:09:22.000Z</published>
    <updated>2020-10-23T10:32:05.846Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\css\APlayer.min.css"><script src="\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\js\Meting.min.js"></script><h1 id="Spring的核心"><a href="#Spring的核心" class="headerlink" title="Spring的核心"></a>Spring的核心</h1><h2 id="第一章-Spring之旅"><a href="#第一章-Spring之旅" class="headerlink" title="第一章 Spring之旅"></a>第一章 Spring之旅</h2><h3 id="为了降低Java开发复杂性，spring采取的关键策略"><a href="#为了降低Java开发复杂性，spring采取的关键策略" class="headerlink" title="为了降低Java开发复杂性，spring采取的关键策略"></a>为了降低Java开发复杂性，spring采取的关键策略</h3><blockquote><p>基于 POJO 的轻量级和最小侵入性编程；<br>通过依赖注入和面向接口实现松耦合；<br>基于切面和惯例进行声明式编程；<br>通过切面和模板减少样板式代码。</p></blockquote><h3 id="Spring-的非侵入编程模型"><a href="#Spring-的非侵入编程模型" class="headerlink" title="Spring 的非侵入编程模型"></a>Spring 的非侵入编程模型</h3><p>意味着一个类在 Spring 应用和非 Spring 应用中都可以发挥同样的作用。<br>比如</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">程序清单 <span class="number">1.1</span> Spring 不会在 HelloWorldBean 上有任何不合理的要求</span><br><span class="line"><span class="keyword">package</span> com.habuma.spring;</span><br><span class="line">​</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">HelloWorldBean</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">sayHello</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;Hello World&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="DI-功能是如何实现的"><a href="#DI-功能是如何实现的" class="headerlink" title="DI 功能是如何实现的"></a>DI 功能是如何实现的</h3><p>任何一个有实际意义的应用（肯定比 Hello World 示例更复杂）都会由两个或者更多的类组成，这些类相互之间进行协作来完成特定的业务逻辑。按照传统的做法，每个对象负责管理与自己相互协作的对象（即它所依赖的对象）的引用，这将会导致高度耦合和难以测试的代码。</p><p>比如</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">程序清单 <span class="number">1.2</span> DamselRescuingKnight 只能执行 RescueDamselQuest 探险任务</span><br><span class="line"><span class="keyword">package</span> sia.knights;</span><br><span class="line"></span><br><span class="line">public class DamselRescuingKnight implements Knight &#123;  # 字面意思：拯救少女骑士类</span><br><span class="line"></span><br><span class="line">  private RescueDamselQuest quest;   # 营救任务类 </span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="title">DamselRescuingKnight</span><span class="params">()</span> </span>&#123;  </span><br><span class="line">    <span class="keyword">this</span>.quest = <span class="keyword">new</span> RescueDamselQuest();</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  public void embarkOnQuest() &#123;  # 行动方法</span><br><span class="line">    quest.embark();</span><br><span class="line">  &#125;</span><br><span class="line">  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>可以看出这个骑士对于拯救少女及其在行，可以呼之即来，但是如果村庄有了恶霸，突然来了恶龙，骑士就很难行动了，就得改很多东西。简而言之，DamselRescuingKnight 和 RescueDamselQuest 耦合很高。</p><p>同时，对于编写单元测试也很困难，如果调用embarkOnQuest方法就必须调用embark方法，但是没有简单的方法去实现这个过程，所以DamselRescuingKnight就无法进行测试。</p><p>那么这个骑士要怎么办呢<br><strong>依赖注入，DI</strong><br><img src= "/img/loading.gif" data-src="https://img-blog.csdnimg.cn/20201023161251914.png?,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxMzE4NDAw,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">程序清单 <span class="number">1.3</span>　BraveKnight 足够灵活可以接受任何赋予他的探险任务</span><br><span class="line"><span class="keyword">package</span> sia.knights;</span><br><span class="line">  </span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">BraveKnight</span> <span class="keyword">implements</span> <span class="title">Knight</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">private</span> Quest quest;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="title">BraveKnight</span><span class="params">(Quest quest)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">this</span>.quest = quest;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">embarkOnQuest</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    quest.embark();</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>对比1.2可以发现quest被作为参数传入了构造器，这种方式被称为 构造器注入。<br>在这个例子中，Quest是一个接口，每一个任务都必须实现这个接口，所以这个骑士又能拯救少女，又能欺负村霸，还可以去屠龙。</p><p>测试一下这个骑士2.0。</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">程序清单 <span class="number">1.4</span> 为了测试 BraveKnight，需要注入一个 mock Quest</span><br><span class="line"><span class="keyword">package</span> sia.knights;</span><br><span class="line"><span class="keyword">import</span> <span class="keyword">static</span> org.mockito.Mockito.*;</span><br><span class="line">​</span><br><span class="line">import org.junit.Test;  #如果是其他的包，会报错</span><br><span class="line">​</span><br><span class="line"><span class="keyword">import</span> sia.knights.BraveKnight;</span><br><span class="line"><span class="keyword">import</span> sia.knights.Quest;</span><br><span class="line">​</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">BraveKnightTest</span> </span>&#123;</span><br><span class="line">​</span><br><span class="line">  <span class="meta">@Test</span></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">knightShouldEmbarkOnQuest</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    Quest mockQuest = mock(Quest.class);</span><br><span class="line">    BraveKnight knight = <span class="keyword">new</span> BraveKnight(mockQuest);</span><br><span class="line">    knight.embarkOnQuest();</span><br><span class="line">    verify(mockQuest, times(1)).embark();  #这个是要求mock实现的embark仅仅被调用一次</span><br><span class="line">  &#125;</span><br><span class="line">​</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>测试结束了，骑士2.0要出发了，那么他要怎么知道自己的任务呢。</p><p>首先，我们需要定义任务。</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">程序清单 <span class="number">1.5</span> SlayDragonQuest 是要注入到 BraveKnight 中的 Quest 实现</span><br><span class="line"><span class="keyword">package</span> sia.knights;</span><br><span class="line">​</span><br><span class="line"><span class="keyword">import</span> java.io.PrintStream;</span><br><span class="line">​</span><br><span class="line">public class SlayDragonQuest implements Quest &#123;  # 屠龙任务实现了Quest接口</span><br><span class="line">​</span><br><span class="line">  <span class="keyword">private</span> PrintStream stream;</span><br><span class="line">​</span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="title">SlayDragonQuest</span><span class="params">(PrintStream stream)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">this</span>.stream = stream;</span><br><span class="line">  &#125;</span><br><span class="line">​</span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">embark</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    stream.println(<span class="string">&quot;Embarking on quest to slay the dragon!&quot;</span>);</span><br><span class="line">  &#125;</span><br><span class="line">​</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>第二步，把这个任务发给骑士2.0。对应的就是 Spring 将 SlayDragonQuest 注入到 BraveKnight 中。实现的方法是使用xml进行装配，装配在后面会有很多介绍，这里书上用xml和java的装配做了例子。 </p><p>xml的</p><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line">knights.xml文件 把SlayDragonQuest 注入到 BraveKnight 中</span><br><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">beans</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://www.springframework.org/schema/beans&quot;</span></span></span><br><span class="line"><span class="tag">  <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">  <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;</span></span></span><br><span class="line"><span class="tag"><span class="string">    http://www.springframework.org/schema/beans </span></span></span><br><span class="line"><span class="tag"><span class="string">    http://www.springframework.org/schema/beans/spring-beans.xsd&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;knight&quot;</span> <span class="attr">class</span>=<span class="string">&quot;sia.knights.BraveKnight&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">constructor-arg</span> <span class="attr">ref</span>=<span class="string">&quot;quest&quot;</span> /&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;quest&quot;</span> <span class="attr">class</span>=<span class="string">&quot;sia.knights.SlayDragonQuest&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">constructor-arg</span> <span class="attr">value</span>=<span class="string">&quot;#&#123;T(System).out&#125;&quot;</span> /&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">beans</span>&gt;</span></span><br></pre></td></tr></table></figure><p>java的</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> sia.knights.config;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Bean;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Configuration;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> sia.knights.BraveKnight;</span><br><span class="line"><span class="keyword">import</span> sia.knights.Knight;</span><br><span class="line"><span class="keyword">import</span> sia.knights.Quest;</span><br><span class="line"><span class="keyword">import</span> sia.knights.SlayDragonQuest;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">KnightConfig</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">  <span class="meta">@Bean</span></span><br><span class="line">  <span class="function"><span class="keyword">public</span> Knight <span class="title">knight</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> BraveKnight(quest());</span><br><span class="line">  &#125;</span><br><span class="line">  </span><br><span class="line">  <span class="meta">@Bean</span></span><br><span class="line">  <span class="function"><span class="keyword">public</span> Quest <span class="title">quest</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> SlayDragonQuest(System.out);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>最后，骑士拿到了任务，他要出发。Spring 通过应用上下文（Application Context）装载 bean 的定义并把它们组装起来。<br>针对xml使用ClassPathXmlApplicationContext 作为应用上下文相对是比较合适的。</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> sia.knights;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.context.support.ClassPathXmlApplicationContext;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">KnightMain</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">    ClassPathXmlApplicationContext context = <span class="keyword">new</span> </span><br><span class="line">             ClassPathXmlApplicationContext(&quot;META-INF/spring/knight.xml&quot;); # 通过ClassPathXmlApplicationContext 加载 knights.xml</span><br><span class="line">    Knight knight = context.getBean(Knight.class);</span><br><span class="line">    knight.embarkOnQuest();</span><br><span class="line">    context.close();</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="AOP"><a href="#AOP" class="headerlink" title="AOP"></a>AOP</h3><p>DI 能够让相互协作的软件组件保持松散耦合，而面向切面编程（aspect-oriented programming，AOP）允许你把遍布应用各处的功能分离出来形成可重用的组件。<br>图示<br><img src= "/img/loading.gif" data-src="https://img-blog.csdnimg.cn/20201023163526283.png?,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxMzE4NDAw,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br>AOP做了什么？<br>AOP 能够使这些服务模块化，并以声明的方式将它们应用到它们需要影响的组件中去。所造成的结果就是这些组件会具有更高的内聚性并且会更加关注自身的业务，完全不需要了解涉及系统服务所带来复杂性。总之，AOP 能够确保 POJO 的简单性。<br><img src= "/img/loading.gif" data-src="https://img-blog.csdnimg.cn/20201023163625748.png?type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxMzE4NDAw,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br>继续用骑士举例，比如现在我们让吟游诗人记录骑士的事迹。</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> sia.knights;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.PrintStream;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Minstrel</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">private</span> PrintStream stream;</span><br><span class="line">  </span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="title">Minstrel</span><span class="params">(PrintStream stream)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">this</span>.stream = stream;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  public void singBeforeQuest() &#123;  # 执行任务前他说骑士很勇敢</span><br><span class="line">    stream.println(<span class="string">&quot;Fa la la, the knight is so brave!&quot;</span>);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  public void singAfterQuest() &#123;  # 执行任务后夸赞骑士完成了任务</span><br><span class="line">    stream.println(<span class="string">&quot;Tee hee hee, the brave knight &quot;</span> +</span><br><span class="line">    <span class="string">&quot;did embark on a quest!&quot;</span>);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>那么我们就要修改一下骑士了</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.springinaction.knights;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">BraveKnight</span> <span class="keyword">implements</span> <span class="title">Knight</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">private</span> Quest quest;</span><br><span class="line">  <span class="keyword">private</span> Minstrel minstrel;</span><br><span class="line">  </span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="title">BraveKnight</span><span class="params">(Quest quest, Minstrel minstrel)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">this</span>.quest = quest;</span><br><span class="line">    <span class="keyword">this</span>.minstrel = minstrel;</span><br><span class="line">  &#125;</span><br><span class="line">  </span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">embarkOnQuest</span><span class="params">()</span> <span class="keyword">throws</span> QuestException </span>&#123;</span><br><span class="line">    minstrel.singBeforeQuest();  # 夸赞他的勇敢</span><br><span class="line">    quest.embark();</span><br><span class="line">    minstrl.singAfterQuest();  # 夸赞他的任务完成</span><br><span class="line">  &#125;</span><br><span class="line">  </span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure><p>但是出了一个问题，为什么骑士要负责游吟诗人的工作呢，为什么每次任务还要提醒游吟诗人呢。<br>原文：</p><blockquote><p>我们似乎感觉有些东西不太对。管理他的吟游诗人真的是骑士职责范围内的工作吗？在我看来，吟游诗人应该做他份内的事，根本不需要骑士命令他这么做。毕竟，用诗歌记载骑士的探险事迹，这是吟游诗人的职责。为什么骑士还需要提醒吟游诗人去做他份内的事情呢？</p></blockquote><blockquote><p>此外，因为骑士需要知道吟游诗人，所以就必须把吟游诗人注入到 BarveKnight 类中。这不仅使 BraveKnight<br>的代码复杂化了，而且还让我疑惑是否还需要一个不需要吟游诗人的骑士呢？如果 Minstrel 为 null<br>会发生什么呢？我是否应该引入一个空值校验逻辑来覆盖该场景？</p></blockquote><blockquote><p> 简单的 BraveKnight类开始变得复杂，如果你还需要应对没有吟游诗人时的场景，那代码会变得更复杂。但利用<br>AOP，你可以声明吟游诗人必须歌颂骑士的探险事迹，而骑士本身并不用直接访问 Minstrel 的方法。</p></blockquote><p>解决方法就是使用切面，让游吟诗人类成为切面</p><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">beans</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://www.springframework.org/schema/beans&quot;</span></span></span><br><span class="line"><span class="tag">  <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">  <span class="attr">xmlns:aop</span>=<span class="string">&quot;http://www.springframework.org/schema/aop&quot;</span></span></span><br><span class="line"><span class="tag">  <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://www.springframework.org/schema/aop </span></span></span><br><span class="line"><span class="tag"><span class="string">  http://www.springframework.org/schema/aop/spring-aop.xsd</span></span></span><br><span class="line"><span class="tag"><span class="string">  http://www.springframework.org/schema/beans </span></span></span><br><span class="line"><span class="tag"><span class="string">  http://www.springframework.org/schema/beans/spring-beans.xsd&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;knight&quot;</span> <span class="attr">class</span>=<span class="string">&quot;sia.knights.BraveKnight&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">constructor-arg</span> <span class="attr">ref</span>=<span class="string">&quot;quest&quot;</span> /&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;quest&quot;</span> <span class="attr">class</span>=<span class="string">&quot;sia.knights.SlayDragonQuest&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">constructor-arg</span> <span class="attr">value</span>=<span class="string">&quot;#&#123;T(System).out&#125;&quot;</span> /&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;minstrel&quot;</span> <span class="attr">class</span>=<span class="string">&quot;sia.knights.Minstrel&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">constructor-arg</span> <span class="attr">value</span>=<span class="string">&quot;#&#123;T(System).out&#125;&quot;</span> /&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">aop:config</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">aop:aspect</span> <span class="attr">ref</span>=<span class="string">&quot;minstrel&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">aop:pointcut</span> <span class="attr">id</span>=<span class="string">&quot;embark&quot;</span></span></span><br><span class="line"><span class="tag">          <span class="attr">expression</span>=<span class="string">&quot;execution(* *.embarkOnQuest(..))&quot;</span>/&gt;</span></span><br><span class="line">        </span><br><span class="line">      <span class="tag">&lt;<span class="name">aop:before</span> <span class="attr">pointcut-ref</span>=<span class="string">&quot;embark&quot;</span> </span></span><br><span class="line"><span class="tag">          <span class="attr">method</span>=<span class="string">&quot;singBeforeQuest&quot;</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">      <span class="tag">&lt;<span class="name">aop:after</span> <span class="attr">pointcut-ref</span>=<span class="string">&quot;embark&quot;</span> </span></span><br><span class="line"><span class="tag">          <span class="attr">method</span>=<span class="string">&quot;singAfterQuest&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">aop:aspect</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">aop:config</span>&gt;</span></span><br><span class="line">  </span><br><span class="line"><span class="tag">&lt;/<span class="name">beans</span>&gt;</span></span><br></pre></td></tr></table></figure><p>从这个例子只要知道</p><blockquote><p>首先，Minstrel 仍然是一个 POJO，没有任何代码表明它要被作为一个切面使用。当我们按照上面那样进行配置后，在 Spring 的上下文中，Minstrel 实际上已经变成一个切面了。</p></blockquote><blockquote><p>其次，也是最重要的，Minstrel 可以被应用到 BraveKnight 中，而 BraveKnight 不需要显式地调用它。实际上，BraveKnight 完全不知道 Minstrel 的存在。</p></blockquote><p>这样我们就实现了游吟诗人来让更多人知道骑士的行为。</p><h3 id="使用模板消除样式代码"><a href="#使用模板消除样式代码" class="headerlink" title="使用模板消除样式代码"></a>使用模板消除样式代码</h3><p>比如jdbc</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> Employee <span class="title">getEmployeeById</span><span class="params">(<span class="keyword">long</span> id)</span> </span>&#123;</span><br><span class="line">  </span><br><span class="line">  Connection conn = <span class="keyword">null</span>;</span><br><span class="line">  PreparedStatement stmt = <span class="keyword">null</span>;</span><br><span class="line">  Result rs = <span class="keyword">null</span>;</span><br><span class="line">  </span><br><span class="line">  <span class="keyword">try</span> &#123;</span><br><span class="line">    conn = dataSource.getConnection();</span><br><span class="line">    stmt = conn.prepareStatment(</span><br><span class="line">      <span class="string">&quot;select id, firstname, lastname, salary from &quot;</span> +</span><br><span class="line">      <span class="string">&quot;employee where id=?&quot;</span>);</span><br><span class="line">    stmt.setLong(<span class="number">1</span>, id);</span><br><span class="line">    rs = stmt.executeQuery();</span><br><span class="line">    Employee employee = <span class="keyword">null</span>;</span><br><span class="line">    <span class="keyword">if</span> (rs.next()) &#123;</span><br><span class="line">      employee = <span class="keyword">new</span> Employee();</span><br><span class="line">      employee.setId(rs.getLong(<span class="string">&quot;id&quot;</span>));</span><br><span class="line">      employee.setFirstName(rs.getString(<span class="string">&quot;firstname&quot;</span>));</span><br><span class="line">      employee.setLastName(rs.getString(<span class="string">&quot;lastname&quot;</span>));</span><br><span class="line">      employee.setSalary(rs.getBigDecimal(<span class="string">&quot;salary&quot;</span>));</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> employee;</span><br><span class="line">  &#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">  &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (rs != <span class="keyword">null</span>) &#123;</span><br><span class="line">      <span class="keyword">try</span> &#123;</span><br><span class="line">        rs.close();</span><br><span class="line">      &#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span> (stmt != <span class="keyword">null</span>) &#123;</span><br><span class="line">      <span class="keyword">try</span> &#123;</span><br><span class="line">        stmt.close();</span><br><span class="line">      &#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span> (conn != <span class="keyword">null</span>) &#123;</span><br><span class="line">      <span class="keyword">try</span> &#123;</span><br><span class="line">        conn.close();</span><br><span class="line">      &#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;    </span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>可以从上面，变成下面</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> Employee <span class="title">getEmployeeById</span><span class="params">(<span class="keyword">long</span> id)</span> </span>&#123;</span><br><span class="line">  <span class="keyword">return</span> jdbcTemplate.queryForObject(</span><br><span class="line">    <span class="string">&quot;select id, firstname, lastname, salary &quot;</span> +</span><br><span class="line">    <span class="string">&quot;from employee where id=?&quot;</span>,</span><br><span class="line">    <span class="keyword">new</span> RowMapper&lt;Employee&gt;() &#123;</span><br><span class="line">      <span class="function"><span class="keyword">public</span> Employee <span class="title">mapRow</span><span class="params">(ResultSet rs, <span class="keyword">int</span> rowNum)</span> <span class="keyword">throws</span> SQLException </span>&#123;</span><br><span class="line">        Employee employee = <span class="keyword">new</span> Employee();</span><br><span class="line">        employee.setId(rs.getLong(<span class="string">&quot;id&quot;</span>));</span><br><span class="line">        employee.setFirstName(rs.getString(<span class="string">&quot;firstname&quot;</span>));</span><br><span class="line">        employee.setLastName(rs.getString(<span class="string">&quot;lastname&quot;</span>));</span><br><span class="line">        employee.setSalary(rs.getBigDecimal(<span class="string">&quot;salary&quot;</span>));</span><br><span class="line">        <span class="keyword">return</span> employee;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;, </span><br><span class="line">    id);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="bean-生命周期"><a href="#bean-生命周期" class="headerlink" title="bean 生命周期"></a>bean 生命周期</h3><p><img src= "/img/loading.gif" data-src="https://img-blog.csdnimg.cn/20201023165620818.png?,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxMzE4NDAw,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br>Spring 对 bean 进行实例化；</p><p>Spring 将值和 bean 的引用注入到 bean 对应的属性中；</p><p>如果 bean 实现了 BeanNameAware 接口，Spring 将 bean 的 ID 传递给 setBeanName()方法；</p><p>如果 bean 实现了 BeanFactoryAware 接口，Spring 将调用  setBeanFactory() 方法，将 BeanFactory 容器实例传入；</p><p>如果 bean 实现了 ApplicationContextAware 接口，Spring 将调用 setApplicationContext() 方法，将 bean 所在的应用上下文的引用传入进来；</p><p>如果 bean 实现了 BeanPostProcessor 接口，Spring 将调用它们的 postProcessBefore-Initialization() 方法；</p><p>如果 bean 实现了 InitializingBean 接口，Spring 将调用它们的 afterPropertiesSet() 方法。类似地，如果 bean 使用 initmethod 声明了初始化方法，该方法也会被调用；</p><p>如果 bean 实现了 BeanPostProcessor 接口，Spring 将调用它们的 postProcessAfter-Initialization() 方法；</p><p>此时，bean 已经准备就绪，可以被应用程序使用了，它们将一直驻留在应用上下文中，直到该应用上下文被销毁；</p><p>如果 bean 实现了 DisposableBean 接口，Spring 将调用它的 destroy() 接口方法。</p>]]></content>
    
    
    <summary type="html">Spring实战第四版-阅读笔记-第一章</summary>
    
    
    
    <category term="Spring系列学习" scheme="https://www.maolilan.top/categories/Spring%E7%B3%BB%E5%88%97%E5%AD%A6%E4%B9%A0/"/>
    
    
    <category term="笔记" scheme="https://www.maolilan.top/tags/%E7%AC%94%E8%AE%B0/"/>
    
    <category term="Spring实战第四版" scheme="https://www.maolilan.top/tags/Spring%E5%AE%9E%E6%88%98%E7%AC%AC%E5%9B%9B%E7%89%88/"/>
    
  </entry>
  
  <entry>
    <title>idea快捷键推荐</title>
    <link href="https://www.maolilan.top/article/e4efebfa.html"/>
    <id>https://www.maolilan.top/article/e4efebfa.html</id>
    <published>2020-10-15T14:03:33.000Z</published>
    <updated>2020-10-15T14:46:04.659Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\css\APlayer.min.css"><script src="\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\js\Meting.min.js"></script><h1 id="01-ctrl-y-删除当前行"><a href="#01-ctrl-y-删除当前行" class="headerlink" title="01 ctrl+y 删除当前行"></a>01 ctrl+y 删除当前行</h1><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">int</span> a = <span class="number">9</span>; <span class="comment">//01 按下 ctrl + y 就删除</span></span><br></pre></td></tr></table></figure><h1 id="02-ctrl-d-复制当前行"><a href="#02-ctrl-d-复制当前行" class="headerlink" title="02 ctrl + d 复制当前行"></a>02 ctrl + d 复制当前行</h1><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">int</span> a = <span class="number">9</span>;  <span class="comment">//02按下ctrl +d 是复制当前行</span></span><br><span class="line"><span class="keyword">int</span> a = <span class="number">9</span>;</span><br></pre></td></tr></table></figure><h1 id="03-ctrl-n-查找类"><a href="#03-ctrl-n-查找类" class="headerlink" title="03 ctrl+n 查找类"></a>03 ctrl+n 查找类</h1><p><img src= "/img/loading.gif" data-src="https://img-blog.csdnimg.cn/20201015215309960.png#pic_center" alt="在这里插入图片描述"></p><h1 id="04-ctrl-shift-n-查找文件"><a href="#04-ctrl-shift-n-查找文件" class="headerlink" title="04 ctrl + shift + n 查找文件"></a>04 ctrl + shift + n 查找文件</h1><p><img src= "/img/loading.gif" data-src="https://img-blog.csdnimg.cn/20201015215326495.png#pic_center" alt="在这里插入图片描述"></p><h1 id="05-ctrl-shitt-alt-n-查找类中方法或者变量"><a href="#05-ctrl-shitt-alt-n-查找类中方法或者变量" class="headerlink" title="05 ctrl + shitt + alt + n 查找类中方法或者变量"></a>05 ctrl + shitt + alt + n 查找类中方法或者变量</h1><p><img src= "/img/loading.gif" data-src="https://img-blog.csdnimg.cn/20201015215338433.png#pic_center" alt="在这里插入图片描述"></p><h1 id="06-ctrl-p-查看参数信息"><a href="#06-ctrl-p-查看参数信息" class="headerlink" title="06 ctrl + p 查看参数信息"></a>06 ctrl + p 查看参数信息</h1><h1 id="07-ctrl-b-定位当前变量信息"><a href="#07-ctrl-b-定位当前变量信息" class="headerlink" title="07 ctrl + b 定位当前变量信息"></a>07 ctrl + b 定位当前变量信息</h1><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">int</span> a = <span class="number">9</span> ;</span><br><span class="line"><span class="keyword">int</span> c = a + <span class="number">9</span>;  <span class="comment">// 07 在这里按下就找到上一行a的位置</span></span><br></pre></td></tr></table></figure><h1 id="08-ctrl-alt-l-格式化代码"><a href="#08-ctrl-alt-l-格式化代码" class="headerlink" title="08 ctrl + alt + l 格式化代码"></a>08 ctrl + alt + l 格式化代码</h1><p>就是让代码规整</p><h1 id="09-ctrl-alt-o-优化import-也就是说当已经存在的时候会自动删除"><a href="#09-ctrl-alt-o-优化import-也就是说当已经存在的时候会自动删除" class="headerlink" title="09 ctrl + alt + o 优化import 也就是说当已经存在的时候会自动删除"></a>09 ctrl + alt + o 优化import 也就是说当已经存在的时候会自动删除</h1><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> xxx</span><br><span class="line"><span class="keyword">import</span> xxx <span class="comment">//如果两个一样就会把这行删掉</span></span><br></pre></td></tr></table></figure><h1 id="10-shift-enter-在当前行下面开启新行"><a href="#10-shift-enter-在当前行下面开启新行" class="headerlink" title="10 shift + enter 在当前行下面开启新行"></a>10 shift + enter 在当前行下面开启新行</h1><h1 id="11-ctrl-shift-enter-补全if或者for的"><a href="#11-ctrl-shift-enter-补全if或者for的" class="headerlink" title="11 ctrl + shift + enter 补全if或者for的{}"></a>11 ctrl + shift + enter 补全if或者for的{}</h1><p>这个第一次成功了，之后就失败了，不知道为啥，待查错误</p><p>放在括号的位置就可以啦</p><h1 id="12-ctrl-w-选中整个单词"><a href="#12-ctrl-w-选中整个单词" class="headerlink" title="12 ctrl + w 选中整个单词"></a>12 ctrl + w 选中整个单词</h1> <figure class="highlight java"><table><tr><td class="code"><pre><span class="line">string a = <span class="string">&quot;sfsf&quot;</span>;  <span class="comment">// 12 光标在sfsf</span></span><br></pre></td></tr></table></figure><h1 id="13-alt-enter-自动提示完成"><a href="#13-alt-enter-自动提示完成" class="headerlink" title="13 alt + enter 自动提示完成"></a>13 alt + enter 自动提示完成</h1><h1 id="14-ctrl-shift-u-切换大小写"><a href="#14-ctrl-shift-u-切换大小写" class="headerlink" title="14 ctrl + shift + u 切换大小写"></a>14 ctrl + shift + u 切换大小写</h1><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">STRING B = <span class="string">&quot; SFASF &quot;</span>;<span class="comment">// 14 原先都是小写</span></span><br></pre></td></tr></table></figure><h1 id="15-ctrl-e-显示最近编辑的文件列表"><a href="#15-ctrl-e-显示最近编辑的文件列表" class="headerlink" title="15 ctrl + e 显示最近编辑的文件列表"></a>15 ctrl + e 显示最近编辑的文件列表</h1><p><img src= "/img/loading.gif" data-src="https://img-blog.csdnimg.cn/20201015215952540.png?,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxMzE4NDAw,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\js\APlayer.min.js&quot; class=&quot;aplayer-se</summary>
      
    
    
    
    
    <category term="IDEA快捷键" scheme="https://www.maolilan.top/tags/IDEA%E5%BF%AB%E6%8D%B7%E9%94%AE/"/>
    
  </entry>
  
  <entry>
    <title>二叉树类刷题推荐</title>
    <link href="https://www.maolilan.top/article/76783ca1.html"/>
    <id>https://www.maolilan.top/article/76783ca1.html</id>
    <published>2020-10-12T13:20:24.000Z</published>
    <updated>2020-10-15T14:46:04.654Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\css\APlayer.min.css"><script src="\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\js\Meting.min.js"></script>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\js\APlayer.min.js&quot; class=&quot;aplayer-se</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>每日一题群回刷记录(持续更新)</title>
    <link href="https://www.maolilan.top/article/a0595b99.html"/>
    <id>https://www.maolilan.top/article/a0595b99.html</id>
    <published>2020-09-09T15:06:35.000Z</published>
    <updated>2020-09-09T15:08:57.224Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\css\APlayer.min.css"><script src="\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\js\Meting.min.js"></script><h1 id="200-岛屿数量"><a href="#200-岛屿数量" class="headerlink" title="200.岛屿数量"></a>200.岛屿数量</h1><p>给你一个由 ‘1’（陆地）和 ‘0’（水）组成的的二维网格，请你计算网格中岛屿的数量。</p><p>岛屿总是被水包围，并且每座岛屿只能由水平方向或竖直方向上相邻的陆地连接形成。</p><p>此外，你可以假设该网格的四条边均被水包围。</p><p>示例 1:</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">输入:</span><br><span class="line">[</span><br><span class="line">[&#39;1&#39;,&#39;1&#39;,&#39;1&#39;,&#39;1&#39;,&#39;0&#39;],</span><br><span class="line">[&#39;1&#39;,&#39;1&#39;,&#39;0&#39;,&#39;1&#39;,&#39;0&#39;],</span><br><span class="line">[&#39;1&#39;,&#39;1&#39;,&#39;0&#39;,&#39;0&#39;,&#39;0&#39;],</span><br><span class="line">[&#39;0&#39;,&#39;0&#39;,&#39;0&#39;,&#39;0&#39;,&#39;0&#39;]</span><br><span class="line">]</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">输出: 1</span><br></pre></td></tr></table></figure><p>链接：<a href="https://leetcode-cn.com/problems/number-of-islands">https://leetcode-cn.com/problems/number-of-islands</a></p><p>解题思路：深搜，遇到是岛屿就把它标记为海，然后数个数</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">class Solution &#123;</span><br><span class="line">    public int numIslands(char[][] grid) &#123;</span><br><span class="line">         int ans&#x3D;0;</span><br><span class="line">         for(int i&#x3D;0;i&lt;grid.length;i++)</span><br><span class="line">         &#123;</span><br><span class="line">             for(int j&#x3D;0;j&lt;grid[0].length;j++)</span><br><span class="line">             &#123;</span><br><span class="line">                 if(grid[i][j]&#x3D;&#x3D;&#39;1&#39;)</span><br><span class="line">                  &#123;</span><br><span class="line">                      dfs(grid,i,j);</span><br><span class="line">                      ans++;</span><br><span class="line">                  &#125;</span><br><span class="line">             &#125;</span><br><span class="line">         &#125;</span><br><span class="line">         return ans;</span><br><span class="line">    &#125;</span><br><span class="line">    public void dfs(char [][] grid,int i,int j)</span><br><span class="line">    &#123;</span><br><span class="line">      if(i&lt;0 || j&lt;0 || i&gt;&#x3D;grid.length || j&gt;&#x3D;grid[0].length || grid[i][j]&#x3D;&#x3D; &#39;0&#39; ) return; &#x2F;&#x2F;说明这个岛周围已经全部是海了，即标记完成了</span><br><span class="line">      grid[i][j]&#x3D;&#39;0&#39;;</span><br><span class="line">      dfs(grid,i+1,j); &#x2F;&#x2F;上面</span><br><span class="line">      dfs(grid,i,j+1);&#x2F;&#x2F;右边</span><br><span class="line">      dfs(grid,i-1,j);&#x2F;&#x2F;下边</span><br><span class="line">      dfs(grid,i,j-1);&#x2F;&#x2F;左边</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="199-二叉树的右视图"><a href="#199-二叉树的右视图" class="headerlink" title="199.二叉树的右视图"></a>199.二叉树的右视图</h1><p>给定一棵二叉树，想象自己站在它的右侧，按照从顶部到底部的顺序，返回从右侧所能看到的节点值。</p><p>示例:</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">输入: [1,2,3,null,5,null,4]</span><br><span class="line">输出: [1, 3, 4]</span><br></pre></td></tr></table></figure><p>解释:</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">   1            &lt;---</span><br><span class="line"> &#x2F;   \</span><br><span class="line">2     3         &lt;---</span><br><span class="line"> \     \</span><br><span class="line">  5     4       &lt;---</span><br></pre></td></tr></table></figure><p>  解题思路：层次遍历，选择保存那每层的最后一个<br>  <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">  &#x2F;**</span><br><span class="line"> * Definition for a binary tree node.</span><br><span class="line"> * public class TreeNode &#123;</span><br><span class="line"> *     int val;</span><br><span class="line"> *     TreeNode left;</span><br><span class="line"> *     TreeNode right;</span><br><span class="line"> *     TreeNode(int x) &#123; val &#x3D; x; &#125;</span><br><span class="line"> * &#125;</span><br><span class="line"> *&#x2F;</span><br><span class="line">class Solution &#123;</span><br><span class="line">    public List&lt;Integer&gt; rightSideView(TreeNode root) &#123;</span><br><span class="line">       List&lt;Integer&gt; ans&#x3D;new LinkedList&lt;&gt;();</span><br><span class="line">       Queue&lt;TreeNode&gt; queue&#x3D;new LinkedList&lt;&gt;();</span><br><span class="line">       if(root&#x3D;&#x3D;null) return ans;</span><br><span class="line">       queue.offer(root);</span><br><span class="line">       while(!queue.isEmpty())</span><br><span class="line">       &#123;</span><br><span class="line">           int s&#x3D;queue.size();</span><br><span class="line">           for(int i&#x3D;0;i&lt;s;i++)</span><br><span class="line">           &#123;</span><br><span class="line">               TreeNode cur&#x3D;queue.poll();</span><br><span class="line">               if(cur.left!&#x3D;null)</span><br><span class="line">                  queue.offer(cur.left);</span><br><span class="line">               if(cur.right!&#x3D;null)</span><br><span class="line">                  queue.offer(cur.right);</span><br><span class="line">                if(i&#x3D;&#x3D;s-1)</span><br><span class="line">                   ans.add(cur.val);</span><br><span class="line">           &#125;</span><br><span class="line">       &#125;</span><br><span class="line">       return ans;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h1 id="197-打家劫舍"><a href="#197-打家劫舍" class="headerlink" title="197.打家劫舍"></a>197.打家劫舍</h1><p>你是一个专业的小偷，计划偷窃沿街的房屋。每间房内都藏有一定的现金，影响你偷窃的唯一制约因素就是相邻的房屋装有相互连通的防盗系统，如果两间相邻的房屋在同一晚上被小偷闯入，系统会自动报警。</p><p>给定一个代表每个房屋存放金额的非负整数数组，计算你 不触动警报装置的情况下 ，一夜之内能够偷窃到的最高金额。</p><p>示例 1：</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">输入：[1,2,3,1]</span><br><span class="line">输出：4</span><br><span class="line">解释：偷窃 1 号房屋 (金额 &#x3D; 1) ，然后偷窃 3 号房屋 (金额 &#x3D; 3)。</span><br><span class="line">     偷窃到的最高金额 &#x3D; 1 + 3 &#x3D; 4 。</span><br><span class="line">示例 2：</span><br><span class="line"></span><br><span class="line">输入：[2,7,9,3,1]</span><br><span class="line">输出：12</span><br><span class="line">解释：偷窃 1 号房屋 (金额 &#x3D; 2), 偷窃 3 号房屋 (金额 &#x3D; 9)，接着偷窃 5 号房屋 (金额 &#x3D; 1)。</span><br><span class="line">     偷窃到的最高金额 &#x3D; 2 + 9 + 1 &#x3D; 12 。</span><br><span class="line"> </span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">链接：https:&#x2F;&#x2F;leetcode-cn.com&#x2F;problems&#x2F;house-robber</span><br></pre></td></tr></table></figure><p>  解题思路：动态规划，只有一个房间选择偷，也就是dp[0]=1,如果两个房间会选择其中那个最大的，如果超过两个房间，那么要么是dp[i-1]，要么是dp[i-2]+nums[i]。其中dp[i]表示偷取i号房间所获取的最大值。<br>  <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">  class Solution &#123;</span><br><span class="line">    public int rob(int[] nums) &#123;</span><br><span class="line">           int  len&#x3D;nums.length;</span><br><span class="line">           if(len&#x3D;&#x3D;0) return 0;</span><br><span class="line">           if(len&#x3D;&#x3D;1) return nums[0];</span><br><span class="line">           int [] dp&#x3D;new int[len];</span><br><span class="line">           dp[0]&#x3D;nums[0];</span><br><span class="line">           dp[1]&#x3D;Math.max(nums[0],nums[1]);</span><br><span class="line">           for(int i&#x3D;2;i&lt;len;i++)</span><br><span class="line">           &#123;</span><br><span class="line">               dp[i]&#x3D;Math.max(dp[i-1],dp[i-2]+nums[i]);</span><br><span class="line">           &#125;</span><br><span class="line">           return dp[len-1];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h1 id="191-位1的个数"><a href="#191-位1的个数" class="headerlink" title="191.位1的个数"></a>191.位1的个数</h1><p>编写一个函数，输入是一个无符号整数，返回其二进制表达式中数字位数为 ‘1’ 的个数（也被称为汉明重量）。</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">示例 1：</span><br><span class="line"></span><br><span class="line">输入：00000000000000000000000000001011</span><br><span class="line">输出：3</span><br><span class="line">解释：输入的二进制串 00000000000000000000000000001011 中，共有三位为 &#39;1&#39;。</span><br><span class="line">示例 2：</span><br><span class="line"></span><br><span class="line">输入：00000000000000000000000010000000</span><br><span class="line">输出：1</span><br><span class="line">解释：输入的二进制串 00000000000000000000000010000000 中，共有一位为 &#39;1&#39;。</span><br><span class="line">示例 3：</span><br><span class="line"></span><br><span class="line">输入：11111111111111111111111111111101</span><br><span class="line">输出：31</span><br><span class="line">解释：输入的二进制串 11111111111111111111111111111101 中，共有 31 位为 &#39;1&#39;。</span><br></pre></td></tr></table></figure><p>解题思路：<br>靠着我大佬室友的思路</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">public class Solution &#123;</span><br><span class="line">    &#x2F;&#x2F; you need to treat n as an unsigned value</span><br><span class="line">    public int hammingWeight(int n) &#123;</span><br><span class="line">        int ans&#x3D;0;</span><br><span class="line">        while (n !&#x3D; 0) &#123;&#x2F;&#x2F;采用&gt;0如果是负数，会导致直接停止</span><br><span class="line">            ans +&#x3D; n &amp; 1;&#x2F;&#x2F;计算最后一位是不是等于1，如果等于1直接加，等于0 ans不变</span><br><span class="line">            n &gt;&gt;&gt;&#x3D; 1;</span><br><span class="line">        &#125;</span><br><span class="line">        return ans;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="268-缺失数字"><a href="#268-缺失数字" class="headerlink" title="268. 缺失数字"></a>268. 缺失数字</h1><p>给定一个包含 0, 1, 2, …, n 中 n 个数的序列，找出 0 .. n 中没有出现在序列中的那个数。</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">示例 1:</span><br><span class="line"></span><br><span class="line">输入: [3,0,1]</span><br><span class="line">输出: 2</span><br><span class="line">示例 2:</span><br><span class="line"></span><br><span class="line">输入: [9,6,4,2,3,5,7,0,1]</span><br><span class="line">输出: 8</span><br></pre></td></tr></table></figure><p>解题思路：位运算。0到n。和数组做异或，剩下的就是答案。</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">class Solution &#123;</span><br><span class="line">    public int missingNumber(int[] nums) &#123;</span><br><span class="line">        int res &#x3D; nums.length;</span><br><span class="line">        for (int i &#x3D; 0; i &lt; nums.length; i++) &#123;</span><br><span class="line">            res &#x3D; res ^ i ^ nums[i];</span><br><span class="line">        &#125;</span><br><span class="line">        return res ;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="190-颠倒二进制位"><a href="#190-颠倒二进制位" class="headerlink" title="190. 颠倒二进制位"></a>190. 颠倒二进制位</h1><p>颠倒给定的 32 位无符号整数的二进制位。</p> <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">示例 1：</span><br><span class="line"></span><br><span class="line">输入: 00000010100101000001111010011100</span><br><span class="line">输出: 00111001011110000010100101000000</span><br><span class="line">解释: 输入的二进制串 00000010100101000001111010011100 表示无符号整数 43261596，</span><br><span class="line">     因此返回 964176192，其二进制表示形式为 00111001011110000010100101000000。</span><br><span class="line">示例 2：</span><br><span class="line"></span><br><span class="line">输入：11111111111111111111111111111101</span><br><span class="line">输出：10111111111111111111111111111111</span><br><span class="line">解释：输入的二进制串 11111111111111111111111111111101 表示无符号整数 4294967293，</span><br><span class="line">     因此返回 3221225471 其二进制表示形式为 10111111111111111111111111111111 。</span><br></pre></td></tr></table></figure><p> 解题思路：<br> <img src= "/img/loading.gif" data-src="https://img-blog.csdnimg.cn/20200909220153208.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxMzE4NDAw,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br>链接:<a href="https://mp.weixin.qq.com/s/gKU7nzlZxQar7yIJQoc6BA">https://mp.weixin.qq.com/s/gKU7nzlZxQar7yIJQoc6BA</a></p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">public class Solution &#123;</span><br><span class="line">    &#x2F;&#x2F; you need treat n as an unsigned value</span><br><span class="line">    public int reverseBits(int n) &#123;</span><br><span class="line">        int res &#x3D; 0;</span><br><span class="line">       &#x2F;&#x2F; while (n !&#x3D; 0) &#x2F;&#x2F;如果使用这个的话，会缺失，00010000，前面的零就已经跳出去</span><br><span class="line">       for(int i&#x3D;0;i&lt;32;i++)</span><br><span class="line">       &#123;</span><br><span class="line">            res|&#x3D;(n&amp;1);</span><br><span class="line">            if(i&#x3D;&#x3D;31)</span><br><span class="line">            break;</span><br><span class="line">            res&lt;&lt;&#x3D;1;</span><br><span class="line">            n &gt;&gt;&#x3D; 1;</span><br><span class="line">        &#125;</span><br><span class="line">        return res;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">每日一题群回刷记录(持续更新)</summary>
    
    
    
    <category term="刷题笔记" scheme="https://www.maolilan.top/categories/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0/"/>
    
    
    <category term="笔记" scheme="https://www.maolilan.top/tags/%E7%AC%94%E8%AE%B0/"/>
    
    <category term="leetcode" scheme="https://www.maolilan.top/tags/leetcode/"/>
    
  </entry>
  
  <entry>
    <title>Leetocde刷题推荐-数组经典题目</title>
    <link href="https://www.maolilan.top/article/eb0fc959.html"/>
    <id>https://www.maolilan.top/article/eb0fc959.html</id>
    <published>2020-08-25T06:58:44.000Z</published>
    <updated>2020-08-25T07:03:50.366Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\css\APlayer.min.css"><script src="\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\js\Meting.min.js"></script><p>源于</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">https:&#x2F;&#x2F;github.com&#x2F;youngyangyang04&#x2F;leetcode-master#%E7%AE%97%E6%B3%95%E9%9D%A2%E8%AF%95%E6%80%9D%E7%BB%B4%E5%AF%BC%E5%9B%BE</span><br></pre></td></tr></table></figure><p>这边是巩固自己的一个记录<br>这个老哥的公众号名： 代码随想录</p><h1 id="0035-搜索插入位置"><a href="#0035-搜索插入位置" class="headerlink" title="0035.搜索插入位置"></a>0035.搜索插入位置</h1><p>给定一个排序数组和一个目标值，在数组中找到目标值，并返回其索引。如果目标值不存在于数组中，返回它将会被按顺序插入的位置。</p><p>你可以假设数组中无重复元素。</p><p>示例 1:</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">输入: [1,3,5,6], 5</span><br><span class="line">输出: 2</span><br></pre></td></tr></table></figure><p>示例 2:</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">输入: [1,3,5,6], 2</span><br><span class="line">输出: 1</span><br></pre></td></tr></table></figure><p>示例 3:</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">输入: [1,3,5,6], 7</span><br><span class="line">输出: 4</span><br></pre></td></tr></table></figure><p>示例 4:</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">输入: [1,3,5,6], 0</span><br><span class="line">输出: 0</span><br></pre></td></tr></table></figure><p><strong>解题思路</strong>：看到有序就知道这个是考察二分<br>总共有四种可能，不在这个数组中在最前面，不在这个数组中在最后面，在这个数组中且目标值在数组中出现，在这个数组中且目标值并没有在数组中出现。</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">searchInsert</span><span class="params">(<span class="keyword">int</span>[] nums, <span class="keyword">int</span> target)</span> </span>&#123;</span><br><span class="line">          </span><br><span class="line">          <span class="keyword">int</span> left=<span class="number">0</span>;</span><br><span class="line">          <span class="keyword">int</span> right=nums.length-<span class="number">1</span>;</span><br><span class="line">          <span class="keyword">while</span>(left&lt;=right)</span><br><span class="line">          &#123;</span><br><span class="line">              <span class="keyword">int</span> mid=left+(right-left)/<span class="number">2</span>;</span><br><span class="line">              <span class="keyword">if</span>(nums[mid]&gt;target)</span><br><span class="line">                     right=mid-<span class="number">1</span>;</span><br><span class="line">              <span class="keyword">else</span> <span class="keyword">if</span>(nums[mid]&lt;target)</span><br><span class="line">                    left=mid+<span class="number">1</span>;</span><br><span class="line">              <span class="keyword">else</span></span><br><span class="line">                   <span class="keyword">return</span> mid;<span class="comment">//这个对应情况3</span></span><br><span class="line"></span><br><span class="line">          &#125;</span><br><span class="line">          <span class="keyword">return</span> left;<span class="comment">//这个对应情况2和4，如果是在最前面就对应情况1</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="0027-移除元素"><a href="#0027-移除元素" class="headerlink" title="0027.移除元素"></a>0027.移除元素</h1><p>给你一个数组 nums 和一个值 val，你需要 原地 移除所有数值等于 val 的元素，并返回移除后数组的新长度。</p><p>不要使用额外的数组空间，你必须仅使用 O(1) 额外空间并 原地 修改输入数组。</p><p>元素的顺序可以改变。你不需要考虑数组中超出新长度后面的元素。</p><p>示例 1:</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">给定 nums &#x3D; [3,2,2,3], val &#x3D; 3,</span><br><span class="line"></span><br><span class="line">函数应该返回新的长度 2, 并且 nums 中的前两个元素均为 2。</span><br><span class="line"></span><br><span class="line">你不需要考虑数组中超出新长度后面的元素。</span><br></pre></td></tr></table></figure><p>示例 2:</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">给定 nums &#x3D; [0,1,2,2,3,0,4,2], val &#x3D; 2,</span><br><span class="line"></span><br><span class="line">函数应该返回新的长度 5, 并且 nums 中的前五个元素为 0, 1, 3, 0, 4。</span><br><span class="line"></span><br><span class="line">注意这五个元素可为任意顺序。</span><br><span class="line"></span><br><span class="line">你不需要考虑数组中超出新长度后面的元素。</span><br></pre></td></tr></table></figure><p><strong>解题思路</strong>:遇到不等于目标值的就进行重新赋值。</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">removeElement</span><span class="params">(<span class="keyword">int</span>[] nums, <span class="keyword">int</span> val)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> index=<span class="number">0</span>;<span class="comment">//真正的下标</span></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;nums.length;i++)</span><br><span class="line">          <span class="keyword">if</span>(nums[i]!=val)</span><br><span class="line">             nums[index++]=nums[i];</span><br><span class="line">        <span class="keyword">return</span> index;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="0026-删除排序数组中的重复项"><a href="#0026-删除排序数组中的重复项" class="headerlink" title="0026.删除排序数组中的重复项"></a>0026.删除排序数组中的重复项</h1><p>给定一个排序数组，你需要在 原地 删除重复出现的元素，使得每个元素只出现一次，返回移除后数组的新长度。</p><p>不要使用额外的数组空间，你必须在 原地 修改输入数组 并在使用 O(1) 额外空间的条件下完成。</p><p>示例 1:</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">给定数组 nums &#x3D; [1,1,2], </span><br><span class="line"></span><br><span class="line">函数应该返回新的长度 2, 并且原数组 nums 的前两个元素被修改为 1, 2。 </span><br><span class="line"></span><br><span class="line">你不需要考虑数组中超出新长度后面的元素。</span><br></pre></td></tr></table></figure><p>示例 2:</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">给定 nums &#x3D; [0,0,1,1,1,2,2,3,3,4],</span><br><span class="line"></span><br><span class="line">函数应该返回新的长度 5, 并且原数组 nums 的前五个元素被修改为 0, 1, 2, 3, 4。</span><br><span class="line"></span><br><span class="line">你不需要考虑数组中超出新长度后面的元素。</span><br></pre></td></tr></table></figure><p><strong>解题思路</strong>：和上题有一点类似，一个新的下标来记录覆盖后的数组</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">removeDuplicates</span><span class="params">(<span class="keyword">int</span>[] nums)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> index=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">if</span>(nums.length==<span class="number">0</span>) <span class="keyword">return</span> <span class="number">0</span>; <span class="comment">//防止空的数组</span></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;nums.length-<span class="number">1</span>;i++)</span><br><span class="line">          <span class="keyword">if</span>(nums[i]!=nums[i+<span class="number">1</span>])</span><br><span class="line">             nums[++index]=nums[i+<span class="number">1</span>]; <span class="comment">//上一题是从0开始，这里是nums[0]不变，我们来找下一个，和上题有点区别</span></span><br><span class="line">        <span class="keyword">return</span> index+<span class="number">1</span>;  <span class="comment">//这里是因为终止条件是nums.length-1 只记录了下标而不是长度。</span></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="0209-长度最小的子数组"><a href="#0209-长度最小的子数组" class="headerlink" title="0209.长度最小的子数组"></a>0209.长度最小的子数组</h1><p>给定一个含有 n 个正整数的数组和一个正整数 s ，找出该数组中满足其和 ≥ s 的长度最小的 连续 子数组，并返回其长度。如果不存在符合条件的子数组，返回 0。</p><p>示例：</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">输入：s &#x3D; 7, nums &#x3D; [2,3,1,2,4,3]</span><br><span class="line">输出：2</span><br><span class="line">解释：子数组 [4,3] 是该条件下的长度最小的子数组。</span><br></pre></td></tr></table></figure><p>解题思路：滑动窗口<br>动画可以看这个老哥的题解：</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">https:&#x2F;&#x2F;leetcode-cn.com&#x2F;problems&#x2F;minimum-size-subarray-sum&#x2F;solution&#x2F;209-chang-du-zui-xiao-de-zi-shu-zu-hua-dong-chua-6&#x2F;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">class Solution &#123;</span><br><span class="line">    public int minSubArrayLen(int s, int[] nums) &#123;</span><br><span class="line">         int result&#x3D;Integer.MAX_VALUE;</span><br><span class="line">         int sum&#x3D;0;</span><br><span class="line">         int i&#x3D;0;</span><br><span class="line">         int sublength&#x3D;0;</span><br><span class="line">         for(int j&#x3D;0;j&lt;nums.length;j++)</span><br><span class="line">           &#123;</span><br><span class="line">               sum+&#x3D;nums[j];</span><br><span class="line">               while(sum&gt;&#x3D;s)</span><br><span class="line">               &#123;</span><br><span class="line">                   sublength&#x3D;(j-i+1);</span><br><span class="line">                   result&#x3D;Math.min(result,sublength);</span><br><span class="line">                   sum-&#x3D;nums[i++];</span><br><span class="line">               &#125;</span><br><span class="line">           &#125;</span><br><span class="line">        return result&#x3D;&#x3D;Integer.MAX_VALUE ? 0:result;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="0059-螺旋矩阵II"><a href="#0059-螺旋矩阵II" class="headerlink" title="0059.螺旋矩阵II"></a>0059.螺旋矩阵II</h1><p>给定一个正整数 n，生成一个包含 1 到 n2 所有元素，且元素按顺时针顺序螺旋排列的正方形矩阵。</p><p>示例:</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">输入: 3</span><br><span class="line">输出:</span><br><span class="line">[</span><br><span class="line"> [ 1, 2, 3 ],</span><br><span class="line"> [ 8, 9, 4 ],</span><br><span class="line"> [ 7, 6, 5 ]</span><br><span class="line">]</span><br></pre></td></tr></table></figure><p>解题思路：从左到右，从上到下，从右到左，从下到上，注意边界。<br>参考：</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">https:&#x2F;&#x2F;leetcode-cn.com&#x2F;problems&#x2F;spiral-matrix-ii&#x2F;solution&#x2F;spiral-matrix-ii-mo-ni-fa-she-ding-bian-jie-qing-x&#x2F;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">int</span>[][] generateMatrix(<span class="keyword">int</span> n) &#123;</span><br><span class="line">       <span class="keyword">int</span> l=<span class="number">0</span>,r=n-<span class="number">1</span>,t=<span class="number">0</span>,b=n-<span class="number">1</span>;</span><br><span class="line">       <span class="keyword">int</span> [][]mat=<span class="keyword">new</span> <span class="keyword">int</span>[n][n];</span><br><span class="line">       <span class="keyword">int</span> num=<span class="number">1</span>;</span><br><span class="line">       <span class="keyword">while</span>(num&lt;=n*n)</span><br><span class="line">       &#123;</span><br><span class="line">           <span class="keyword">for</span>(<span class="keyword">int</span> i=l;i&lt;=r;i++) mat[t][i]=num++;<span class="comment">//从l到r</span></span><br><span class="line">           t++;</span><br><span class="line">           <span class="keyword">for</span>(<span class="keyword">int</span> i=t;i&lt;=b;i++) mat[i][r]=num++;<span class="comment">//从t到b</span></span><br><span class="line">           r--;</span><br><span class="line">           <span class="keyword">for</span>(<span class="keyword">int</span> i=r;i&gt;=l;i--) mat[b][i]=num++;<span class="comment">//从r到l</span></span><br><span class="line">           b--;</span><br><span class="line">           <span class="keyword">for</span>(<span class="keyword">int</span> i=b;i&gt;=t;i--) mat[i][l]=num++;<span class="comment">//从b到t</span></span><br><span class="line">           l++;</span><br><span class="line">       &#125;</span><br><span class="line">       <span class="keyword">return</span> mat;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>今年滴滴秋招的第一题就是这个的一种变形。</p>]]></content>
    
    
    <summary type="html">小浩算法-java题解</summary>
    
    
    
    <category term="刷题笔记" scheme="https://www.maolilan.top/categories/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0/"/>
    
    
    <category term="笔记" scheme="https://www.maolilan.top/tags/%E7%AC%94%E8%AE%B0/"/>
    
    <category term="leetcode" scheme="https://www.maolilan.top/tags/leetcode/"/>
    
  </entry>
  
  <entry>
    <title>云服务器实现表白和简历网页并绑定域名</title>
    <link href="https://www.maolilan.top/article/e21e4e82.html"/>
    <id>https://www.maolilan.top/article/e21e4e82.html</id>
    <published>2020-08-10T15:17:56.000Z</published>
    <updated>2020-08-10T16:21:00.901Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\css\APlayer.min.css"><script src="\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\js\Meting.min.js"></script><h1 id="两个课程的地址"><a href="#两个课程的地址" class="headerlink" title="两个课程的地址"></a>两个课程的地址</h1><p>表白网页：</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">https:&#x2F;&#x2F;developer.aliyun.com&#x2F;course&#x2F;146?spm&#x3D;a2c6h.13788107.J_7606789820.5.450750a34AEiZH</span><br></pre></td></tr></table></figure><p>简历网页：</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">https:&#x2F;&#x2F;developer.aliyun.com&#x2F;course&#x2F;147?spm&#x3D;a2c6h.13788107.J_7606789820.7.450750a34AEiZH</span><br></pre></td></tr></table></figure><h1 id="课程用到的文件"><a href="#课程用到的文件" class="headerlink" title="课程用到的文件"></a>课程用到的文件</h1><p>简历下载链接</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">https:&#x2F;&#x2F;xuecdn1.aliyunedu.net&#x2F;coursematerial-147&#x2F;20170831044130-kedbw4pk2g0kc84o?OSSAccessKeyId&#x3D;LTAI0WGFGzC2WcSk&amp;Expires&#x3D;1597068778&amp;Signature&#x3D;DZK32%2FpECnfrXyCjatFPWh8B378%3D&amp;response-content-disposition&#x3D;attachment%3Bfilename%3D%22resume.zip%22</span><br></pre></td></tr></table></figure><p>表白下载链接</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">https:&#x2F;&#x2F;xuecdn1.aliyunedu.net&#x2F;coursematerial-146&#x2F;20170829111608-n3fnodrm5a84cws0?OSSAccessKeyId&#x3D;LTAI0WGFGzC2WcSk&amp;Expires&#x3D;1597069283&amp;Signature&#x3D;Vu94DS9hAD0WjvIE1l3LAg3vFs4%3D&amp;response-content-disposition&#x3D;attachment%3Bfilename%3D%22love.zip%22</span><br></pre></td></tr></table></figure><h1 id="实现步骤-未绑定域名"><a href="#实现步骤-未绑定域名" class="headerlink" title="实现步骤(未绑定域名)"></a>实现步骤(未绑定域名)</h1><h2 id="确定是centos系统-LNMP环境。"><a href="#确定是centos系统-LNMP环境。" class="headerlink" title="确定是centos系统+LNMP环境。"></a>确定是centos系统+LNMP环境。</h2><p>更改系统教程，以阿里云服务器为例</p><h4 id="进入控制台强行停止"><a href="#进入控制台强行停止" class="headerlink" title="进入控制台强行停止"></a>进入控制台强行停止</h4><p><img src= "/img/loading.gif" data-src="https://img-blog.csdnimg.cn/20200807024209727.png?x-oss-process=,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxMzE4NDAw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h4 id="更换系统盘"><a href="#更换系统盘" class="headerlink" title="更换系统盘"></a>更换系统盘</h4><p><img src= "/img/loading.gif" data-src="https://img-blog.csdnimg.cn/20200807024623217.png?x-oss-process=,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxMzE4NDAw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h4 id="进入镜像市场"><a href="#进入镜像市场" class="headerlink" title="进入镜像市场"></a>进入镜像市场</h4><p><img src= "/img/loading.gif" data-src="https://img-blog.csdnimg.cn/20200807024649291.png?x-oss-process=,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxMzE4NDAw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h4 id="选择公共镜像的centos即可，我的版本是7-8"><a href="#选择公共镜像的centos即可，我的版本是7-8" class="headerlink" title="选择公共镜像的centos即可，我的版本是7.8"></a>选择公共镜像的centos即可，我的版本是7.8</h4><p><img src= "/img/loading.gif" data-src="https://img-blog.csdnimg.cn/2020081013434017.png" alt="在这里插入图片描述"></p><h2 id="安装LNMP环境"><a href="#安装LNMP环境" class="headerlink" title="安装LNMP环境"></a>安装LNMP环境</h2><p>教程链接： <a href="https://lnmp.org/install.html">https://lnmp.org/install.html</a></p><h3 id="screen-S-lnmp"><a href="#screen-S-lnmp" class="headerlink" title="screen -S lnmp"></a>screen -S lnmp</h3><p>如果提示screen: command not found 命令不存在可以执行：yum install screen 或 apt-get install screen安装</p><h3 id="wget-http-soft-vpser-net-lnmp-lnmp1-7-tar-gz-cO-lnmp1-7-tar-gz-amp-amp-tar-zxf-lnmp1-7-tar-gz-amp-amp-cd-lnmp1-7-amp-amp-install-sh-lnmp"><a href="#wget-http-soft-vpser-net-lnmp-lnmp1-7-tar-gz-cO-lnmp1-7-tar-gz-amp-amp-tar-zxf-lnmp1-7-tar-gz-amp-amp-cd-lnmp1-7-amp-amp-install-sh-lnmp" class="headerlink" title="wget http://soft.vpser.net/lnmp/lnmp1.7.tar.gz -cO lnmp1.7.tar.gz &amp;&amp; tar zxf lnmp1.7.tar.gz &amp;&amp; cd lnmp1.7 &amp;&amp; ./install.sh lnmp"></a>wget <a href="http://soft.vpser.net/lnmp/lnmp1.7.tar.gz">http://soft.vpser.net/lnmp/lnmp1.7.tar.gz</a> -cO lnmp1.7.tar.gz &amp;&amp; tar zxf lnmp1.7.tar.gz &amp;&amp; cd lnmp1.7 &amp;&amp; ./install.sh lnmp</h3><p><img src= "/img/loading.gif" data-src="https://img-blog.csdnimg.cn/20200808195453916.png?x-oss-process=,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxMzE4NDAw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>选择 4<br><img src= "/img/loading.gif" data-src="https://img-blog.csdnimg.cn/20200808195529275.png?x-oss-process=,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxMzE4NDAw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>选择8</p><h3 id="后续一直回车"><a href="#后续一直回车" class="headerlink" title="后续一直回车"></a>后续一直回车</h3><h2 id="使用Filezilla上传文件"><a href="#使用Filezilla上传文件" class="headerlink" title="使用Filezilla上传文件"></a>使用Filezilla上传文件</h2><p>将之前下载的本地文件夹的这些文件(左边)全部拖到服务器的/home/wwwroot/default/xxx 其中xxx是你自己命名的。</p><p>拖之前先新建一个old文件夹，并将之前的其他文件全部放进去。<br><img src= "/img/loading.gif" data-src="https://img-blog.csdnimg.cn/20200810224920121.png?x-oss-process=,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxMzE4NDAw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>然后拖进去<br><img src= "/img/loading.gif" data-src="https://img-blog.csdnimg.cn/20200810225322376.png?x-oss-process=,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxMzE4NDAw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>左边是本地的，全选然后直接拖进去就行。</p><h2 id="验证是否成功"><a href="#验证是否成功" class="headerlink" title="验证是否成功"></a>验证是否成功</h2><p>访问</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">http:&#x2F;&#x2F;你的公网ip&#x2F;xxx 其中xxx是刚刚你自己命名的</span><br></pre></td></tr></table></figure><p>例如</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">http:&#x2F;&#x2F;123.123.123.123&#x2F;resume 假设123是我的公网ip</span><br></pre></td></tr></table></figure><p>那么应该是这样的<br><img src= "/img/loading.gif" data-src="https://img-blog.csdnimg.cn/2020081022521035.png?x-oss-process=,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxMzE4NDAw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>这个是我修改过的，原始文件不是这样的。</p><h1 id="绑定域名"><a href="#绑定域名" class="headerlink" title="绑定域名"></a>绑定域名</h1><p>教程：<a href="https://lnmp.org/faq/lnmp-vhost-add-howto.html">https://lnmp.org/faq/lnmp-vhost-add-howto.html</a><br>打开putty</p><h2 id="输入lnmp-vhost-add"><a href="#输入lnmp-vhost-add" class="headerlink" title="输入lnmp  vhost add"></a>输入lnmp  vhost add</h2><p><img src= "/img/loading.gif" data-src="https://img-blog.csdnimg.cn/20200808203331747.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxMzE4NDAw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h2 id="输入你想绑定的域名"><a href="#输入你想绑定的域名" class="headerlink" title="输入你想绑定的域名"></a>输入你想绑定的域名</h2><p>比如 a.com<br><img src= "/img/loading.gif" data-src="https://img-blog.csdnimg.cn/20200808203525512.png" alt="在这里插入图片描述"></p><h2 id="其他信息确定"><a href="#其他信息确定" class="headerlink" title="其他信息确定"></a>其他信息确定</h2><p>然后根据需求是否选择其他域名绑定，回车是n</p><p><img src= "/img/loading.gif" data-src="https://img-blog.csdnimg.cn/20200808203600214.png" alt="在这里插入图片描述"><br>默认目录，选择我的需求就是让他去/home/wwwroot/default/old<br>后面是一些其他的伪静态、日志、协议证书等。<br><img src= "/img/loading.gif" data-src="https://img-blog.csdnimg.cn/20200808203801904.png" alt="在这里插入图片描述"><br>然后出现一个这个就说明成功了，这里是例子。<br><img src= "/img/loading.gif" data-src="https://img-blog.csdnimg.cn/20200808204200683.png" alt="在这里插入图片描述"><br>实际上我的目录/home/wwwroot/default/old<br><img src= "/img/loading.gif" data-src="https://img-blog.csdnimg.cn/20200808204309249.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxMzE4NDAw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h2 id="添加DNS解析"><a href="#添加DNS解析" class="headerlink" title="添加DNS解析"></a>添加DNS解析</h2><p>去买域名的地方添加A解析<br>比如<br><img src= "/img/loading.gif" data-src="https://img-blog.csdnimg.cn/20200810230014974.png?x-oss-process=,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxMzE4NDAw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h2 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h2><p>访问解析好的域名<br>比如我最后实际是绑定了到了resume.maolilan.top<br>访问</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">http:&#x2F;&#x2F;你绑定的域名</span><br></pre></td></tr></table></figure><p><img src= "/img/loading.gif" data-src="https://img-blog.csdnimg.cn/20200810230302688.png?x-oss-process=,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxMzE4NDAw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><p>表白网站类推就是了，万一哪天用上了是吧。</p><p><img src= "/img/loading.gif" data-src="https://img-blog.csdnimg.cn/20200810230430763.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxMzE4NDAw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h1 id="又拍云加速-无备案请略过）"><a href="#又拍云加速-无备案请略过）" class="headerlink" title="又拍云加速(无备案请略过）"></a>又拍云加速(无备案请略过）</h1><p>加入又拍云联盟可以每月领取15G流量和10G云存储空间</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">https:&#x2F;&#x2F;console.upyun.com&#x2F;register&#x2F;?invite&#x3D;ryoKM-iWP</span><br></pre></td></tr></table></figure><h2 id="创建服务"><a href="#创建服务" class="headerlink" title="创建服务"></a>创建服务</h2><p><img src= "/img/loading.gif" data-src="https://img-blog.csdnimg.cn/20200810230622764.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxMzE4NDAw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>加速域名就是你准备让人看的域名，源站就是云服务器的公网ip</p><h2 id="绑定域名-1"><a href="#绑定域名-1" class="headerlink" title="绑定域名"></a>绑定域名</h2><p><img src= "/img/loading.gif" data-src="https://img-blog.csdnimg.cn/20200810230759188.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxMzE4NDAw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>这个时候要删除之前的A解析，不然会冲突的。</p><h2 id="选择HTTPS"><a href="#选择HTTPS" class="headerlink" title="选择HTTPS"></a>选择HTTPS</h2><p>如果你想让别人访问你的网页是https，那么可以申请一个免费证书<img src= "/img/loading.gif" data-src="https://img-blog.csdnimg.cn/20200810230949911.png?x-oss-process=,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxMzE4NDAw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>下面有一个证书申购，去那里申请免费的然后根据要求补全就好</p><h2 id="选择-协议全程跟随"><a href="#选择-协议全程跟随" class="headerlink" title="选择 协议全程跟随"></a>选择 协议全程跟随</h2><p>进入 缓存控制<br><img src= "/img/loading.gif" data-src="https://img-blog.csdnimg.cn/20200810231048246.png?x-oss-process=,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxMzE4NDAw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h2 id="修改访问设置"><a href="#修改访问设置" class="headerlink" title="修改访问设置"></a>修改访问设置</h2><p><img src= "/img/loading.gif" data-src="https://img-blog.csdnimg.cn/20200810231223843.png?x-oss-process=i,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxMzE4NDAw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>ip限制<br><img src= "/img/loading.gif" data-src="https://img-blog.csdnimg.cn/20200810231250664.png?x-oss-process=,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxMzE4NDAw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>cc防护</p><p><img src= "/img/loading.gif" data-src="https://img-blog.csdnimg.cn/20200810231327136.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxMzE4NDAw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>]]></content>
    
    
    <summary type="html">云服务器实现表白和简历网页并绑定域名</summary>
    
    
    
    <category term="阿里云学习笔记" scheme="https://www.maolilan.top/categories/%E9%98%BF%E9%87%8C%E4%BA%91%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    
    <category term="笔记" scheme="https://www.maolilan.top/tags/%E7%AC%94%E8%AE%B0/"/>
    
    <category term="阿里云课程" scheme="https://www.maolilan.top/tags/%E9%98%BF%E9%87%8C%E4%BA%91%E8%AF%BE%E7%A8%8B/"/>
    
  </entry>
  
  <entry>
    <title>class4-部署离线下载服务器-学习笔记</title>
    <link href="https://www.maolilan.top/article/d080f90f.html"/>
    <id>https://www.maolilan.top/article/d080f90f.html</id>
    <published>2020-08-10T06:23:44.570Z</published>
    <updated>2020-08-10T16:12:38.085Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\css\APlayer.min.css"><script src="\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\js\Meting.min.js"></script><h1 id="课程地址"><a href="#课程地址" class="headerlink" title="课程地址"></a>课程地址</h1><p><a href="https://edu.aliyun.com/course/395?spm=5176.10731542.0.0.1d192ac3k3IVfQ">https://edu.aliyun.com/course/395?spm=5176.10731542.0.0.1d192ac3k3IVfQ</a></p><h1 id="开通阿里云服务器"><a href="#开通阿里云服务器" class="headerlink" title="开通阿里云服务器"></a>开通阿里云服务器</h1><h2 id="获得阿里云服务器"><a href="#获得阿里云服务器" class="headerlink" title="获得阿里云服务器"></a>获得阿里云服务器</h2><p>如果参加高校计划答题后就可以领取</p><p>如果没有参加请自行购买<br>购买地址：<br><a href="https://www.aliyun.com/activity/daily/cloud?spm=5176.12825654.6qhgikvfa.1.42692c4a7NroWI">https://www.aliyun.com/activity/daily/cloud?spm=5176.12825654.6qhgikvfa.1.42692c4a7NroWI</a><br><img src= "/img/loading.gif" data-src="https://img-blog.csdnimg.cn/2020080702393974.png?x-oss-process=,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxMzE4NDAw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>选择系统可以是任意，后续可以更改。<br>补充：跟着课程的话最好开始选择LAMP环境。</p><h2 id="设置安全组"><a href="#设置安全组" class="headerlink" title="设置安全组"></a>设置安全组</h2><p>在前几篇有过说明。<br>设置安全组</p><h3 id="进入自己的实例"><a href="#进入自己的实例" class="headerlink" title="进入自己的实例"></a>进入自己的实例</h3><p><img src= "/img/loading.gif" data-src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly9naXRlZS5jb20venRmbjUyMC9pbWFnZWJlZC9yYXcvbWFzdGVyL2ltZy8yMDIwMDgwNjA2MTgzNy5wbmc?x-oss-process=image/format,png"></p><h3 id="进入本实例安全组也就是最后那个"><a href="#进入本实例安全组也就是最后那个" class="headerlink" title="进入本实例安全组也就是最后那个"></a>进入本实例安全组也就是最后那个</h3><p><img src= "/img/loading.gif" data-src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly9naXRlZS5jb20venRmbjUyMC9pbWFnZWJlZC9yYXcvbWFzdGVyL2ltZy8yMDIwMDgwNjA2MTkyMy5wbmc?x-oss-process=image/format,png"></p><h3 id="点击配置规则"><a href="#点击配置规则" class="headerlink" title="点击配置规则"></a>点击配置规则</h3><p><img src= "/img/loading.gif" data-src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly9naXRlZS5jb20venRmbjUyMC9pbWFnZWJlZC9yYXcvbWFzdGVyL2ltZy8yMDIwMDgwNjA2MjAyNi5wbmc?x-oss-process=image/format,png"><br><img src= "/img/loading.gif" data-src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly9naXRlZS5jb20venRmbjUyMC9pbWFnZWJlZC9yYXcvbWFzdGVyL2ltZy8yMDIwMDgwNjA2MjExNS5wbmc?x-oss-process=image/format,png"></p><h3 id="设置安全组-1"><a href="#设置安全组-1" class="headerlink" title="设置安全组"></a>设置安全组</h3><p>按照上一步会出现这个<br><img src= "/img/loading.gif" data-src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly9naXRlZS5jb20venRmbjUyMC9pbWFnZWJlZC9yYXcvbWFzdGVyL2ltZy8yMDIwMDgwNjA2MjE0OS5wbmc?x-oss-process=image/format,png"><br>然后点击上面的添加安全组规则<br><img src= "/img/loading.gif" data-src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly9naXRlZS5jb20venRmbjUyMC9pbWFnZWJlZC9yYXcvbWFzdGVyL2ltZy8yMDIwMDgwNjA2MjI1Ni5wbmc?x-oss-process=image/format,png"><br>添加22端口和8080端口<br><img src= "/img/loading.gif" data-src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly9naXRlZS5jb20venRmbjUyMC9pbWFnZWJlZC9yYXcvbWFzdGVyL2ltZy8yMDIwMDgwNjA2MjU0MS5wbmc?x-oss-process=image/format,png"><br>点击确定，8080一样。</p><p>特别说明：0.0.0.0/0是所有人都可以访问，实际使用是不会这样的，但是为了后面不报错而且是个人学习所以这样做。</p><h1 id="服务器管理软件"><a href="#服务器管理软件" class="headerlink" title="服务器管理软件"></a>服务器管理软件</h1><h2 id="终端管理putty"><a href="#终端管理putty" class="headerlink" title="终端管理putty"></a>终端管理putty</h2><p>安装地址：<br><a href="https://the.earth.li/~sgtatham/putty/latest/w64/putty.exe">https://the.earth.li/~sgtatham/putty/latest/w64/putty.exe</a></p><p><img src= "/img/loading.gif" data-src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly9naXRlZS5jb20venRmbjUyMC9pbWFnZWJlZC9yYXcvbWFzdGVyL2ltZy8yMDIwMDgwNjA2MzMxNS5wbmc?x-oss-process=image/format,png"><br>跟着教程输入自己的公网ip，就可以登录进去了<br><img src= "/img/loading.gif" data-src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly9naXRlZS5jb20venRmbjUyMC9pbWFnZWJlZC9yYXcvbWFzdGVyL2ltZy8yMDIwMDgwNjA2MzcyMi5wbmc?x-oss-process=image/format,png"><br>输入root入上图，然后输入自己开始云服务器时的密码即可成功登录。</p><h2 id="文件传输FileZilla"><a href="#文件传输FileZilla" class="headerlink" title="文件传输FileZilla"></a>文件传输FileZilla</h2><p>安装地址： <a href="https://filezilla-project.org/download.php?type=client">https://filezilla-project.org/download.php?type=client</a><br><img src= "/img/loading.gif" data-src="https://img-blog.csdnimg.cn/20200807030008915.png?x-oss-process=,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxMzE4NDAw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h2 id="代码编辑Vscode"><a href="#代码编辑Vscode" class="headerlink" title="代码编辑Vscode"></a>代码编辑Vscode</h2><p>下载地址： <a href="https://code.visualstudio.com/">https://code.visualstudio.com/</a><br><img src= "/img/loading.gif" data-src="https://img-blog.csdnimg.cn/20200809202434329.png?x-oss-process=,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxMzE4NDAw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>这个就可以实现在编辑服务器上的文件了</p><h3 id="例子"><a href="#例子" class="headerlink" title="例子"></a>例子</h3><p>比如打开选中的文件<br><img src= "/img/loading.gif" data-src="https://img-blog.csdnimg.cn/20200809204028791.png?x-oss-process=,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxMzE4NDAw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>选择查看/编辑<br><img src= "/img/loading.gif" data-src="https://img-blog.csdnimg.cn/20200809204132463.png?x-oss-process=,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxMzE4NDAw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h3 id="可能遇到的问题"><a href="#可能遇到的问题" class="headerlink" title="可能遇到的问题"></a>可能遇到的问题</h3><p>会报一个“系统中没有设置此文件关联的程序”<br>解决方法：</p><p>选择编辑<br><img src= "/img/loading.gif" data-src="https://img-blog.csdnimg.cn/20200809204238980.png" alt="在这里插入图片描述"><br>选择设置<br><img src= "/img/loading.gif" data-src="https://img-blog.csdnimg.cn/20200809204300452.png?x-oss-process=,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxMzE4NDAw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>选择文件编辑</p><p>选择使用自定义编辑器，这个里面放vscode的安装地址<br><img src= "/img/loading.gif" data-src="https://img-blog.csdnimg.cn/20200809204327207.png?x-oss-process=,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxMzE4NDAw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h1 id="部署离线下载服务器"><a href="#部署离线下载服务器" class="headerlink" title="部署离线下载服务器"></a>部署离线下载服务器</h1><h2 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h2><p>CCAA 是服务器离线下载解决⽅案包，组件包含了Aria2 提供离线下载，ccaa_web⽀撑AriaNg运⾏，<br>AriaNg为Aria2 提供WEB界⾯以及Filemanager提供⽂件管理。<br>官方文档：<a href="https://www.yuque.com/helloz/ccaa/use">https://www.yuque.com/helloz/ccaa/use</a></p><h2 id="主要功能"><a href="#主要功能" class="headerlink" title="主要功能"></a>主要功能</h2><p>⽀持HTTP/HTTPS/FTP/BT/磁⼒链接等离线下载，断点续传等<br>⽂件管理、视频在线播放<br>完善的帮助⽂档</p><h2 id="确定是纯净系统"><a href="#确定是纯净系统" class="headerlink" title="确定是纯净系统"></a>确定是纯净系统</h2><h3 id="要给自己的服务器用"><a href="#要给自己的服务器用" class="headerlink" title="要给自己的服务器用"></a>要给自己的服务器用</h3><p>课程里说要纯净系统，更改系统盘请按下列</p><h4 id="进入控制台强行停止"><a href="#进入控制台强行停止" class="headerlink" title="进入控制台强行停止"></a>进入控制台强行停止</h4><p><img src= "/img/loading.gif" data-src="https://img-blog.csdnimg.cn/20200807024209727.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxMzE4NDAw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h4 id="更换系统盘"><a href="#更换系统盘" class="headerlink" title="更换系统盘"></a>更换系统盘</h4><p><img src= "/img/loading.gif" data-src="https://img-blog.csdnimg.cn/20200807024623217.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxMzE4NDAw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h4 id="进入镜像市场"><a href="#进入镜像市场" class="headerlink" title="进入镜像市场"></a>进入镜像市场</h4><p><img src= "/img/loading.gif" data-src="https://img-blog.csdnimg.cn/20200807024649291.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxMzE4NDAw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h4 id="d-选择公共镜像的ubunt即可"><a href="#d-选择公共镜像的ubunt即可" class="headerlink" title="d.选择公共镜像的ubunt即可"></a>d.选择公共镜像的ubunt即可</h4><p><img src= "/img/loading.gif" data-src="https://img-blog.csdnimg.cn/2020081013434017.png" alt="在这里插入图片描述"></p><h3 id="体验用"><a href="#体验用" class="headerlink" title="体验用"></a>体验用</h3><p>如果只是想体验一下这个，可以用其他的体验资源来尝试，因为我已经有环境了，所以我用了别的体验资源来熟悉如何弄，就不头铁在不是纯净系统下安装了。</p><h4 id="选择一个体验课程"><a href="#选择一个体验课程" class="headerlink" title="选择一个体验课程"></a>选择一个体验课程</h4><p>比如这个<br><a href="https://developer.aliyun.com/adc/scenario/exp/bbad6f5e0cba4c0ba5c904f6cf06a8d0">https://developer.aliyun.com/adc/scenario/exp/bbad6f5e0cba4c0ba5c904f6cf06a8d0</a><br><img src= "/img/loading.gif" data-src="https://img-blog.csdnimg.cn/20200810134727742.png?x-oss-process=,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxMzE4NDAw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h4 id="创建资源"><a href="#创建资源" class="headerlink" title="创建资源"></a>创建资源</h4><p><img src= "/img/loading.gif" data-src="https://img-blog.csdnimg.cn/20200810134749353.png" alt="在这里插入图片描述"><br>配置信息在下面就是了，记得使用前先ping一下公网ip确定是通的。</p><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><h3 id="选择1"><a href="#选择1" class="headerlink" title="选择1"></a>选择1</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">#国内服务器</span><br><span class="line">bash &lt;(curl -Lsk https:&#x2F;&#x2F;raw.githubusercontent.com&#x2F;helloxz&#x2F;ccaa&#x2F;master&#x2F;ccaa.sh) cdn</span><br><span class="line">&#96;&#96;&#96;&#96;</span><br></pre></td></tr></table></figure><p>#海外服务器<br>bash &lt;(curl -Lsk <a href="https://raw.githubusercontent.com/helloxz/ccaa/master/ccaa.sh">https://raw.githubusercontent.com/helloxz/ccaa/master/ccaa.sh</a>)</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">![在这里插入图片描述](https:&#x2F;&#x2F;img-blog.csdnimg.cn&#x2F;20200810135313490.png?x-oss-process&#x3D;,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxMzE4NDAw,size_16,color_FFFFFF,t_70)</span><br><span class="line">### 确定默认路径</span><br><span class="line">![在这里插入图片描述](https:&#x2F;&#x2F;img-blog.csdnimg.cn&#x2F;20200810135403505.png?x-oss-process&#x3D;,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxMzE4NDAw,size_16,color_FFFFFF,t_70)</span><br><span class="line">回车就好</span><br><span class="line">### 检测成功</span><br><span class="line">![在这里插入图片描述](https:&#x2F;&#x2F;img-blog.csdnimg.cn&#x2F;202008101355105.png)</span><br><span class="line">### 设置</span><br><span class="line">访问提示的网址</span><br><span class="line">http:&#x2F;&#x2F;你的公⽹IP:6080&#x2F;</span><br><span class="line">![在这里插入图片描述](https:&#x2F;&#x2F;img-blog.csdnimg.cn&#x2F;20200810135738602.png?x-oss-process&#x3D;image&#x2F;watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxMzE4NDAw,size_16,color_FFFFFF,t_70)</span><br><span class="line">**补充说明：** 进入慢而且提示打开错误，没关系的</span><br><span class="line"></span><br><span class="line">进入下图的设置</span><br><span class="line">密码是你刚刚设置的密码</span><br><span class="line">![在这里插入图片描述](https:&#x2F;&#x2F;img-blog.csdnimg.cn&#x2F;2020081013593714.png?x-oss-process&#x3D;image&#x2F;watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxMzE4NDAw,size_16,color_FFFFFF,t_70)</span><br><span class="line">重新加载</span><br><span class="line">![在这里插入图片描述](https:&#x2F;&#x2F;img-blog.csdnimg.cn&#x2F;20200810140025793.png?x-oss-process&#x3D;image&#x2F;watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxMzE4NDAw,size_16,color_FFFFFF,t_70)</span><br><span class="line"># 使用离线下载器</span><br><span class="line">## 下载文件HTTP</span><br><span class="line">选择 **正在下载** 然后选择 **新建**</span><br><span class="line">![在这里插入图片描述](https:&#x2F;&#x2F;img-blog.csdnimg.cn&#x2F;20200810140402473.png?x-oss-process&#x3D;,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxMzE4NDAw,size_16,color_FFFFFF,t_70)</span><br><span class="line">## 测试下载</span><br><span class="line">比如下载课程二的wiki</span><br></pre></td></tr></table></figure><p><a href="https://releases.wikimedia.org/mediawiki/1.34/mediawiki-1.34.2.tar.gz">https://releases.wikimedia.org/mediawiki/1.34/mediawiki-1.34.2.tar.gz</a></p><pre><code>输入地址![在这里插入图片描述](https://img-blog.csdnimg.cn/20200810140627763.png)可以看到速度还是很不错的## 下载文件种子文件选择文件夹![在这里插入图片描述](https://img-blog.csdnimg.cn/20200810141014261.png?x-oss-process=,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxMzE4NDAw,size_16,color_FFFFFF,t_70)## 文件管理选择文件管理![在这里插入图片描述](https://img-blog.csdnimg.cn/20200810141916869.png?x-oss-process=,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxMzE4NDAw,size_16,color_FFFFFF,t_70)用户名是 ccaa密码是admin![在这里插入图片描述](https://img-blog.csdnimg.cn/20200810141959378.png)设置里可以改语言和其他设置，默认语言是英文![在这里插入图片描述](https://img-blog.csdnimg.cn/20200810142042171.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxMzE4NDAw,size_16,color_FFFFFF,t_70)选择 我的文件![在这里插入图片描述](https://img-blog.csdnimg.cn/20200810142150933.png?x-oss-process=,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxMzE4NDAw,size_16,color_FFFFFF,t_70)点击下载就可以下载了。</code></pre>]]></content>
    
    
    <summary type="html">class4-部署离线下载服务器-学习笔记</summary>
    
    
    
    <category term="阿里云学习笔记" scheme="https://www.maolilan.top/categories/%E9%98%BF%E9%87%8C%E4%BA%91%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    
    <category term="笔记" scheme="https://www.maolilan.top/tags/%E7%AC%94%E8%AE%B0/"/>
    
    <category term="阿里云课程" scheme="https://www.maolilan.top/tags/%E9%98%BF%E9%87%8C%E4%BA%91%E8%AF%BE%E7%A8%8B/"/>
    
  </entry>
  
  <entry>
    <title>class5-搭建Java Web开发环境</title>
    <link href="https://www.maolilan.top/article/54412d2c.html"/>
    <id>https://www.maolilan.top/article/54412d2c.html</id>
    <published>2020-08-09T14:39:00.000Z</published>
    <updated>2020-08-10T16:08:43.509Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\css\APlayer.min.css"><script src="\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\js\Meting.min.js"></script><h1 id="课程地址"><a href="#课程地址" class="headerlink" title="课程地址"></a>课程地址</h1><p><a href="https://developer.aliyun.com/adc/scenario/bbad6f5e0cba4c0ba5c904f6cf06a8d0?spm=a2c6h.14089369.J_2497364210.12.756b1efcNulWOg">https://developer.aliyun.com/adc/scenario/bbad6f5e0cba4c0ba5c904f6cf06a8d0?spm=a2c6h.14089369.J_2497364210.12.756b1efcNulWOg</a><br><strong>补充说明</strong>：这个课程是一个体验课，有自己的服务器可以部署在自己的服务器上。<br><img src= "/img/loading.gif" data-src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly9naXRlZS5jb20venRmbjUyMC9pbWFnZWJlZC9yYXcvbWFzdGVyL2ltZy8yMDIwMDgwOTIyMTg1Mi5wbmc?x-oss-process=image/format,png"></p><h1 id="创建资源"><a href="#创建资源" class="headerlink" title="创建资源"></a>创建资源</h1><p>开始时选择免费开通。大概等待两分钟。<br><img src= "/img/loading.gif" data-src="https://img-blog.csdnimg.cn/20200809222038469.png" alt="在这里插入图片描述"><br>这个界面下是配置信息。</p><h1 id="连接ECS服务器"><a href="#连接ECS服务器" class="headerlink" title="连接ECS服务器"></a>连接ECS服务器</h1><h2 id="方法一系统CMD"><a href="#方法一系统CMD" class="headerlink" title="方法一系统CMD"></a>方法一系统CMD</h2><p>终端输入</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">ssh [username]@[ipaddress]</span><br></pre></td></tr></table></figure><p>比如</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">ssh [username]@[ipaddress]</span><br></pre></td></tr></table></figure><p>输入yes<br><img src= "/img/loading.gif" data-src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly9naXRlZS5jb20venRmbjUyMC9pbWFnZWJlZC9yYXcvbWFzdGVyL2ltZy8yMDIwMDgwOTIyMDcyMy5wbmc?x-oss-process=image/format,png"><br>这个时候会提示你登录密码，密码信息在配置那里。<br>登录成功后</p><p><img src= "/img/loading.gif" data-src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly9naXRlZS5jb20venRmbjUyMC9pbWFnZWJlZC9yYXcvbWFzdGVyL2ltZy8yMDIwMDgwOTIyMDgxOS5wbmc?x-oss-process=image/format,png"></p><h2 id="putty登录"><a href="#putty登录" class="headerlink" title="putty登录"></a>putty登录</h2><p>安装地址：<br><a href="https://the.earth.li/~sgtatham/putty/latest/w64/putty.exe">https://the.earth.li/~sgtatham/putty/latest/w64/putty.exe</a></p><p><img src= "/img/loading.gif" data-src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly9naXRlZS5jb20venRmbjUyMC9pbWFnZWJlZC9yYXcvbWFzdGVyL2ltZy8yMDIwMDgwNjA2MzMxNS5wbmc?x-oss-process=image/format,png"><br>跟着教程输入自己的公网ip，就可以登录进去了<br><img src= "/img/loading.gif" data-src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly9naXRlZS5jb20venRmbjUyMC9pbWFnZWJlZC9yYXcvbWFzdGVyL2ltZy8yMDIwMDgwNjA2MzcyMi5wbmc?x-oss-process=image/format,png"><br>输入root入上图，然后输入自己开始云服务器时的密码即可成功登录。</p><h1 id="安装JDK"><a href="#安装JDK" class="headerlink" title="安装JDK"></a>安装JDK</h1><p>在上面方法随便选一个登录后输入下列命令</p><h2 id="查看yum源中JDK版本"><a href="#查看yum源中JDK版本" class="headerlink" title="查看yum源中JDK版本"></a>查看yum源中JDK版本</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">yum list java*</span><br></pre></td></tr></table></figure><h2 id="使用yum安装JDK1-8"><a href="#使用yum安装JDK1-8" class="headerlink" title="使用yum安装JDK1.8"></a>使用yum安装JDK1.8</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">yum -y install java-1.8.0-openjdk*</span><br></pre></td></tr></table></figure><h2 id="验证安装"><a href="#验证安装" class="headerlink" title="验证安装"></a>验证安装</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">java -version</span><br></pre></td></tr></table></figure><p>出现这个说明成功<br><img src= "/img/loading.gif" data-src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly9naXRlZS5jb20venRmbjUyMC9pbWFnZWJlZC9yYXcvbWFzdGVyL2ltZy8yMDIwMDgwOTIyMDk1OC5wbmc?x-oss-process=image/format,png"></p><h1 id="安装MySQL数据库"><a href="#安装MySQL数据库" class="headerlink" title="安装MySQL数据库"></a>安装MySQL数据库</h1><h2 id="安装MySQL官方的Yum-Repository"><a href="#安装MySQL官方的Yum-Repository" class="headerlink" title="安装MySQL官方的Yum Repository"></a>安装MySQL官方的Yum Repository</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">wget http:&#x2F;&#x2F;dev.mysql.com&#x2F;get&#x2F;mysql57-community-release-el7-10.noarch.rpm</span><br><span class="line">yum -y install mysql57-community-release-el7-10.noarch.rpm</span><br><span class="line">yum -y install mysql-community-server</span><br></pre></td></tr></table></figure><p><img src= "/img/loading.gif" data-src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly9naXRlZS5jb20venRmbjUyMC9pbWFnZWJlZC9yYXcvbWFzdGVyL2ltZy8yMDIwMDgwOTIyMTIwNi5wbmc?x-oss-process=image/format,png"></p><h2 id="启动MySQL数据库"><a href="#启动MySQL数据库" class="headerlink" title="启动MySQL数据库"></a>启动MySQL数据库</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">systemctl start mysqld.service</span><br></pre></td></tr></table></figure><h2 id="查看初始密码"><a href="#查看初始密码" class="headerlink" title="查看初始密码"></a>查看初始密码</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">grep &quot;password&quot; &#x2F;var&#x2F;log&#x2F;mysqld.log</span><br></pre></td></tr></table></figure><p><img src= "/img/loading.gif" data-src="https://img-blog.csdnimg.cn/20200809222841957.png" alt="在这里插入图片描述"></p><h2 id="登录数据库"><a href="#登录数据库" class="headerlink" title="登录数据库"></a>登录数据库</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">mysql -uroot -p</span><br></pre></td></tr></table></figure><h2 id="修改MySQL默认密码"><a href="#修改MySQL默认密码" class="headerlink" title="修改MySQL默认密码"></a>修改MySQL默认密码</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">set global validate_password_policy&#x3D;0;  #修改密码安全策略为低（只校验密码长度，至少8位）。</span><br><span class="line"></span><br><span class="line">ALTER USER &#39;root&#39;@&#39;localhost&#39; IDENTIFIED BY &#39;12345678&#39;;</span><br></pre></td></tr></table></figure><h2 id="授予root用户远程管理权限"><a href="#授予root用户远程管理权限" class="headerlink" title="授予root用户远程管理权限"></a>授予root用户远程管理权限</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">GRANT ALL PRIVILEGES ON *.* TO &#39;root&#39;@&#39;%&#39; IDENTIFIED BY &#39;12345678&#39;;</span><br></pre></td></tr></table></figure><p><img src= "/img/loading.gif" data-src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly9naXRlZS5jb20venRmbjUyMC9pbWFnZWJlZC9yYXcvbWFzdGVyL2ltZy8yMDIwMDgwOTIyMTQyNS5wbmc?x-oss-process=image/format,png"></p><h2 id="退出"><a href="#退出" class="headerlink" title="退出"></a>退出</h2><p>输入</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">exit</span><br></pre></td></tr></table></figure><p><img src= "/img/loading.gif" data-src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly9naXRlZS5jb20venRmbjUyMC9pbWFnZWJlZC9yYXcvbWFzdGVyL2ltZy8yMDIwMDgwOTIyMTQzNS5wbmc?x-oss-process=image/format,png"></p><h1 id="安装Tomact"><a href="#安装Tomact" class="headerlink" title="安装Tomact"></a>安装Tomact</h1><h2 id="下载Tomcat压缩包"><a href="#下载Tomcat压缩包" class="headerlink" title="下载Tomcat压缩包"></a>下载Tomcat压缩包</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">wget https:&#x2F;&#x2F;mirror.bit.edu.cn&#x2F;apache&#x2F;tomcat&#x2F;tomcat-8&#x2F;v8.5.57&#x2F;bin&#x2F;apache-tomcat-8.5.57.tar.gz</span><br></pre></td></tr></table></figure><h2 id="解压"><a href="#解压" class="headerlink" title="解压"></a>解压</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">tar -zxvf apache-tomcat-8.5.57.tar.gz </span><br></pre></td></tr></table></figure><h2 id="移动文件夹，修改目录名"><a href="#移动文件夹，修改目录名" class="headerlink" title="移动文件夹，修改目录名"></a>移动文件夹，修改目录名</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">mv apache-tomcat-8.5.57 &#x2F;usr&#x2F;local&#x2F;Tomcat8.5</span><br></pre></td></tr></table></figure><h2 id="授权"><a href="#授权" class="headerlink" title="授权"></a>授权</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">chmod +x &#x2F;usr&#x2F;local&#x2F;Tomcat8.5&#x2F;bin&#x2F;*.sh</span><br></pre></td></tr></table></figure><h2 id="修改默认端口"><a href="#修改默认端口" class="headerlink" title="修改默认端口"></a>修改默认端口</h2><p>补充说明：Tomcat默认端口号为8080</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sed -i &#39;s&#x2F;Connector port&#x3D;&quot;8080&quot;&#x2F;Connector port&#x3D;&quot;80&quot;&#x2F;&#39; &#x2F;usr&#x2F;local&#x2F;Tomcat8.5&#x2F;conf&#x2F;server.xml</span><br></pre></td></tr></table></figure><h2 id="启动Tomact"><a href="#启动Tomact" class="headerlink" title="启动Tomact"></a>启动Tomact</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x2F;usr&#x2F;local&#x2F;Tomcat8.5&#x2F;bin&#x2F;.&#x2F;startup.sh</span><br></pre></td></tr></table></figure><h1 id="访问Tomact"><a href="#访问Tomact" class="headerlink" title="访问Tomact"></a>访问Tomact</h1><p>打开浏览器输入公网ip<br>显示下面的界面说明成功<br><img src= "/img/loading.gif" data-src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly9naXRlZS5jb20venRmbjUyMC9pbWFnZWJlZC9yYXcvbWFzdGVyL2ltZy8yMDIwMDgwOTIyMTU1NS5wbmc?x-oss-process=image/format,png"></p>]]></content>
    
    
    <summary type="html">class5-搭建Java Web开发环境</summary>
    
    
    
    <category term="阿里云学习笔记" scheme="https://www.maolilan.top/categories/%E9%98%BF%E9%87%8C%E4%BA%91%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    
    <category term="笔记" scheme="https://www.maolilan.top/tags/%E7%AC%94%E8%AE%B0/"/>
    
    <category term="阿里云课程" scheme="https://www.maolilan.top/tags/%E9%98%BF%E9%87%8C%E4%BA%91%E8%AF%BE%E7%A8%8B/"/>
    
  </entry>
  
  <entry>
    <title>class3-基于云服务器构建微信公众号管理系统-学习笔记</title>
    <link href="https://www.maolilan.top/article/1811f8b8.html"/>
    <id>https://www.maolilan.top/article/1811f8b8.html</id>
    <published>2020-08-08T12:50:51.000Z</published>
    <updated>2020-08-10T16:06:08.849Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\css\APlayer.min.css"><script src="\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\js\Meting.min.js"></script><h1 id="课程链接"><a href="#课程链接" class="headerlink" title="课程链接"></a>课程链接</h1><p><a href="https://edu.aliyun.com/course/428?spm=a2c6h.14089369.J_2497364210.10.26e21efcx1uOk6">https://edu.aliyun.com/course/428?spm=a2c6h.14089369.J_2497364210.10.26e21efcx1uOk6</a></p><h1 id="开通云服务器"><a href="#开通云服务器" class="headerlink" title="开通云服务器"></a>开通云服务器</h1><p>如果参加高校计划答题后就可以领取</p><p>如果没有参加请自行购买<br>购买地址：<br><a href="https://www.aliyun.com/activity/daily/cloud?spm=5176.12825654.6qhgikvfa.1.42692c4a7NroWI">https://www.aliyun.com/activity/daily/cloud?spm=5176.12825654.6qhgikvfa.1.42692c4a7NroWI</a><br><img src= "/img/loading.gif" data-src="https://img-blog.csdnimg.cn/2020080702393974.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxMzE4NDAw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>选择系统可以是任意，后续可以更改。<br>补充：跟着课程的话最好开始选择LAMP环境。</p><h1 id="安装微擎运行环境"><a href="#安装微擎运行环境" class="headerlink" title="安装微擎运行环境"></a>安装微擎运行环境</h1><h2 id="课程版本"><a href="#课程版本" class="headerlink" title="课程版本"></a>课程版本</h2><p>这个和class2是一致的，我这边直接复制class2的内容。同样，因为课程的时间原因我下载的是18.04版本的ubuntu。</p><p>如果需要更换请按照如下步骤</p><h3 id="进入控制台强行停止"><a href="#进入控制台强行停止" class="headerlink" title="进入控制台强行停止"></a>进入控制台强行停止</h3><p><img src= "/img/loading.gif" data-src="https://img-blog.csdnimg.cn/20200807024209727.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxMzE4NDAw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h3 id="更换系统盘"><a href="#更换系统盘" class="headerlink" title="更换系统盘"></a>更换系统盘</h3><p><img src= "/img/loading.gif" data-src="https://img-blog.csdnimg.cn/20200807024623217.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxMzE4NDAw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h3 id="进入镜像市场"><a href="#进入镜像市场" class="headerlink" title="进入镜像市场"></a>进入镜像市场</h3><p><img src= "/img/loading.gif" data-src="https://img-blog.csdnimg.cn/20200807024649291.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxMzE4NDAw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>搜索LAMP环境<br><img src= "/img/loading.gif" data-src="https://img-blog.csdnimg.cn/20200807024719934.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxMzE4NDAw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>因为课程稍有年头，所以我买的是这个，购买后是可以查询到的。<br><img src= "/img/loading.gif" data-src="https://img-blog.csdnimg.cn/20200807024813145.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxMzE4NDAw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>点击使用，设置密码<br><img src= "/img/loading.gif" data-src="https://img-blog.csdnimg.cn/20200807024905641.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxMzE4NDAw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h2 id="自己使用的系统"><a href="#自己使用的系统" class="headerlink" title="自己使用的系统"></a>自己使用的系统</h2><p>在ubuntu下绑定域名失败，选择了 CentOS 7.8 +LAMP版本。后面的教程也根据自己的系统来。centos对绑定域名及其友好。</p><h3 id="更换系统"><a href="#更换系统" class="headerlink" title="更换系统"></a>更换系统</h3><p>按照上面的1和2然后选择centos 7.8即可。<br><img src= "/img/loading.gif" data-src="https://img-blog.csdnimg.cn/202008081954326.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxMzE4NDAw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h3 id="安装LAMP"><a href="#安装LAMP" class="headerlink" title="安装LAMP"></a>安装LAMP</h3><p>教程链接： <a href="https://lnmp.org/install.html">https://lnmp.org/install.html</a></p><h4 id="screen-S-lnmp"><a href="#screen-S-lnmp" class="headerlink" title="screen -S lnmp"></a>screen -S lnmp</h4><p>如果提示screen: command not found 命令不存在可以执行：yum install screen 或 apt-get install screen安装</p><h4 id="wget-http-soft-vpser-net-lnmp-lnmp1-7-tar-gz-cO-lnmp1-7-tar-gz-amp-amp-tar-zxf-lnmp1-7-tar-gz-amp-amp-cd-lnmp1-7-amp-amp-install-sh-lnmp"><a href="#wget-http-soft-vpser-net-lnmp-lnmp1-7-tar-gz-cO-lnmp1-7-tar-gz-amp-amp-tar-zxf-lnmp1-7-tar-gz-amp-amp-cd-lnmp1-7-amp-amp-install-sh-lnmp" class="headerlink" title="wget http://soft.vpser.net/lnmp/lnmp1.7.tar.gz -cO lnmp1.7.tar.gz &amp;&amp; tar zxf lnmp1.7.tar.gz &amp;&amp; cd lnmp1.7 &amp;&amp; ./install.sh lnmp"></a>wget <a href="http://soft.vpser.net/lnmp/lnmp1.7.tar.gz">http://soft.vpser.net/lnmp/lnmp1.7.tar.gz</a> -cO lnmp1.7.tar.gz &amp;&amp; tar zxf lnmp1.7.tar.gz &amp;&amp; cd lnmp1.7 &amp;&amp; ./install.sh lnmp</h4><p><img src= "/img/loading.gif" data-src="https://img-blog.csdnimg.cn/20200808195453916.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxMzE4NDAw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>选择 4<br><img src= "/img/loading.gif" data-src="https://img-blog.csdnimg.cn/20200808195529275.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxMzE4NDAw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>选择8</p><h3 id="后续一直回车"><a href="#后续一直回车" class="headerlink" title="后续一直回车"></a>后续一直回车</h3><h1 id="安装微擎程序"><a href="#安装微擎程序" class="headerlink" title="安装微擎程序"></a>安装微擎程序</h1><h2 id="安装putty"><a href="#安装putty" class="headerlink" title="安装putty"></a>安装putty</h2><p>安装地址：<br><a href="https://the.earth.li/~sgtatham/putty/latest/w64/putty.exe">https://the.earth.li/~sgtatham/putty/latest/w64/putty.exe</a></p><p><img src= "/img/loading.gif" data-src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly9naXRlZS5jb20venRmbjUyMC9pbWFnZWJlZC9yYXcvbWFzdGVyL2ltZy8yMDIwMDgwNjA2MzMxNS5wbmc?x-oss-process=image/format,png"><br>跟着教程输入自己的公网ip，就可以登录进去了<br><img src= "/img/loading.gif" data-src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly9naXRlZS5jb20venRmbjUyMC9pbWFnZWJlZC9yYXcvbWFzdGVyL2ltZy8yMDIwMDgwNjA2MzcyMi5wbmc?x-oss-process=image/format,png"><br>输入root入上图，然后输入自己开始云服务器时的密码即可成功登录。</p><h2 id="安装FileZilla"><a href="#安装FileZilla" class="headerlink" title="安装FileZilla"></a>安装FileZilla</h2><p>安装地址： <a href="https://filezilla-project.org/download.php?type=client">https://filezilla-project.org/download.php?type=client</a><br><img src= "/img/loading.gif" data-src="https://img-blog.csdnimg.cn/20200807030008915.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxMzE4NDAw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h2 id="安装微擎上传到服务器"><a href="#安装微擎上传到服务器" class="headerlink" title="安装微擎上传到服务器"></a>安装微擎上传到服务器</h2><p>下载地址：<br><a href="https://releases.wikimedia.org/mediawiki/1.34/mediawiki-1.34.2.tar.gz">https://releases.wikimedia.org/mediawiki/1.34/mediawiki-1.34.2.tar.gz</a><br>原始文件放在default的old下<br><img src= "/img/loading.gif" data-src="https://img-blog.csdnimg.cn/20200808195800580.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxMzE4NDAw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>这里可以选择放在根目录下或者二级目录下，放在根目录下访问 http://公网ip 就可以访问，而放在二级目录下就是http:// 公网ip/新建的目录 比如我是放在了weixin文件夹下，那么我访问的就是 http://我的公网ip/weixin</p><h2 id="权限"><a href="#权限" class="headerlink" title="权限"></a>权限</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">chown -R www &#x2F;data&#x2F;wwwroot&#x2F;default</span><br></pre></td></tr></table></figure><h2 id="设置数据库"><a href="#设置数据库" class="headerlink" title="设置数据库"></a>设置数据库</h2><p>因为我已经把原来在default下的文件转移去了old，所以访问phpmyadmin就需要是下面的地址<br> http://公⽹IP/old/phpmyadmin<br> <img src= "/img/loading.gif" data-src="https://img-blog.csdnimg.cn/20200808201024666.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxMzE4NDAw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br> 这里的密码是你自己设置的，之前安装LAMP的时候应该就设置了，没有可以自行重置。<br> <img src= "/img/loading.gif" data-src="https://img-blog.csdnimg.cn/20200808201129240.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxMzE4NDAw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>新建一个微擎用的数据库就好了。</p><h2 id="安装微擎"><a href="#安装微擎" class="headerlink" title="安装微擎"></a>安装微擎</h2><p>因为我现在微擎的安装包在weixin文件夹下，所以我安装是<br>http://公网IP/weixin/install.php<br>然后根据自己的情况填写就好</p><p><img src= "/img/loading.gif" data-src="https://img-blog.csdnimg.cn/20200808201504375.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxMzE4NDAw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h2 id="登录账户"><a href="#登录账户" class="headerlink" title="登录账户"></a>登录账户</h2><p>回到首页，以我的为例<br>http:// 公网ip/weixin会进入登录界面<br><img src= "/img/loading.gif" data-src="https://img-blog.csdnimg.cn/20200808201622654.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxMzE4NDAw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>然后进入<br><img src= "/img/loading.gif" data-src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly9naXRlZS5jb20venRmbjUyMC9pbWFnZWJlZC9yYXcvbWFzdGVyL2ltZy8yMDIwMDgwODE4MzEzNi5wbmc?x-oss-process=image/format,png"><img src= "/img/loading.gif" data-src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly9naXRlZS5jb20venRmbjUyMC9pbWFnZWJlZC9yYXcvbWFzdGVyL2ltZy8yMDIwMDgwODE4MzI0MC5wbmc?x-oss-process=image/format,png"></p><h1 id="使用微擎"><a href="#使用微擎" class="headerlink" title="使用微擎"></a>使用微擎</h1><p>紧跟上步</p><h2 id="访问客户端"><a href="#访问客户端" class="headerlink" title="访问客户端"></a>访问客户端</h2><p><img src= "/img/loading.gif" data-src="https://img-blog.csdnimg.cn/20200808202007542.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxMzE4NDAw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h2 id="以添加公众号为例"><a href="#以添加公众号为例" class="headerlink" title="以添加公众号为例"></a>以添加公众号为例</h2><p>选择添加平台<br><img src= "/img/loading.gif" data-src="https://img-blog.csdnimg.cn/20200808202104899.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxMzE4NDAw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src= "/img/loading.gif" data-src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly9naXRlZS5jb20venRmbjUyMC9pbWFnZWJlZC9yYXcvbWFzdGVyL2ltZy8yMDIwMDgwODE4MzMyMC5wbmc?x-oss-process=image/format,png"><br>选择手动添加<br>公众号地址<br><a href="https://mp.weixin.qq.com/">https://mp.weixin.qq.com/</a><br>在公众号设置的位置</p><p><img src= "/img/loading.gif" data-src="https://img-blog.csdnimg.cn/20200808202257884.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxMzE4NDAw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>查看到自己的信息然后复制到这些地方<br><img src= "/img/loading.gif" data-src="https://img-blog.csdnimg.cn/2020080820231380.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxMzE4NDAw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><p>而<br><img src= "/img/loading.gif" data-src="https://img-blog.csdnimg.cn/20200808202359965.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxMzE4NDAw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>选择</p><p><img src= "/img/loading.gif" data-src="https://img-blog.csdnimg.cn/20200808202421929.png" alt="在这里插入图片描述"><br>进入即可查看<br>后面根据提示就可以成功添加了。</p><h2 id="添加应用"><a href="#添加应用" class="headerlink" title="添加应用"></a>添加应用</h2><p>进入应用市场<br><img src= "/img/loading.gif" data-src="https://img-blog.csdnimg.cn/20200808202542185.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxMzE4NDAw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>找一个免费的应用比如签到<br>购买后安装<br><img src= "/img/loading.gif" data-src="https://img-blog.csdnimg.cn/20200808202812181.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxMzE4NDAw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h2 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h2><p><img src= "/img/loading.gif" data-src="https://img-blog.csdnimg.cn/20200808202948159.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxMzE4NDAw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>不清楚是不是应用的问题，待后续继续摸索。</p><h1 id="绑定域名"><a href="#绑定域名" class="headerlink" title="绑定域名"></a>绑定域名</h1><p>详细教程：<a href="https://lnmp.org/faq/lnmp-vhost-add-howto.html">https://lnmp.org/faq/lnmp-vhost-add-howto.html</a><br>通过绑定自己的域名可以快点找到。<br>以绑定原始的界面为例。</p><p><img src= "/img/loading.gif" data-src="https://img-blog.csdnimg.cn/20200808203134483.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxMzE4NDAw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>他的目录是在default的old下。</p><h2 id="阿里云DNS解析"><a href="#阿里云DNS解析" class="headerlink" title="阿里云DNS解析"></a>阿里云DNS解析</h2><p><img src= "/img/loading.gif" data-src="https://img-blog.csdnimg.cn/20200808204349895.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxMzE4NDAw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>其中主机记录是你想绑定的域名，比如我用wiki.maolilan.top绑定了上面展示的界面。</p><h2 id="打开putty"><a href="#打开putty" class="headerlink" title="打开putty"></a>打开putty</h2><h3 id="输入lnmp-vhost-add"><a href="#输入lnmp-vhost-add" class="headerlink" title="输入lnmp  vhost add"></a>输入lnmp  vhost add</h3><p><img src= "/img/loading.gif" data-src="https://img-blog.csdnimg.cn/20200808203331747.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxMzE4NDAw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h3 id="输入你想绑定的域名"><a href="#输入你想绑定的域名" class="headerlink" title="输入你想绑定的域名"></a>输入你想绑定的域名</h3><p>比如 a.com<br><img src= "/img/loading.gif" data-src="https://img-blog.csdnimg.cn/20200808203525512.png" alt="在这里插入图片描述"></p><h3 id="其他信息确定"><a href="#其他信息确定" class="headerlink" title="其他信息确定"></a>其他信息确定</h3><p>然后根据需求是否选择其他域名绑定，回车是n</p><p><img src= "/img/loading.gif" data-src="https://img-blog.csdnimg.cn/20200808203600214.png" alt="在这里插入图片描述"><br>默认目录，选择我的需求就是让他去/home/wwwroot/default/old<br>后面是一些其他的伪静态、日志、协议证书等。<br><img src= "/img/loading.gif" data-src="https://img-blog.csdnimg.cn/20200808203801904.png" alt="在这里插入图片描述"><br>然后出现一个这个就说明成功了，这里是例子。<br><img src= "/img/loading.gif" data-src="https://img-blog.csdnimg.cn/20200808204200683.png" alt="在这里插入图片描述"><br>实际上我的目录/home/wwwroot/default/old</p><p>访问：<a href="http://wiki.maolilan.top/">http://wiki.maolilan.top/</a></p><p><img src= "/img/loading.gif" data-src="https://img-blog.csdnimg.cn/20200808204309249.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxMzE4NDAw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>特别鸣谢：组长康哥的帮助。<br>组长个人博客： <a href="https://blog.6sin.cn/">https://blog.6sin.cn/</a></p>]]></content>
    
    
    <summary type="html">class3-基于云服务器构建微信公众号管理系统-学习笔记</summary>
    
    
    
    <category term="阿里云学习笔记" scheme="https://www.maolilan.top/categories/%E9%98%BF%E9%87%8C%E4%BA%91%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    
    <category term="笔记" scheme="https://www.maolilan.top/tags/%E7%AC%94%E8%AE%B0/"/>
    
    <category term="阿里云课程" scheme="https://www.maolilan.top/tags/%E9%98%BF%E9%87%8C%E4%BA%91%E8%AF%BE%E7%A8%8B/"/>
    
  </entry>
  
  <entry>
    <title>class2-搭建wiki知识库-学习笔记</title>
    <link href="https://www.maolilan.top/article/7d561955.html"/>
    <id>https://www.maolilan.top/article/7d561955.html</id>
    <published>2020-08-06T20:28:25.000Z</published>
    <updated>2020-08-10T16:02:45.559Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\css\APlayer.min.css"><script src="\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\js\Meting.min.js"></script><h1 id="课程链接"><a href="#课程链接" class="headerlink" title="课程链接"></a>课程链接</h1><p><a href="https://edu.aliyun.com/course/425?spm=5176.8764728.aliyun-edu-course-tab.1.53bc677fUZmSgk&amp;previewAs=member&amp;redirectStatus=0">https://edu.aliyun.com/course/425?spm=5176.8764728.aliyun-edu-course-tab.1.53bc677fUZmSgk&amp;previewAs=member&amp;redirectStatus=0</a></p><h1 id="开通云服务器"><a href="#开通云服务器" class="headerlink" title="开通云服务器"></a>开通云服务器</h1><p>如果参加高校计划答题后就可以领取<br>如果没有参加请自行购买<br>购买地址：<br><a href="https://www.aliyun.com/activity/daily/cloud?spm=5176.12825654.6qhgikvfa.1.42692c4a7NroWI">https://www.aliyun.com/activity/daily/cloud?spm=5176.12825654.6qhgikvfa.1.42692c4a7NroWI</a><br><img src= "/img/loading.gif" data-src="https://img-blog.csdnimg.cn/2020080702393974.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxMzE4NDAw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>选择系统可以是任意，后续可以更改。</p><h1 id="安装运行环境"><a href="#安装运行环境" class="headerlink" title="安装运行环境"></a>安装运行环境</h1><p>如果需要更换请按照如下步骤</p><h2 id="进入控制台强行停止"><a href="#进入控制台强行停止" class="headerlink" title="进入控制台强行停止"></a>进入控制台强行停止</h2><p><img src= "/img/loading.gif" data-src="https://img-blog.csdnimg.cn/20200807024209727.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxMzE4NDAw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h2 id="更换系统盘"><a href="#更换系统盘" class="headerlink" title="更换系统盘"></a>更换系统盘</h2><p><img src= "/img/loading.gif" data-src="https://img-blog.csdnimg.cn/20200807024623217.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxMzE4NDAw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h2 id="进入镜像市场"><a href="#进入镜像市场" class="headerlink" title="进入镜像市场"></a>进入镜像市场</h2><p><img src= "/img/loading.gif" data-src="https://img-blog.csdnimg.cn/20200807024649291.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxMzE4NDAw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>搜索LAMP环境<br><img src= "/img/loading.gif" data-src="https://img-blog.csdnimg.cn/20200807024719934.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxMzE4NDAw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>因为课程稍有年头，所以我买的是这个，购买后是可以查询到的。<br><img src= "/img/loading.gif" data-src="https://img-blog.csdnimg.cn/20200807024813145.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxMzE4NDAw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>点击使用，设置密码<br><img src= "/img/loading.gif" data-src="https://img-blog.csdnimg.cn/20200807024905641.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxMzE4NDAw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h2 id="设置安全组"><a href="#设置安全组" class="headerlink" title="设置安全组"></a>设置安全组</h2><p><img src= "/img/loading.gif" data-src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly9naXRlZS5jb20venRmbjUyMC9pbWFnZWJlZC9yYXcvbWFzdGVyL2ltZy8yMDIwMDgwNjA2MjE0OS5wbmc?x-oss-process=image/format,png"><br>然后点击上面的添加安全组规则<br><img src= "/img/loading.gif" data-src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly9naXRlZS5jb20venRmbjUyMC9pbWFnZWJlZC9yYXcvbWFzdGVyL2ltZy8yMDIwMDgwNjA2MjI1Ni5wbmc?x-oss-process=image/format,png"><br>协议选择全部<br><img src= "/img/loading.gif" data-src="https://img-blog.csdnimg.cn/20200807025451778.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxMzE4NDAw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>然后授权对象选择0.0.0.0/0<br><strong>特别说明</strong>：全部说明开发所有端口，0.0.0.0/0说明所有人都可以访问。这里是为了学习。实际使用时不会这样。<br><img src= "/img/loading.gif" data-src="https://img-blog.csdnimg.cn/20200807025624874.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxMzE4NDAw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h1 id="安装MediaWiki"><a href="#安装MediaWiki" class="headerlink" title="安装MediaWiki"></a>安装MediaWiki</h1><h2 id="安装putty"><a href="#安装putty" class="headerlink" title="安装putty"></a>安装putty</h2><p>安装地址：<br><a href="https://the.earth.li/~sgtatham/putty/latest/w64/putty.exe">https://the.earth.li/~sgtatham/putty/latest/w64/putty.exe</a></p><p><img src= "/img/loading.gif" data-src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly9naXRlZS5jb20venRmbjUyMC9pbWFnZWJlZC9yYXcvbWFzdGVyL2ltZy8yMDIwMDgwNjA2MzMxNS5wbmc?x-oss-process=image/format,png"><br>跟着教程输入自己的公网ip，就可以登录进去了<br><img src= "/img/loading.gif" data-src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly9naXRlZS5jb20venRmbjUyMC9pbWFnZWJlZC9yYXcvbWFzdGVyL2ltZy8yMDIwMDgwNjA2MzcyMi5wbmc?x-oss-process=image/format,png"><br>输入root入上图，然后输入自己开始云服务器时的密码即可成功登录。</p><h2 id="安装FileZilla"><a href="#安装FileZilla" class="headerlink" title="安装FileZilla"></a>安装FileZilla</h2><p>安装地址： <a href="https://filezilla-project.org/download.php?type=client">https://filezilla-project.org/download.php?type=client</a><br><img src= "/img/loading.gif" data-src="https://img-blog.csdnimg.cn/20200807030008915.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxMzE4NDAw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h2 id="下载Mediawiki"><a href="#下载Mediawiki" class="headerlink" title="下载Mediawiki"></a>下载Mediawiki</h2><p>地址： <a href="https://releases.wikimedia.org/mediawiki/1.29/mediawiki-1.29.1.tar.gz">https://releases.wikimedia.org/mediawiki/1.29/mediawiki-1.29.1.tar.gz</a></p><h2 id="上传程序文件"><a href="#上传程序文件" class="headerlink" title="上传程序文件"></a>上传程序文件</h2><h3 id="进入-data-wwwroot-default-目录，创建一个old文件夹，将目录上的原始文件全部搬到old内。"><a href="#进入-data-wwwroot-default-目录，创建一个old文件夹，将目录上的原始文件全部搬到old内。" class="headerlink" title="进入 /data/wwwroot/default/ 目录，创建一个old文件夹，将目录上的原始文件全部搬到old内。"></a>进入 /data/wwwroot/default/ 目录，创建一个old文件夹，将目录上的原始文件全部搬到old内。</h3><p><img src= "/img/loading.gif" data-src="https://img-blog.csdnimg.cn/20200807040721731.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxMzE4NDAw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src= "/img/loading.gif" data-src="https://img-blog.csdnimg.cn/2020080704074177.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxMzE4NDAw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h3 id="将解压缩后的MediaWiki程序文件上传至-data-wwwroot-default-目录。"><a href="#将解压缩后的MediaWiki程序文件上传至-data-wwwroot-default-目录。" class="headerlink" title="将解压缩后的MediaWiki程序文件上传至 /data/wwwroot/default/ 目录。"></a>将解压缩后的MediaWiki程序文件上传至 /data/wwwroot/default/ 目录。</h3><p><img src= "/img/loading.gif" data-src="https://img-blog.csdnimg.cn/20200807040833152.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxMzE4NDAw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>这个过程比较漫长，请耐心等待。</p><h3 id="使用-chown-命令为目录赋予权限"><a href="#使用-chown-命令为目录赋予权限" class="headerlink" title="使用 chown 命令为目录赋予权限"></a>使用 chown 命令为目录赋予权限</h3><p>这个命令是输在putty里的<br><img src= "/img/loading.gif" data-src="https://img-blog.csdnimg.cn/20200807040958416.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxMzE4NDAw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">chown -R www &#x2F;data&#x2F;wwwroot&#x2F;default</span><br></pre></td></tr></table></figure><h2 id="访问wiki界面"><a href="#访问wiki界面" class="headerlink" title="访问wiki界面"></a>访问wiki界面</h2><h3 id="访问http-ecs公网IP"><a href="#访问http-ecs公网IP" class="headerlink" title="访问http://ecs公网IP"></a>访问<a href="http://ecs公网ip/">http://ecs公网IP</a></h3><p><img src= "/img/loading.gif" data-src="https://img-blog.csdnimg.cn/20200807041124367.png" alt="在这里插入图片描述"><br>界面如下：<br><img src= "/img/loading.gif" data-src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly9naXRlZS5jb20venRmbjUyMC9pbWFnZWJlZC9yYXcvbWFzdGVyL2ltZy8yMDIwMDgwNzAzNTM1MC5wbmc?x-oss-process=image/format,png"><br>点击【set up the wiki】</p><h3 id="选择中文"><a href="#选择中文" class="headerlink" title="选择中文"></a>选择中文</h3><p>默认应该是这样<br><img src= "/img/loading.gif" data-src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly9naXRlZS5jb20venRmbjUyMC9pbWFnZWJlZC9yYXcvbWFzdGVyL2ltZy8yMDIwMDgwNzAzNTMzOS5wbmc?x-oss-process=image/format,png"><br>如果不是请设置为中文</p><h3 id="数据库选择SQLite"><a href="#数据库选择SQLite" class="headerlink" title="数据库选择SQLite"></a>数据库选择SQLite</h3><p><img src= "/img/loading.gif" data-src="https://img-blog.csdnimg.cn/20200807041341499.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxMzE4NDAw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>保持默认即可<br><img src= "/img/loading.gif" data-src="https://img-blog.csdnimg.cn/20200807041426912.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxMzE4NDAw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h3 id="输入wiki名称和管理员账户"><a href="#输入wiki名称和管理员账户" class="headerlink" title="输入wiki名称和管理员账户"></a>输入wiki名称和管理员账户</h3><p><img src= "/img/loading.gif" data-src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly9naXRlZS5jb20venRmbjUyMC9pbWFnZWJlZC9yYXcvbWFzdGVyL2ltZy8yMDIwMDgwNzAzNTg1Ni5wbmc?x-oss-process=image/format,png"><br><img src= "/img/loading.gif" data-src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly9naXRlZS5jb20venRmbjUyMC9pbWFnZWJlZC9yYXcvbWFzdGVyL2ltZy8yMDIwMDgwNzAzNTkxMy5wbmc?x-oss-process=image/format,png"></p><h3 id="选择不耐烦，安装"><a href="#选择不耐烦，安装" class="headerlink" title="选择不耐烦，安装"></a>选择不耐烦，安装</h3><p><img src= "/img/loading.gif" data-src="https://img-blog.csdnimg.cn/20200807041550262.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxMzE4NDAw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src= "/img/loading.gif" data-src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly9naXRlZS5jb20venRmbjUyMC9pbWFnZWJlZC9yYXcvbWFzdGVyL2ltZy8yMDIwMDgwNzAzNTk0My5wbmc?x-oss-process=image/format,png"></p><h3 id="下载配置文件"><a href="#下载配置文件" class="headerlink" title="下载配置文件"></a>下载配置文件</h3><p><img src= "/img/loading.gif" data-src="https://img-blog.csdnimg.cn/20200807041611375.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxMzE4NDAw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h3 id="上传配置文件到根目录"><a href="#上传配置文件到根目录" class="headerlink" title="上传配置文件到根目录"></a>上传配置文件到根目录</h3><p><img src= "/img/loading.gif" data-src="https://img-blog.csdnimg.cn/20200807041640293.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxMzE4NDAw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h3 id="大功告成，刷新重新访问"><a href="#大功告成，刷新重新访问" class="headerlink" title="大功告成，刷新重新访问"></a>大功告成，刷新重新访问</h3><p>可以看到如下<br><img src= "/img/loading.gif" data-src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly9naXRlZS5jb20venRmbjUyMC9pbWFnZWJlZC9yYXcvbWFzdGVyL2ltZy8yMDIwMDgwNzA0MDE0NC5wbmc?x-oss-process=image/format,png"></p><h1 id="使用MediaWiki"><a href="#使用MediaWiki" class="headerlink" title="使用MediaWiki"></a>使用MediaWiki</h1><h2 id="登录"><a href="#登录" class="headerlink" title="登录"></a>登录</h2><p><img src= "/img/loading.gif" data-src="https://img-blog.csdnimg.cn/20200807041926149.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxMzE4NDAw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><p>登录管理员账户</p><h2 id="参数设置"><a href="#参数设置" class="headerlink" title="参数设置"></a>参数设置</h2><p>这个可以进行首页和皮肤的一些自定义</p><p><img src= "/img/loading.gif" data-src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly9naXRlZS5jb20venRmbjUyMC9pbWFnZWJlZC9yYXcvbWFzdGVyL2ltZy8yMDIwMDgwNzA0MDI1OC5wbmc?x-oss-process=image/format,png"></p><h2 id="编辑界面"><a href="#编辑界面" class="headerlink" title="编辑界面"></a>编辑界面</h2><p>点击编辑即可<br><img src= "/img/loading.gif" data-src="https://img-blog.csdnimg.cn/20200807042047166.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxMzE4NDAw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>点击更多可以进行其他操作<br><img src= "/img/loading.gif" data-src="https://img-blog.csdnimg.cn/20200807042126532.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxMzE4NDAw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h2 id="创建新的界面"><a href="#创建新的界面" class="headerlink" title="创建新的界面"></a>创建新的界面</h2><p>首页的后缀是这样的<br><img src= "/img/loading.gif" data-src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly9naXRlZS5jb20venRmbjUyMC9pbWFnZWJlZC9yYXcvbWFzdGVyL2ltZy8yMDIwMDgwNzA0MjIyOS5wbmc?x-oss-process=image/format,png"><br>修改后缀，比如要创建一个关于Ecs的词条，把首页改成Ecs<br><img src= "/img/loading.gif" data-src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly9naXRlZS5jb20venRmbjUyMC9pbWFnZWJlZC9yYXcvbWFzdGVyL2ltZy8yMDIwMDgwNzA0MDUzMy5wbmc?x-oss-process=image/format,png"><br>这时会提醒你没界面，然后选择创建就可以了<br><img src= "/img/loading.gif" data-src="https://img-blog.csdnimg.cn/20200807042400918.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxMzE4NDAw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>编辑后选择保存就可以看到效果了</p><p><img src= "/img/loading.gif" data-src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly9naXRlZS5jb20venRmbjUyMC9pbWFnZWJlZC9yYXcvbWFzdGVyL2ltZy8yMDIwMDgwNzA0MDUyNS5wbmc?x-oss-process=image/format,png"></p><h1 id="绑定域名"><a href="#绑定域名" class="headerlink" title="绑定域名"></a>绑定域名</h1><p>特别说明，绑定域名这个版本的mediawiki可能有问题，建议选择最新版</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">https:&#x2F;&#x2F;releases.wikimedia.org&#x2F;mediawiki&#x2F;1.34&#x2F;mediawiki-1.34.2.tar.gz</span><br></pre></td></tr></table></figure><p>绑定详细看这里</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">https:&#x2F;&#x2F;www.maolilan.top&#x2F;article&#x2F;e21e4e82.html</span><br></pre></td></tr></table></figure><p>实现效果：</p><p><img src= "/img/loading.gif" data-src="https://img-blog.csdnimg.cn/2020081023314363.png?x-oss-process=,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxMzE4NDAw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>]]></content>
    
    
    <summary type="html">class2-搭建wiki知识库-学习笔记</summary>
    
    
    
    <category term="阿里云学习笔记" scheme="https://www.maolilan.top/categories/%E9%98%BF%E9%87%8C%E4%BA%91%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    
    <category term="笔记" scheme="https://www.maolilan.top/tags/%E7%AC%94%E8%AE%B0/"/>
    
    <category term="阿里云课程" scheme="https://www.maolilan.top/tags/%E9%98%BF%E9%87%8C%E4%BA%91%E8%AF%BE%E7%A8%8B/"/>
    
  </entry>
  
  <entry>
    <title>阿里云CDN讲解笔记</title>
    <link href="https://www.maolilan.top/article/5c1827a.html"/>
    <id>https://www.maolilan.top/article/5c1827a.html</id>
    <published>2020-08-06T14:33:25.000Z</published>
    <updated>2020-08-06T14:34:54.146Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\css\APlayer.min.css"><script src="\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\js\Meting.min.js"></script><p>视频地址：<br><a href="https://yqh.aliyun.com/live/cdncarnival?spm=5176.12901015.0.i12901015.40d5525cDkZms4&amp;scm=20140722.2493.1.2474">https://yqh.aliyun.com/live/cdncarnival?spm=5176.12901015.0.i12901015.40d5525cDkZms4&amp;scm=20140722.2493.1.2474</a></p><h1 id="典型互联网应用架构"><a href="#典型互联网应用架构" class="headerlink" title="典型互联网应用架构"></a>典型互联网应用架构</h1><p><img src= "/img/loading.gif" data-src="https://img-blog.csdnimg.cn/20200806215146275.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxMzE4NDAw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>典型互联网应用架构：使用的应用通过英特尔连接到应用对应的服务器，获取到我们需要的文字、图片、视频、相应的数据。</p><h1 id="有些场景不一定必须访问应用服务器"><a href="#有些场景不一定必须访问应用服务器" class="headerlink" title="有些场景不一定必须访问应用服务器"></a>有些场景不一定必须访问应用服务器</h1><p><img src= "/img/loading.gif" data-src="https://img-blog.csdnimg.cn/20200806215602983.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxMzE4NDAw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>网页、图片、下载的安装包、购物车里商品的信息(不包括交互，只是商品信息)这些我们其实只要从离应用最近的代理服务器拿到资源就可以，并不需要去源站服务器。<br>但是搜索和加入订单取消订单这种就必须去源站服务器去拿到准确信息。<br>可以发现一种场景是静态资源，另一种场景是动态资源，静态资源我们没有去访问源站服务器的必要，而动态资源我们就需要去源站服务器去获得准确信息了。</p><h2 id="静态资源和动态资源"><a href="#静态资源和动态资源" class="headerlink" title="静态资源和动态资源"></a>静态资源和动态资源</h2><p><strong>静态资源</strong>：一般客户端发送请求到web服务器，web服务器从内存在取到相应的文件，返回给客户端，客户端解析并渲染显示出来。</p><p><strong>动态资源</strong>：一般客户端请求的动态资源，先将请求交于web容器，web容器连接数据库，数据库处理数据之后，将内容交给web服务器，web服务器返回给客户端解析渲染处理。<br>参考： <a href="https://blog.csdn.net/weixin_40122615/article/details/78493744">https://blog.csdn.net/weixin_40122615/article/details/78493744</a></p><h1 id="CDN解决的问题"><a href="#CDN解决的问题" class="headerlink" title="CDN解决的问题"></a>CDN解决的问题</h1><p><img src= "/img/loading.gif" data-src="https://img-blog.csdnimg.cn/20200806220512355.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxMzE4NDAw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>静态资源：</p><p>比如说一个在西藏的用户想看一张图片，这个图片的源站服务器在北京，按照传统就得访问源站服务器，物理链路和网络链路都挺长的，而cdn就可以让他访问在西藏的服务器，物理链路和网络链路都很短，加载就会快很多。<br>动态资源：<br>动态资源必须回到源站服务器才可以，如果不用cdn那么就可能走一条很曲折的链路，比如现在张三在西藏搜索东西需要返回准确信息，源站服务器在北京，这个链路可能去到广州又到了上海，最后才到北京，而cdn就可以在内部找到一条最短路径让张三快速得到结果。</p><p><strong>补充</strong>：最右侧是个使用实例，使用前绿色部分体验还好，黄色体验较差，橙色体验最差，通过cdn就让所有地区的体验变好了，如果是电商每慢一秒就会流失很多人，所以cdn加速很有必要。</p><h1 id="CDN的定义和客户价值"><a href="#CDN的定义和客户价值" class="headerlink" title="CDN的定义和客户价值"></a>CDN的定义和客户价值</h1><p><img src= "/img/loading.gif" data-src="https://img-blog.csdnimg.cn/20200806222113939.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxMzE4NDAw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h2 id="客户价值说明"><a href="#客户价值说明" class="headerlink" title="客户价值说明"></a>客户价值说明</h2><p>1.降低源站负载： 静态资源我们通过最近的节点就可以获得，这样就降低了源站的负载。<br>好处： 降低负载就降低了风险、同时也降低了成本。<br>2.就近分发提升访问体验：通过cdn访问速度得到了提升，刚刚的例子橙色变绿色，200ms以上降低到了50ms以内。<br>3.跨运营商全网覆盖：国内体验较为明显，国内有三大运营商，比如一个联通的用户想访问源站在电信的就可能会有不好的体验，而cdn就可以弥合这种差异。<br>4.内容安全传输： cdn支持各种安全协议保证数据不会被篡改是安全的。</p>]]></content>
    
    
    <summary type="html">阿里云CDN讲解笔记</summary>
    
    
    
    <category term="阿里云学习笔记" scheme="https://www.maolilan.top/categories/%E9%98%BF%E9%87%8C%E4%BA%91%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    
    <category term="笔记" scheme="https://www.maolilan.top/tags/%E7%AC%94%E8%AE%B0/"/>
    
    <category term="阿里云课程" scheme="https://www.maolilan.top/tags/%E9%98%BF%E9%87%8C%E4%BA%91%E8%AF%BE%E7%A8%8B/"/>
    
  </entry>
  
  <entry>
    <title>class1-打造专属云笔记-学习笔记</title>
    <link href="https://www.maolilan.top/article/d5dd4ea3.html"/>
    <id>https://www.maolilan.top/article/d5dd4ea3.html</id>
    <published>2020-08-05T22:03:35.000Z</published>
    <updated>2020-08-10T16:11:22.799Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\css\APlayer.min.css"><script src="\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\js\Meting.min.js"></script><h1 id="课程介绍"><a href="#课程介绍" class="headerlink" title="课程介绍"></a>课程介绍</h1><h2 id="VuePress介绍"><a href="#VuePress介绍" class="headerlink" title="VuePress介绍"></a>VuePress介绍</h2><p>官网介绍：<a href="https://www.vuepress.cn/guide/">https://www.vuepress.cn/guide/</a></p><p>VuePress 由两部分组成：第一部分是一个极简静态网站生成器，它包含由 Vue 驱动的主题系统和插件 API，另一个部分是为书写技术文档而优化的默认主题，它的诞生初衷是为了支持 Vue 及其子项目的文档需求。</p><p>每一个由 VuePress 生成的页面都带有预渲染好的 HTML，也因此具有非常好的加载性能和搜索引擎优化（SEO）。同时，一旦页面被加载，Vue 将接管这些静态内容，并将其转换成一个完整的单页应用（SPA），其他的页面则会只在用户浏览到的时候才按需加载。</p><h2 id="使用VuePress的好处"><a href="#使用VuePress的好处" class="headerlink" title="使用VuePress的好处"></a>使用VuePress的好处</h2><h3 id="界面简洁优雅"><a href="#界面简洁优雅" class="headerlink" title="界面简洁优雅"></a>界面简洁优雅</h3><h3 id="容易上手"><a href="#容易上手" class="headerlink" title="容易上手"></a>容易上手</h3><h3 id="对Markdwon形式兼容性良好，容易配置，性能好"><a href="#对Markdwon形式兼容性良好，容易配置，性能好" class="headerlink" title="对Markdwon形式兼容性良好，容易配置，性能好"></a>对Markdwon形式兼容性良好，容易配置，性能好</h3><h1 id="开通云服务器-略"><a href="#开通云服务器-略" class="headerlink" title="开通云服务器(略)"></a>开通云服务器(略)</h1><h1 id="安装Vurpress"><a href="#安装Vurpress" class="headerlink" title="安装Vurpress"></a>安装Vurpress</h1><h2 id="设置安全组"><a href="#设置安全组" class="headerlink" title="设置安全组"></a>设置安全组</h2><h3 id="进入自己的实例"><a href="#进入自己的实例" class="headerlink" title="进入自己的实例"></a>进入自己的实例</h3><p><img src= "/img/loading.gif" data-src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly9naXRlZS5jb20venRmbjUyMC9pbWFnZWJlZC9yYXcvbWFzdGVyL2ltZy8yMDIwMDgwNjA2MTgzNy5wbmc?x-oss-process=image/format,png"></p><h3 id="进入本实例安全组也就是最后那个"><a href="#进入本实例安全组也就是最后那个" class="headerlink" title="进入本实例安全组也就是最后那个"></a>进入本实例安全组也就是最后那个</h3><p><img src= "/img/loading.gif" data-src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly9naXRlZS5jb20venRmbjUyMC9pbWFnZWJlZC9yYXcvbWFzdGVyL2ltZy8yMDIwMDgwNjA2MTkyMy5wbmc?x-oss-process=image/format,png"></p><h3 id="点击配置规则"><a href="#点击配置规则" class="headerlink" title="点击配置规则"></a>点击配置规则</h3><p><img src= "/img/loading.gif" data-src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly9naXRlZS5jb20venRmbjUyMC9pbWFnZWJlZC9yYXcvbWFzdGVyL2ltZy8yMDIwMDgwNjA2MjAyNi5wbmc?x-oss-process=image/format,png"><br><img src= "/img/loading.gif" data-src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly9naXRlZS5jb20venRmbjUyMC9pbWFnZWJlZC9yYXcvbWFzdGVyL2ltZy8yMDIwMDgwNjA2MjExNS5wbmc?x-oss-process=image/format,png"></p><h3 id="设置安全组-1"><a href="#设置安全组-1" class="headerlink" title="设置安全组"></a>设置安全组</h3><p>按照上一步会出现这个<br><img src= "/img/loading.gif" data-src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly9naXRlZS5jb20venRmbjUyMC9pbWFnZWJlZC9yYXcvbWFzdGVyL2ltZy8yMDIwMDgwNjA2MjE0OS5wbmc?x-oss-process=image/format,png"><br>然后点击上面的添加安全组规则<br><img src= "/img/loading.gif" data-src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly9naXRlZS5jb20venRmbjUyMC9pbWFnZWJlZC9yYXcvbWFzdGVyL2ltZy8yMDIwMDgwNjA2MjI1Ni5wbmc?x-oss-process=image/format,png"><br>添加22端口和8080端口<br><img src= "/img/loading.gif" data-src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly9naXRlZS5jb20venRmbjUyMC9pbWFnZWJlZC9yYXcvbWFzdGVyL2ltZy8yMDIwMDgwNjA2MjU0MS5wbmc?x-oss-process=image/format,png"><br>点击确定，8080一样。</p><p>特别说明：0.0.0.0/0是所有人都可以访问，实际使用是不会这样的，但是为了后面不报错而且是个人学习所以这样做。</p><h2 id="安装Node-js"><a href="#安装Node-js" class="headerlink" title="安装Node.js"></a>安装Node.js</h2><h3 id="安装putty"><a href="#安装putty" class="headerlink" title="安装putty"></a>安装putty</h3><p>安装地址：<br><a href="https://the.earth.li/~sgtatham/putty/latest/w64/putty.exe">https://the.earth.li/~sgtatham/putty/latest/w64/putty.exe</a></p><p><img src= "/img/loading.gif" data-src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly9naXRlZS5jb20venRmbjUyMC9pbWFnZWJlZC9yYXcvbWFzdGVyL2ltZy8yMDIwMDgwNjA2MzMxNS5wbmc?x-oss-process=image/format,png"><br>跟着教程输入自己的公网ip，就可以登录进去了<br><img src= "/img/loading.gif" data-src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly9naXRlZS5jb20venRmbjUyMC9pbWFnZWJlZC9yYXcvbWFzdGVyL2ltZy8yMDIwMDgwNjA2MzcyMi5wbmc?x-oss-process=image/format,png"><br>输入root入上图，然后输入自己开始云服务器时的密码即可成功登录。</p><h3 id="依次执行下列命令"><a href="#依次执行下列命令" class="headerlink" title="依次执行下列命令"></a>依次执行下列命令</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">wget https:&#x2F;&#x2F;npm.taobao.org&#x2F;mirrors&#x2F;node&#x2F;v13.9.0&#x2F;node-v13.9.0-linux-x64.tar.xz</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sudo mkdir -p &#x2F;usr&#x2F;local&#x2F;lib&#x2F;nodejs</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sudo tar -xJvf node-v13.9.0-linux-x64.tar.xz -C &#x2F;usr&#x2F;local&#x2F;lib&#x2F;nodejs</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">cd &#x2F;usr&#x2F;local&#x2F;lib&#x2F;nodejs&#x2F;node-v13.9.0-linux-x64&#x2F;bin</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">.&#x2F;node -v</span><br></pre></td></tr></table></figure><p>这时应该出现</p><p><img src= "/img/loading.gif" data-src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly9naXRlZS5jb20venRmbjUyMC9pbWFnZWJlZC9yYXcvbWFzdGVyL2ltZy8yMDIwMDgwNjA3MTgwMS5wbmc?x-oss-process=image/format,png"><br>然后配置环境变量，这句话执行在公告的文件夹下也就是…64/bin那个</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">vim ~&#x2F;.bash_profile</span><br></pre></td></tr></table></figure><p>然后添加</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">PATH&#x3D;$PATH:$HOME&#x2F;bin:&#x2F;usr&#x2F;local&#x2F;lib&#x2F;nodejs&#x2F;node-v13.9.0-linux-x64&#x2F;bin</span><br></pre></td></tr></table></figure><p>然后保存，vim是按下esc然后：wq</p><p>接着重载一下</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">source ~&#x2F;.bash_profile</span><br></pre></td></tr></table></figure><p>然后  cd<br>进入其他目录进行测试</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">cd</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">node -v</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">npm version</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">npx -v</span><br></pre></td></tr></table></figure><p>这时应该出现<br><img src= "/img/loading.gif" data-src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly9naXRlZS5jb20venRmbjUyMC9pbWFnZWJlZC9yYXcvbWFzdGVyL2ltZy8yMDIwMDgwNjA3MjUyNC5wbmc?x-oss-process=image/format,png"><br>到此node.js就安装成功了。</p><h2 id="安装VuePress"><a href="#安装VuePress" class="headerlink" title="安装VuePress"></a>安装VuePress</h2><p>这个是换淘宝源加速</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">npm config set registry https:&#x2F;&#x2F;registry.npm.taobao.org</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">npm install -g vuepress</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">mkdir try_blogs</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">cd try_blogs</span><br></pre></td></tr></table></figure><p>这个是初始化</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">npm init -y</span><br></pre></td></tr></table></figure><p>其中try_blogs是我们将来博客的根目录</p><p><img src= "/img/loading.gif" data-src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly9naXRlZS5jb20venRmbjUyMC9pbWFnZWJlZC9yYXcvbWFzdGVyL2ltZy8yMDIwMDgwNjA3MzMyMi5wbmc?x-oss-process=image/format,png"><br>最后一个package.json是配置信息</p><h1 id="配置VuePress"><a href="#配置VuePress" class="headerlink" title="配置VuePress"></a>配置VuePress</h1><h2 id="执行以下步骤"><a href="#执行以下步骤" class="headerlink" title="执行以下步骤"></a>执行以下步骤</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">vim package.json</span><br></pre></td></tr></table></figure><p>修改成为</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&quot;scripts&quot;: &#123;</span><br><span class="line">&quot;docs:dev&quot;: &quot;vuepress dev docs&quot;,</span><br><span class="line">&quot;docs:build&quot;: &quot;vuepress build docs&quot;</span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure><p>截图如下：<br><img src= "/img/loading.gif" data-src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly9naXRlZS5jb20venRmbjUyMC9pbWFnZWJlZC9yYXcvbWFzdGVyL2ltZy8yMDIwMDgwNjA4MDgxMy5wbmc?x-oss-process=image/format,png"><br>接着执行</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">mkdir docs</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">cd docs</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">mkdir .vuepress</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">echo &#39;# Hello VuePress - first blog!&#39; &gt;README.mdcd .vuepress</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">echo &gt;config.js</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">mkdir public</span><br></pre></td></tr></table></figure><p>完成后实现各个的目录结构，也就是<br><img src= "/img/loading.gif" data-src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly9naXRlZS5jb20venRmbjUyMC9pbWFnZWJlZC9yYXcvbWFzdGVyL2ltZy8yMDIwMDgwNjA3MzMyMi5wbmc?x-oss-process=image/format,png"><br>回到try_blogs根目录<br>执行</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">vuepress dev docs</span><br></pre></td></tr></table></figure><p>这个相当于hexo的hexo s，也就是本地预览，这个是在8080端口<br>进入http://你的公网ip:8080/就可以预览效果了<br>这个时候应该是这样<br><img src= "/img/loading.gif" data-src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly9naXRlZS5jb20venRmbjUyMC9pbWFnZWJlZC9yYXcvbWFzdGVyL2ltZy8yMDIwMDgwNjA3NTQ0Ny5wbmc?x-oss-process=image/format,png"><br>然后我们来复杂化一下<br>进入README.md文件，这个之后就是我们的首页，之前已经提到，vim README.md就进来了<br>删除原先的内容，复制下面的内容</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">---</span><br><span class="line">home: true</span><br><span class="line">heroText: Vue技术博客初试</span><br><span class="line">tagline: 项⽬结构，关注讨论，每⽇分享</span><br><span class="line">actionText: 每⽇更新 →→</span><br><span class="line">actionLink: &#x2F;testlink&#x2F;</span><br><span class="line">features:</span><br><span class="line">- title: 项⽬结构</span><br><span class="line">  details: 以 Markdown 为中⼼的项⽬结构，以最少的配置帮助你专注于写作。</span><br><span class="line">- title: 关注讨论</span><br><span class="line">  details: 享受 Vue + webpack 的开发体验，在 Markdown 中使⽤ Vue 组件，同时可以使⽤ Vue 来开发⾃定义主题。</span><br><span class="line">- title: 每⽇分享</span><br><span class="line">  details: VuePress 为每个⻚⾯预渲染⽣成静态的 HTML，同时在⻚⾯被加载的时候，作为 SPA 运⾏。</span><br><span class="line">footer: LearnVueonECS Licensed | Copyright © 2020-present</span><br><span class="line">---</span><br></pre></td></tr></table></figure><p><strong>特别提醒</strong>，注意对齐，不然会报错</p><p>然后再执行本地预览就应该是这样了<br><img src= "/img/loading.gif" data-src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly9naXRlZS5jb20venRmbjUyMC9pbWFnZWJlZC9yYXcvbWFzdGVyL2ltZy8yMDIwMDgwNjA4MDcwNC5wbmc?x-oss-process=image/format,png"><br>课程所学的就结束了，因为我使用的是hexo所以不再深入，如果想使用这个的话请去官网再进行学习。<br>如果想尝试hexo可以跟我的教程<br><a href="https://www.maolilan.top/article/541a8071.html">https://www.maolilan.top/article/541a8071.html</a><br><a href="https://www.maolilan.top/article/7a56c169.html">https://www.maolilan.top/article/7a56c169.html</a></p>]]></content>
    
    
    <summary type="html">class1-打造专属云笔记-学习笔记</summary>
    
    
    
    <category term="阿里云学习笔记" scheme="https://www.maolilan.top/categories/%E9%98%BF%E9%87%8C%E4%BA%91%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    
    <category term="笔记" scheme="https://www.maolilan.top/tags/%E7%AC%94%E8%AE%B0/"/>
    
    <category term="阿里云课程" scheme="https://www.maolilan.top/tags/%E9%98%BF%E9%87%8C%E4%BA%91%E8%AF%BE%E7%A8%8B/"/>
    
  </entry>
  
  <entry>
    <title>电脑软件推荐</title>
    <link href="https://www.maolilan.top/article/e419ec53.html"/>
    <id>https://www.maolilan.top/article/e419ec53.html</id>
    <published>2020-08-03T15:22:02.000Z</published>
    <updated>2020-08-03T16:12:12.805Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\css\APlayer.min.css"><script src="\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\js\Meting.min.js"></script><p>目前自己用的好软推荐，不提供破解版，只提供官网。</p><h1 id="下载类"><a href="#下载类" class="headerlink" title="下载类"></a>下载类</h1><h2 id="IDM"><a href="#IDM" class="headerlink" title="IDM"></a>IDM</h2><p><img src= "/img/loading.gif" data-src="https://gitee.com/ztfn520/imagebed/raw/master/img/20200803234004.png"><br>及其好用，可以多线程下载视频，文件。对于b站大部分视频可以下载，YouTube也是。网盘没黑号可以加速下载。正式版不免费</p><p>官网： <a href="http://www.internetdownloadmanager.com/">http://www.internetdownloadmanager.com/</a></p><h2 id="Xdown"><a href="#Xdown" class="headerlink" title="Xdown"></a>Xdown</h2><p>类似上面。更推荐IDM<br><img src= "/img/loading.gif" data-src="https://gitee.com/ztfn520/imagebed/raw/master/img/20200803234025.png"><br>官网：<a href="https://xdown.org/">https://xdown.org/</a></p><h2 id="Free-Download-Manager"><a href="#Free-Download-Manager" class="headerlink" title="Free Download Manager"></a>Free Download Manager</h2><p>bt类文件比较好，如果能用IDM建议优先IDM。免费。<br>官网： <a href="https://www.freedownloadmanager.org/zh/">https://www.freedownloadmanager.org/zh/</a></p><h1 id="搜索类"><a href="#搜索类" class="headerlink" title="搜索类"></a>搜索类</h1><h2 id="Everyting"><a href="#Everyting" class="headerlink" title="Everyting"></a>Everyting</h2><p>和listary类似，个人喜欢这个。免费。<br>官网： <a href="https://www.voidtools.com/zh-cn/">https://www.voidtools.com/zh-cn/</a></p><h1 id="录屏类"><a href="#录屏类" class="headerlink" title="录屏类"></a>录屏类</h1><h2 id="EV录屏"><a href="#EV录屏" class="headerlink" title="EV录屏"></a>EV录屏</h2><p>免费录屏软件。<br><a href="https://www.ieway.cn/">https://www.ieway.cn/</a></p><h2 id="ScreenToGif"><a href="#ScreenToGif" class="headerlink" title="ScreenToGif"></a>ScreenToGif</h2><p><img src= "/img/loading.gif" data-src="https://gitee.com/ztfn520/imagebed/raw/master/img/20200803233319.png"><br>也是免费的，这个可以选择输出格式，不过没声音，可能是我使用方法不对，可以把录屏转成gif。</p><p>官网： <a href="https://www.screentogif.com/">https://www.screentogif.com/</a></p><h1 id="视频播放类"><a href="#视频播放类" class="headerlink" title="视频播放类"></a>视频播放类</h1><h2 id="PotPlayer"><a href="#PotPlayer" class="headerlink" title="PotPlayer"></a>PotPlayer</h2><p>解码很快，有4k片源用这个看很舒服。<br><img src= "/img/loading.gif" data-src="https://gitee.com/ztfn520/imagebed/raw/master/img/20200803233650.png"></p><p>官网： <a href="https://potplayer.org/">https://potplayer.org/</a></p><h1 id="解压缩类"><a href="#解压缩类" class="headerlink" title="解压缩类"></a>解压缩类</h1><h2 id="Bandizip"><a href="#Bandizip" class="headerlink" title="Bandizip"></a>Bandizip</h2><p><img src= "/img/loading.gif" data-src="https://gitee.com/ztfn520/imagebed/raw/master/img/20200803233906.png"><br>强大的解压缩软件，基本都可以解压缩，也不收费。<br>建议下载6.25版本，没广告，后续版本有广告。<br>官网： <a href="http://www.bandisoft.com/">http://www.bandisoft.com/</a></p><h1 id="桌面管理类"><a href="#桌面管理类" class="headerlink" title="桌面管理类"></a>桌面管理类</h1><h2 id="Fences"><a href="#Fences" class="headerlink" title="Fences"></a>Fences</h2><p>效果：<br><img src= "/img/loading.gif" data-src="https://gitee.com/ztfn520/imagebed/raw/master/img/20200803234301.png"><br>双击后隐藏桌面图标，比较方便归纳。<br>官网： <a href="https://www.stardock.com/products/fences/">https://www.stardock.com/products/fences/</a></p>]]></content>
    
    
    <summary type="html">电脑软件推荐</summary>
    
    
    
    <category term="电脑软件推荐" scheme="https://www.maolilan.top/categories/%E7%94%B5%E8%84%91%E8%BD%AF%E4%BB%B6%E6%8E%A8%E8%8D%90/"/>
    
    
    <category term="电脑软件推荐" scheme="https://www.maolilan.top/tags/%E7%94%B5%E8%84%91%E8%BD%AF%E4%BB%B6%E6%8E%A8%E8%8D%90/"/>
    
  </entry>
  
  <entry>
    <title>小浩算法-java题解-二分篇</title>
    <link href="https://www.maolilan.top/article/ae9b4fbd.html"/>
    <id>https://www.maolilan.top/article/ae9b4fbd.html</id>
    <published>2020-08-03T14:45:43.000Z</published>
    <updated>2020-08-03T14:46:49.318Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\css\APlayer.min.css"><script src="\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\js\Meting.min.js"></script><p>原文链接<br><a href="https://www.geekxh.com/0.0.%E5%AD%A6%E4%B9%A0%E9%A1%BB%E7%9F%A5/01.html">https://www.geekxh.com/0.0.%E5%AD%A6%E4%B9%A0%E9%A1%BB%E7%9F%A5/01.html</a><br>这里是把这个大佬的题解用java写一下做个记录</p><h1 id="二分篇"><a href="#二分篇" class="headerlink" title="二分篇"></a>二分篇</h1><h2 id="第875题：阿珂喜欢吃香蕉"><a href="#第875题：阿珂喜欢吃香蕉" class="headerlink" title="第875题：阿珂喜欢吃香蕉"></a>第875题：阿珂喜欢吃香蕉</h2><p>这里总共有 N 堆香蕉，第 i 堆中有piles[i] 根香蕉。警卫已经离开了，将在 H 小时后回来。 阿珂可以决定她吃香蕉的速度 K （单位：根/小时），每个小时，她将会选择一堆香蕉，从中吃掉 K 根。<br>如果这堆香蕉少于 K 根，她将吃掉这堆的所有香蕉，然后这一小时内不会再吃更多的香蕉。</p><p>珂珂喜欢慢慢吃，但仍然想在警卫回来前吃掉所有的香蕉。返回她可以在 H 小时内吃掉所有香蕉的最小速度 K（K 为整数）。</p><p>示例 1：</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">输入: piles &#x3D; [3,6,7,11], H &#x3D; 8</span><br><span class="line">输出: 4</span><br></pre></td></tr></table></figure><p>解题思路：<br>参考：<a href="https://leetcode-cn.com/problems/koko-eating-bananas/solution/er-fen-cha-zhao-ding-wei-su-du-by-liweiwei1419/">https://leetcode-cn.com/problems/koko-eating-bananas/solution/er-fen-cha-zhao-ding-wei-su-du-by-liweiwei1419/</a><br>1小时最低吃1个香蕉，最多吃一大堆香蕉，通过二分找到那个最合适的。</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">minEatingSpeed</span><span class="params">(<span class="keyword">int</span>[] piles, <span class="keyword">int</span> H)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> maxval=<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> num:piles)</span><br><span class="line">           maxval=Math.max(num,maxval);</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">int</span> left=<span class="number">1</span>;<span class="comment">//最少吃一根香蕉</span></span><br><span class="line">        <span class="keyword">int</span> right=maxval;<span class="comment">//最多吃最多的那一堆，一个小时只吃一堆，多了没意义</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">while</span>(left&lt; right)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">int</span> mid=left+(right-left)/<span class="number">2</span>;<span class="comment">//防止超出范围</span></span><br><span class="line">            <span class="keyword">if</span>(check(piles,mid)&gt;H)<span class="comment">//说明这样吃超出时间范围，需要缩小</span></span><br><span class="line">            &#123;</span><br><span class="line">                left=mid+<span class="number">1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">               right=mid;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> left;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">check</span><span class="params">(<span class="keyword">int</span> [] piles,<span class="keyword">int</span> speed)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> sum=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> pile:piles)</span><br><span class="line">        &#123;</span><br><span class="line">            sum+=(pile+speed-<span class="number">1</span>)/speed;<span class="comment">//这个是向上取整</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> sum;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="第69题：x的平方根"><a href="#第69题：x的平方根" class="headerlink" title="第69题：x的平方根"></a>第69题：x的平方根</h2><p>实现 int sqrt(int x) 函数。</p><p>计算并返回 x 的平方根，其中 x 是非负整数。</p><p>由于返回类型是整数，结果只保留整数的部分，小数部分将被舍去。</p><p>示例 1:</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">输入: 4</span><br><span class="line">输出: 2</span><br></pre></td></tr></table></figure><p>解题思路：<br>新手版本：</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">mySqrt</span><span class="params">(<span class="keyword">int</span> x)</span> </span>&#123;</span><br><span class="line">       <span class="keyword">double</span> mid=(<span class="keyword">double</span>)x/<span class="number">2</span>;</span><br><span class="line">       <span class="keyword">double</span> right=x;</span><br><span class="line">       <span class="keyword">double</span> left=<span class="number">0</span>;</span><br><span class="line">       <span class="keyword">while</span>((<span class="keyword">int</span>)left&lt;(<span class="keyword">int</span>)right)</span><br><span class="line">       &#123;</span><br><span class="line">           <span class="keyword">if</span>(mid*mid==x)</span><br><span class="line">               <span class="keyword">return</span> (<span class="keyword">int</span>)mid;</span><br><span class="line">           <span class="keyword">else</span> <span class="keyword">if</span>(mid*mid&gt;x)</span><br><span class="line">           &#123;</span><br><span class="line">               right=mid;</span><br><span class="line">               mid=(<span class="keyword">double</span>)(right+left)/<span class="number">2</span>;</span><br><span class="line">           &#125;<span class="keyword">else</span></span><br><span class="line">           &#123;</span><br><span class="line">               left=mid;</span><br><span class="line">               mid=(<span class="keyword">double</span>)(right+left)/<span class="number">2</span>;</span><br><span class="line">           &#125;</span><br><span class="line">       &#125;</span><br><span class="line">        <span class="keyword">return</span> (<span class="keyword">int</span>)mid;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>进阶版本：</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123; </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">mySqrt</span><span class="params">(<span class="keyword">int</span> x)</span> </span>&#123; </span><br><span class="line">        <span class="keyword">if</span> (x == <span class="number">0</span>) <span class="keyword">return</span> <span class="number">0</span>; </span><br><span class="line">        <span class="keyword">long</span> left = <span class="number">1</span>; </span><br><span class="line">        <span class="keyword">long</span> right = x / <span class="number">2</span>; </span><br><span class="line">        <span class="keyword">while</span> (left &lt; right) &#123; </span><br><span class="line">            <span class="comment">//注意这一行代码 </span></span><br><span class="line">            <span class="keyword">long</span> mid = (right + left) / <span class="number">2</span> + <span class="number">1</span>;</span><br><span class="line">            <span class="keyword">if</span> (mid &gt; x / mid) &#123;</span><br><span class="line">                right = mid - <span class="number">1</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                left = mid;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> (<span class="keyword">int</span>) left;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="第278题：第一个错误的版本"><a href="#第278题：第一个错误的版本" class="headerlink" title="第278题：第一个错误的版本"></a>第278题：第一个错误的版本</h2><p>假设你有 n 个版本 [1, 2, …, n]，你想找出导致之后所有版本出错的第一个错误的版本。</p><p>你可以通过调用 bool isBadVersion(version) 接口来判断版本号 version 是否在单元测试中出错。实现一个函数来查找第一个错误的版本。你应该尽量减少对调用 API 的次数。</p><p>示例:</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">给定 n &#x3D; 5，并且 version &#x3D; 4 是第一个错误的版本。</span><br><span class="line"></span><br><span class="line">调用 isBadVersion(3) -&gt; false</span><br><span class="line">调用 isBadVersion(5) -&gt; true</span><br><span class="line">调用 isBadVersion(4) -&gt; true</span><br><span class="line"></span><br><span class="line">所以，4 是第一个错误的版本。</span><br></pre></td></tr></table></figure><p>解题思路: 二分，判断中间是不是，是就向右走，不是就向左走，到找到为止。</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* The isBadVersion API is defined in the parent class VersionControl.</span></span><br><span class="line"><span class="comment">      boolean isBadVersion(int version); */</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Solution</span> <span class="keyword">extends</span> <span class="title">VersionControl</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">firstBadVersion</span><span class="params">(<span class="keyword">int</span> n)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> le=<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">int</span> ri=n;</span><br><span class="line">        <span class="keyword">while</span>(le&lt;ri)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">int</span> mid=le+(ri-le)/<span class="number">2</span>;</span><br><span class="line">            <span class="keyword">if</span>(isBadVersion(mid))</span><br><span class="line">               ri=mid;</span><br><span class="line">            <span class="keyword">else</span> </span><br><span class="line">               le=mid+<span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> le;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="第153题：旋转排序数组最小值Ⅰ"><a href="#第153题：旋转排序数组最小值Ⅰ" class="headerlink" title="第153题：旋转排序数组最小值Ⅰ"></a>第153题：旋转排序数组最小值Ⅰ</h2><p>假设按照升序排序的数组在预先未知的某个点上进行了旋转。( 例如，数组 [0,1,2,4,5,6,7] 可能变为 [4,5,6,7,0,1,2] )。请找出其中最小的元素。你可以假设数组中不存在重复元素。<br>示例 1:</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">输入: [3,4,5,1,2]</span><br><span class="line">输出: 1</span><br></pre></td></tr></table></figure><p>解题思路：<br>方法一:一次遍历，找到那个前面&gt;后面的元素。</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">findMin</span><span class="params">(<span class="keyword">int</span>[] nums)</span> </span>&#123;</span><br><span class="line">       <span class="keyword">int</span> ans=nums[<span class="number">0</span>];</span><br><span class="line">       <span class="keyword">if</span>(nums.length==<span class="number">1</span>) <span class="keyword">return</span> ans;</span><br><span class="line">       <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;nums.length;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(nums[i-<span class="number">1</span>]&gt;nums[i])</span><br><span class="line">         ans=nums[i];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ans;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>方法二：二分法，有点类似前面都是0，后面都是1，找到那个第一个出现的1。刚开始都是0，然后旋转后一部分就到后面去了，就成为1，找到那个最小值也就是找到那个第一次出现的1。<br>至于为什么选择有边界看这个：<br><a href="https://leetcode-cn.com/problems/find-minimum-in-rotated-sorted-array/solution/er-fen-cha-zhao-wei-shi-yao-zuo-you-bu-dui-cheng-z/">https://leetcode-cn.com/problems/find-minimum-in-rotated-sorted-array/solution/er-fen-cha-zhao-wei-shi-yao-zuo-you-bu-dui-cheng-z/</a></p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">findMin</span><span class="params">(<span class="keyword">int</span>[] nums)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> left=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">int</span> right=nums.length-<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span>(left&lt;right)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> mid=left+(right-left)/<span class="number">2</span>;</span><br><span class="line">        <span class="keyword">if</span>(nums[mid]&lt;nums[right])</span><br><span class="line">        &#123;</span><br><span class="line">            right=mid;<span class="comment">//mid有可能是那个最小值</span></span><br><span class="line">        &#125;<span class="keyword">else</span> </span><br><span class="line">        &#123;</span><br><span class="line">            left=mid+<span class="number">1</span>;<span class="comment">//mid绝对不可能那个最小值</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> nums[left];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="第154题：旋转排序数组最小值Ⅱ"><a href="#第154题：旋转排序数组最小值Ⅱ" class="headerlink" title="第154题：旋转排序数组最小值Ⅱ"></a>第154题：旋转排序数组最小值Ⅱ</h2><p>假设按照升序排序的数组在预先未知的某个点上进行了旋转。( 例如，数组 [0,1,2,4,5,6,7] 可能变为 [4,5,6,7,0,1,2] )。请找出其中最小的元素。 注意数组中可能存在重复的元素。<br>示例 1：</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">输入: [1,3,5]</span><br><span class="line">输出: 1</span><br></pre></td></tr></table></figure><p>解题思路：<br>参考：<br><a href="https://leetcode-cn.com/problems/find-minimum-in-rotated-sorted-array-ii/solution/154-find-minimum-in-rotated-sorted-array-ii-by-jyd/">https://leetcode-cn.com/problems/find-minimum-in-rotated-sorted-array-ii/solution/154-find-minimum-in-rotated-sorted-array-ii-by-jyd/</a><br>判断mid和right。<br>如果mid&gt;right，那么铁定是在右边，i的取值就是mid&lt;i&lt;=right。所以left=mid+1。<br>如果mid&lt;right，那么铁定是在左边，i的取值就是left&lt;i&lt;=mid。所以right=mid。<br>如果是等于，那么right=right-1。证明详情请看这个大佬的题解。</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">findMin</span><span class="params">(<span class="keyword">int</span>[] nums)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> left=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">int</span> right=nums.length-<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span>(left&lt;right)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> mid=left+(right-left)/<span class="number">2</span>;</span><br><span class="line">        <span class="keyword">if</span>(nums[mid]&lt;nums[right])</span><br><span class="line">        &#123;</span><br><span class="line">            right=mid;</span><br><span class="line">        &#125;<span class="keyword">else</span> <span class="keyword">if</span>(nums[mid]&gt;nums[right])</span><br><span class="line">        &#123;</span><br><span class="line">            left=mid+<span class="number">1</span>;</span><br><span class="line">        &#125;<span class="keyword">else</span></span><br><span class="line">        right=right-<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> nums[left];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="第475题：供暖器"><a href="#第475题：供暖器" class="headerlink" title="第475题：供暖器"></a>第475题：供暖器</h2><p>冬季已经来临。你的任务是设计一个有固定加热半径的供暖器向所有房屋供暖。现在，给出位于一条水平线上的房屋和供暖器的位置，找到可以覆盖所有房屋的最小加热半径。所以，你的输入将会是房屋和供暖器的位置。你将输出供暖器的最小加热半径。<br>说明:</p><p>给出的房屋和供暖器的数目是非负数且不会超过 25000。</p><p>给出的房屋和供暖器的位置均是非负数且不会超过10^9。</p><p>只要房屋位于供暖器的半径内(包括在边缘上)，它就可以得到供暖。</p><p>所有供暖器都遵循你的半径标准，加热的半径也一样。</p><p>示例 1:</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">输入: [1,2,3],[2]</span><br><span class="line">输出: 1</span><br><span class="line">解释: 仅在位置2上有一个供暖器。如果我们将加热半径设为1，那么所有房屋就都能得到供暖。</span><br></pre></td></tr></table></figure><p>解题思路：<br>两遍遍历，找到每个房间距离供暖的最短距离，找到这些距离中的最大值。<br>参考：<a href="https://leetcode-cn.com/problems/heaters/solution/bian-li-liang-bian-sui-ran-su-du-man-shi-man-liao-/">https://leetcode-cn.com/problems/heaters/solution/bian-li-liang-bian-sui-ran-su-du-man-shi-man-liao-/</a></p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">findRadius</span><span class="params">(<span class="keyword">int</span>[] houses, <span class="keyword">int</span>[] heaters)</span> </span>&#123;</span><br><span class="line">       <span class="keyword">int</span> rad=-<span class="number">1</span>;</span><br><span class="line">       <span class="keyword">for</span>(<span class="keyword">int</span> num:houses)</span><br><span class="line">         rad=Math.max(rad,f(num,heaters));</span><br><span class="line">       <span class="keyword">return</span> rad;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">f</span><span class="params">(<span class="keyword">int</span> n,<span class="keyword">int</span> [] heaters)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> ans=<span class="number">1000000010</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> num:heaters)</span><br><span class="line">        &#123;</span><br><span class="line">            ans=Math.min(ans,Math.abs(num-n));</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> ans;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">小浩算法-java题解</summary>
    
    
    
    <category term="刷题笔记" scheme="https://www.maolilan.top/categories/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0/"/>
    
    
    <category term="笔记" scheme="https://www.maolilan.top/tags/%E7%AC%94%E8%AE%B0/"/>
    
    <category term="leetcode" scheme="https://www.maolilan.top/tags/leetcode/"/>
    
  </entry>
  
  <entry>
    <title>小浩算法-java题解-位运算篇</title>
    <link href="https://www.maolilan.top/article/5dcc92c.html"/>
    <id>https://www.maolilan.top/article/5dcc92c.html</id>
    <published>2020-07-31T19:38:55.000Z</published>
    <updated>2020-07-31T19:41:40.141Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\css\APlayer.min.css"><script src="\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\js\Meting.min.js"></script><p>原文链接<br><a href="https://www.geekxh.com/0.0.%E5%AD%A6%E4%B9%A0%E9%A1%BB%E7%9F%A5/01.html">https://www.geekxh.com/0.0.%E5%AD%A6%E4%B9%A0%E9%A1%BB%E7%9F%A5/01.html</a><br>这里是把这个大佬的题解用java写一下做个记录</p><h1 id="位运算篇"><a href="#位运算篇" class="headerlink" title="位运算篇"></a>位运算篇</h1><h2 id="连续n个数的和"><a href="#连续n个数的和" class="headerlink" title="连续n个数的和"></a>连续n个数的和</h2><p>求 1 2 … n ，要求不能使用乘除法、for、while、if、else、switch、case等关键字及条件判断语句（A?B:C）。<br>示例 1：</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">输入: n &#x3D; 3 输出: 6</span><br></pre></td></tr></table></figure><p>解题思路： 递归，A&amp;&amp;B，A为true，那么返回B的布尔值，A为false，那么返回false，所以我们把递归的返回条件设置成A，递归的主体就是B<br>也就是：</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">sumNums</span><span class="params">(<span class="keyword">int</span> n)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">boolean</span> b = n &gt; <span class="number">0</span> &amp;&amp; ((n + = sumNums(n - <span class="number">1</span>)) &gt; <span class="number">0</span>);</span><br><span class="line">        <span class="keyword">return</span> n;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="第231题：2的幂"><a href="#第231题：2的幂" class="headerlink" title="第231题：2的幂"></a>第231题：2的幂</h2><p>给定一个整数，编写一个函数来判断它是否是 2 的幂次方。<br>示例 1:</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">输入: 1</span><br><span class="line">输出: true</span><br><span class="line">解释: 20 &#x3D; 1</span><br></pre></td></tr></table></figure><p>解题思路：<br>方法一：判断n%2为0时，n/=2的结果是不是1。</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">isPowerOfTwo</span><span class="params">(<span class="keyword">int</span> n)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (n == <span class="number">0</span>) <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">    <span class="keyword">while</span> (n % <span class="number">2</span> == <span class="number">0</span>) n /= <span class="number">2</span>;</span><br><span class="line">    <span class="keyword">return</span> n == <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>方法二： 对于N为2的幂的数，都有 N&amp;(N-1)=0。</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">isPowerOfTwo</span><span class="params">(<span class="keyword">int</span> n)</span> </span>&#123;</span><br><span class="line">       <span class="keyword">return</span> n &gt;<span class="number">0</span> &amp;&amp;  (n&amp;(n-<span class="number">1</span>))==<span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="第191题：位1的个数"><a href="#第191题：位1的个数" class="headerlink" title="第191题：位1的个数"></a>第191题：位1的个数</h2><p>编写一个函数，输入是一个无符号整数，返回其二进制表达式中数字位数为 ‘1’ 的个数（也被称为汉明重量）。<br>示例 1：</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">输入：00000000000000000000000000001011</span><br><span class="line">输出：3</span><br><span class="line">解释：输入的二进制串 00000000000000000000000000001011 中，共有三位为 &#39;1&#39;。</span><br></pre></td></tr></table></figure><p>解题思路：<br>方法一：利用掩码来计算，碰到掩码mask&amp;n！=0说明这位是1，计数。最后返回结果。</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="comment">// you need to treat n as an unsigned value</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">hammingWeight</span><span class="params">(<span class="keyword">int</span> n)</span> </span>&#123;</span><br><span class="line">         <span class="keyword">int</span> result = <span class="number">0</span>;</span><br><span class="line">        <span class="comment">//初始化掩码为1</span></span><br><span class="line">        <span class="keyword">int</span> mask = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">32</span>; i++) &#123;</span><br><span class="line">            <span class="keyword">if</span> ((n &amp; mask) != <span class="number">0</span>) &#123;</span><br><span class="line">                result++;</span><br><span class="line">            &#125;</span><br><span class="line">            mask = mask &lt;&lt; <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> result;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>方法二: 根据上一题的思路，n&amp;n(n-1)进行位运算，那么最低位的1会变成0。我们计数又多少次这样成立就ok。</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="comment">// you need to treat n as an unsigned value</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">hammingWeight</span><span class="params">(<span class="keyword">int</span> n)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> count = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">while</span>(n != <span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            n =(n &amp; (n - <span class="number">1</span>)) ;</span><br><span class="line">            count++;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> count;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="第136题：只出现一次的数字"><a href="#第136题：只出现一次的数字" class="headerlink" title="第136题：只出现一次的数字"></a>第136题：只出现一次的数字</h2><p>给定一个非空整数数组，除了某个元素只出现一次以外，其余每个元素均出现两次。找出那个只出现了一次的元素。<br>说明：</p><p>你的算法应该具有线性时间复杂度。 你可以不使用额外空间来实现吗？</p><p>示例 1:</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">输入: [2,2,1]</span><br><span class="line">输出: 1</span><br></pre></td></tr></table></figure><p>解题思路:用异或，自己和自己异或是0，剩下的就是结果</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">singleNumber</span><span class="params">(<span class="keyword">int</span>[] nums)</span> </span>&#123;</span><br><span class="line">         <span class="keyword">int</span> ans=<span class="number">0</span>;</span><br><span class="line">         <span class="keyword">for</span>(<span class="keyword">int</span>  num:nums)</span><br><span class="line">           ans^=num;</span><br><span class="line">        <span class="keyword">return</span> ans;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="第137题：只出现一次的数字Ⅱ"><a href="#第137题：只出现一次的数字Ⅱ" class="headerlink" title="第137题：只出现一次的数字Ⅱ"></a>第137题：只出现一次的数字Ⅱ</h2><p>给定一个非空整数数组，除了某个元素只出现一次以外，其余每个元素均出现了三次。找出那个只出现了一次的元素。说明：你的算法应该具有线性时间复杂度。你可以不使用额外空间来实现吗？<br>说明：</p><p>你的算法应该具有线性时间复杂度。 你可以不使用额外空间来实现吗？</p><p>示例 1:</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">输入: [2,2,3,2]</span><br><span class="line">输出: 3</span><br></pre></td></tr></table></figure><p>解题思路：<br>方法一：哈希表，存储元素和次数，然后再遍历找到那个次数为1的。</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">singleNumber</span><span class="params">(<span class="keyword">int</span>[] nums)</span> </span>&#123;</span><br><span class="line">             HashMap&lt;Integer,Integer&gt; map=<span class="keyword">new</span> HashMap&lt;Integer,Integer&gt;();</span><br><span class="line">             <span class="keyword">for</span>(<span class="keyword">int</span> num:nums)</span><br><span class="line">             &#123;</span><br><span class="line">                 map.put(num,map.getOrDefault(num,<span class="number">0</span>)+<span class="number">1</span>);</span><br><span class="line"></span><br><span class="line">             &#125;</span><br><span class="line">             <span class="keyword">for</span>(<span class="keyword">int</span> k:map.keySet())</span><br><span class="line">              <span class="keyword">if</span>(map.get(k)==<span class="number">1</span>) <span class="keyword">return</span> k;</span><br><span class="line">             <span class="keyword">return</span> -<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>方法二： 数学，[A,A,A,B,B,B,C,C,C] 和 [A,A,A,B,B,B,C]，差了两个C。即：</p><p><em>3×(a b c)−(a a a b b b c)=2c</em>，也就是去重后数组的和x3-现在数组的和是c的两倍。</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">singleNumber</span><span class="params">(<span class="keyword">int</span>[] nums)</span> </span>&#123;</span><br><span class="line">            Set&lt;Long&gt; set=<span class="keyword">new</span> HashSet&lt;&gt;();</span><br><span class="line">            <span class="keyword">long</span> sumSet=<span class="number">0</span>,sumArr=<span class="number">0</span>;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> num:nums)</span><br><span class="line">            &#123;</span><br><span class="line">                sumArr+=num;</span><br><span class="line">                set.add((<span class="keyword">long</span>)num);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">long</span> s:set) sumSet+=s;</span><br><span class="line">            <span class="keyword">return</span> (<span class="keyword">int</span>)((sumSet*<span class="number">3</span>-sumArr)/<span class="number">2</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>方法三：位运算。<br>。。。。。。。。。。。。。</p><h2 id="第268题：缺失数字"><a href="#第268题：缺失数字" class="headerlink" title="第268题：缺失数字"></a>第268题：缺失数字</h2><p>给定一个包含 0, 1, 2, …, n 中 n 个数的序列，找出 0 .. n 中没有出现在序列中的那个数。</p><p>示例 1:</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">输入: [3,0,1]</span><br><span class="line">输出: 2</span><br></pre></td></tr></table></figure><p>解题思路：<br>方法一：1到n的和是(n+1)<em>n/2,我们算出总的和，然后减去这个数组的和，剩下的就是我们要求的。因为有一个0，所以数组的长度也就是1到n的长度。<br>3 0 1 作为例子，n</em>(n+1)/2的结果是6，然后数组的结果是4，所以差2。</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">missingNumber</span><span class="params">(<span class="keyword">int</span>[] nums)</span> </span>&#123;</span><br><span class="line">          <span class="keyword">int</span> len=nums.length;</span><br><span class="line">          <span class="keyword">int</span> sum=(len+<span class="number">1</span>)*len/<span class="number">2</span>;</span><br><span class="line">          <span class="keyword">int</span> tsum=<span class="number">0</span>;</span><br><span class="line">          <span class="keyword">for</span>(<span class="keyword">int</span> num:nums)</span><br><span class="line">            tsum+=num;</span><br><span class="line">          <span class="keyword">return</span> sum-tsum;     </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>方法二：异或，假设是n然后用 ans^ =nums[i]^ i来找到那个值。<br>3 0 1作为例子 3^  (3 ^ 0)  ^ (0 ^1) ^ (1 ^ 2),结果就是2,括号里是nums[i] ^ i。</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">missingNumber</span><span class="params">(<span class="keyword">int</span>[] nums)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">int</span> ans=nums.length;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;nums.length;i++)</span><br><span class="line">           ans^=nums[i]^i;</span><br><span class="line">        <span class="keyword">return</span> ans;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">小浩算法-java题解</summary>
    
    
    
    <category term="刷题笔记" scheme="https://www.maolilan.top/categories/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0/"/>
    
    
    <category term="笔记" scheme="https://www.maolilan.top/tags/%E7%AC%94%E8%AE%B0/"/>
    
    <category term="leetcode" scheme="https://www.maolilan.top/tags/leetcode/"/>
    
  </entry>
  
  <entry>
    <title>小浩算法-java题解-字符串篇</title>
    <link href="https://www.maolilan.top/article/18e57658.html"/>
    <id>https://www.maolilan.top/article/18e57658.html</id>
    <published>2020-07-30T15:14:32.000Z</published>
    <updated>2020-07-30T15:15:54.354Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\css\APlayer.min.css"><script src="\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\js\Meting.min.js"></script><h1 id="字符串篇"><a href="#字符串篇" class="headerlink" title="字符串篇"></a>字符串篇</h1><h2 id="第344题：反转字符串"><a href="#第344题：反转字符串" class="headerlink" title="第344题：反转字符串"></a>第344题：反转字符串</h2><p>编写一个函数，其作用是将输入的字符串反转过来。输入字符串以字符数组 char[] 的形式给出。<br>不要给另外的数组分配额外的空间，你必须原地修改输入数组、使用 O(1) 的额外空间解决这一问题。<br>示例 1：</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">输入：[&quot;h&quot;,&quot;e&quot;,&quot;l&quot;,&quot;l&quot;,&quot;o&quot;]</span><br><span class="line">输出：[&quot;o&quot;,&quot;l&quot;,&quot;l&quot;,&quot;e&quot;,&quot;h&quot;]</span><br></pre></td></tr></table></figure><p>解题思路：双指针一个指向头，一个指向尾，用一个tmp交换头尾，直到头和尾一样。</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">reverseString</span><span class="params">(<span class="keyword">char</span>[] s)</span> </span>&#123;</span><br><span class="line">          <span class="keyword">int</span> start=<span class="number">0</span>,end=s.length-<span class="number">1</span>;</span><br><span class="line">          <span class="keyword">while</span>(start&lt;end)</span><br><span class="line">          &#123;</span><br><span class="line">              <span class="keyword">char</span> tem=s[start];</span><br><span class="line">              s[start]=s[end];</span><br><span class="line">              s[end]=tem;</span><br><span class="line">              start++;end--;</span><br><span class="line">          &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="第387题：字符串中的第一个唯一字符"><a href="#第387题：字符串中的第一个唯一字符" class="headerlink" title="第387题：字符串中的第一个唯一字符"></a>第387题：字符串中的第一个唯一字符</h2><p>给定一个字符串，找到它的第一个不重复的字符，并返回它的索引。如果不存在，则返回 -1 。<br>案例:</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">s &#x3D; &quot;leetcode&quot;</span><br><span class="line">返回 0.</span><br><span class="line"></span><br><span class="line">s &#x3D; &quot;loveleetcode&quot;,</span><br><span class="line">返回 2.  </span><br><span class="line">**注意事项：**您可以假定该字符串只包含小写字母。</span><br></pre></td></tr></table></figure><p>解题思路：两遍遍历，第一次遍历用哈希表存储字符串的每一个元素和次数，第二次遍历把出现次数为1的找到然后打印索引。</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">firstUniqChar</span><span class="params">(String s)</span> </span>&#123;</span><br><span class="line">       HashMap&lt;Character,Integer&gt; map=<span class="keyword">new</span> HashMap&lt;Character,Integer&gt;();</span><br><span class="line">       <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;s.length();i++)</span><br><span class="line">       &#123;  </span><br><span class="line">           <span class="keyword">char</span> c=s.charAt(i);</span><br><span class="line">           map.put(c,map.getOrDefault(c,<span class="number">0</span>)+<span class="number">1</span>);</span><br><span class="line"></span><br><span class="line">       &#125;</span><br><span class="line">       <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;s.length();i++)</span><br><span class="line">       &#123;</span><br><span class="line">           <span class="keyword">if</span>(map.get(s.charAt(i))==<span class="number">1</span>) <span class="keyword">return</span> i;<span class="comment">//如果当前元素的次数为1，那么说明找到了这个元素，返回索引即可</span></span><br><span class="line">       &#125;</span><br><span class="line">       <span class="keyword">return</span> -<span class="number">1</span>;<span class="comment">//说明没有这个元素</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="题目28：实现-strStr"><a href="#题目28：实现-strStr" class="headerlink" title="题目28：实现 strStr()"></a>题目28：实现 strStr()</h2><p>实现 strStr() 函数。给定一个 haystack 字符串和一个 needle 字符串，在 haystack 字符串中找出 needle 字符串出现的第一个位置 (从0开始)。如果不存在，则返回 -1。<br>示例 1:</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">输入: haystack &#x3D; &quot;hello&quot;, needle &#x3D; &quot;ll&quot;</span><br><span class="line">输出: 2</span><br></pre></td></tr></table></figure><p><strong>注意事项：</strong>您可以假定该字符串只包含小写字母。<br>解题思路：sunday没整明白，用的官解。<br>有点像滑窗，每次用模式串来和目标串进行对比。</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">strStr</span><span class="params">(String haystack, String needle)</span> </span>&#123;</span><br><span class="line">       <span class="keyword">int</span> hl=haystack.length(),nl=needle.length();</span><br><span class="line">       <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;hl-nl+<span class="number">1</span>;i++)</span><br><span class="line">       &#123;</span><br><span class="line">           <span class="keyword">if</span>(haystack.substring(i,i+nl).equals(needle)) <span class="keyword">return</span> i;</span><br><span class="line"></span><br><span class="line">       &#125;</span><br><span class="line">       <span class="keyword">return</span> -<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="剑指-Offer-17题目：大数打印"><a href="#剑指-Offer-17题目：大数打印" class="headerlink" title="剑指 Offer 17题目：大数打印"></a>剑指 Offer 17题目：大数打印</h2><p>输入数字 n，按顺序打印出从 1 到最大的 n 位十进制数。比如输入 3，则打印出 1、2、3 一直到最大的 3 位数 999。<br>示例 1:</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">输入: n &#x3D; 1 </span><br><span class="line">输出: [1,2,3,4,5,6,7,8,9]</span><br></pre></td></tr></table></figure><p>解题思路：<br>方法一：用Math.pow确定要打印的长度</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">int</span>[] printNumbers(<span class="keyword">int</span> n) &#123;</span><br><span class="line">            <span class="keyword">int</span> len=(<span class="keyword">int</span>)Math.pow(<span class="number">10</span>,n);</span><br><span class="line">             <span class="keyword">int</span> ans[]=<span class="keyword">new</span> <span class="keyword">int</span>[len-<span class="number">1</span>];</span><br><span class="line">             <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;len;i++)</span><br><span class="line">           &#123;</span><br><span class="line">                ans[i-<span class="number">1</span>]=i;</span><br><span class="line">            &#125;</span><br><span class="line">           <span class="keyword">return</span> ans;</span><br><span class="line"></span><br><span class="line">            </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>方法二：<br>计数形式的记下来然后打印出来</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">int</span>[] printNumbers(<span class="keyword">int</span> n) &#123;</span><br><span class="line">            <span class="keyword">int</span> l=<span class="number">0</span>;</span><br><span class="line">            <span class="keyword">while</span>(<span class="number">0</span>&lt;n)</span><br><span class="line">            &#123;</span><br><span class="line">                n--;</span><br><span class="line">                l=l*<span class="number">10</span>+<span class="number">9</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">int</span> ans[]=<span class="keyword">new</span> <span class="keyword">int</span>[l];</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=l;i++)</span><br><span class="line">             ans[i-<span class="number">1</span>]=i;</span><br><span class="line">            <span class="keyword">return</span> ans;</span><br><span class="line"></span><br><span class="line">            </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>方法三：字符串记录。详情看这个大佬的。</p><h2 id="第125题：验证回文串"><a href="#第125题：验证回文串" class="headerlink" title="第125题：验证回文串"></a>第125题：验证回文串</h2><p>给定一个字符串，验证它是否是回文串，只考虑字母和数字字符，可以忽略字母的大小写。<br>说明： 本题中，我们将空字符串定义为有效的回文串。</p><p>示例 1:</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">输入: &quot;A man, a plan, a canal: Panama&quot;</span><br><span class="line">输出: true</span><br></pre></td></tr></table></figure><p>解题思路：先全部搞成小写，然后过滤掉不比较的，然后用双指针来比较头和尾。</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">isPalindrome</span><span class="params">(String s)</span> </span>&#123;</span><br><span class="line">       s=s.toLowerCase();</span><br><span class="line">       <span class="keyword">char</span>  c[]=s.toCharArray();</span><br><span class="line">       <span class="keyword">int</span> i=<span class="number">0</span>;</span><br><span class="line">       <span class="keyword">int</span> j=s.length()-<span class="number">1</span>;</span><br><span class="line">       <span class="keyword">while</span>(i&lt;j)</span><br><span class="line">       &#123;</span><br><span class="line">          <span class="keyword">if</span> (!((c[i] &gt;= <span class="string">&#x27;0&#x27;</span> &amp;&amp; c[i] &lt;= <span class="string">&#x27;9&#x27;</span>) || (c[i] &gt;= <span class="string">&#x27;a&#x27;</span> &amp;&amp; c[i] &lt;= <span class="string">&#x27;z&#x27;</span>))) </span><br><span class="line">           &#123;</span><br><span class="line">               i++;</span><br><span class="line">               <span class="keyword">continue</span>;</span><br><span class="line">           &#125;</span><br><span class="line">           <span class="keyword">if</span> (!((c[j] &gt;= <span class="string">&#x27;0&#x27;</span> &amp;&amp; c[j] &lt;= <span class="string">&#x27;9&#x27;</span>) || (c[j] &gt;= <span class="string">&#x27;a&#x27;</span> &amp;&amp; c[j] &lt;= <span class="string">&#x27;z&#x27;</span>))) </span><br><span class="line">           &#123;</span><br><span class="line">               j--;</span><br><span class="line">               <span class="keyword">continue</span>;</span><br><span class="line">           &#125;</span><br><span class="line">           <span class="keyword">if</span>(c[i]!=c[j])</span><br><span class="line">           <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">           i++;</span><br><span class="line">           j--;</span><br><span class="line">       &#125;</span><br><span class="line">       <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line"> &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="第796题：旋转字符串"><a href="#第796题：旋转字符串" class="headerlink" title="第796题：旋转字符串"></a>第796题：旋转字符串</h2><p>给定两个字符串, A 和 B。A 的旋转操作就是将 A 最左边的字符移动到最右边。例如, 若 A = ‘abcde’，在移动一次之后结果就是’bcdea’ 。如果在若干次旋转操作之后，A 能变成B，那么返回True。<br>示例 1:</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">输入: A &#x3D; &#39;abcde&#39;, B &#x3D; &#39;cdeab&#39;</span><br><span class="line">输出: true</span><br></pre></td></tr></table></figure><p>解题思路：<br>方法一：把A串的每一个元素向后移，然后再和B进行比较。</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">rotateString</span><span class="params">(String A, String B)</span> </span>&#123;</span><br><span class="line">       <span class="keyword">if</span>(A.equals(<span class="string">&quot;&quot;</span>) &amp;&amp; B.equals(<span class="string">&quot;&quot;</span>))</span><br><span class="line">       <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">       <span class="keyword">int</span> len=A.length();</span><br><span class="line">       <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;len;i++)</span><br><span class="line">       &#123;</span><br><span class="line">           String first=A.substring(<span class="number">0</span>,<span class="number">1</span>);</span><br><span class="line">           String last=A.substring(<span class="number">1</span>,len);</span><br><span class="line">           A=last+first;</span><br><span class="line">           <span class="keyword">if</span>(A.equals(B)) <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">       &#125;</span><br><span class="line">       <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>方法二：无论怎么移，B符合条件的话一定是A+A的子串，所以判断B是不是A+A的子串就好了。</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">rotateString</span><span class="params">(String A, String B)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> A.length()==B.length()&amp;&amp; (A+A).contains(B);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="第58题：最后一个单词的长度"><a href="#第58题：最后一个单词的长度" class="headerlink" title="第58题：最后一个单词的长度"></a>第58题：最后一个单词的长度</h2><p>给定一个仅包含大小写字母和空格 ‘ ‘ 的字符串 s，返回其最后一个单词的长度。如果字符串从左向右滚动显示，那么最后一个单词就是最后出现的单词。<br>示例：</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">输入: &quot;Hello World&quot; </span><br><span class="line">输出: 5</span><br><span class="line">说明： 一个单词是指仅由字母组成、不包含任何空格字符的 最大子字符串。</span><br></pre></td></tr></table></figure><p>解题思路：从最后一个不为空的地方开始计数,计数为ans，比如”AAA bbb CCCC        “就是在最后一个C开始计数的，如果末尾是空格，并且ans为0，那么略过。</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">lengthOfLastWord</span><span class="params">(String s)</span> </span>&#123;</span><br><span class="line">         <span class="keyword">int</span> len=s.length();</span><br><span class="line">         <span class="keyword">int</span> ans=<span class="number">0</span>;</span><br><span class="line">         <span class="keyword">for</span>(<span class="keyword">int</span> i=len-<span class="number">1</span>;i&gt;=<span class="number">0</span>;i--)</span><br><span class="line">         &#123;   </span><br><span class="line">             <span class="keyword">if</span>(s.charAt(i)==<span class="string">&#x27; &#x27;</span>)</span><br><span class="line">             &#123;</span><br><span class="line">                 <span class="keyword">if</span>(ans==<span class="number">0</span>) <span class="keyword">continue</span>;</span><br><span class="line">                 <span class="keyword">break</span>;</span><br><span class="line">             &#125;</span><br><span class="line">               </span><br><span class="line">             <span class="keyword">else</span> ans++;</span><br><span class="line"></span><br><span class="line">         &#125;</span><br><span class="line">         <span class="keyword">return</span> ans;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">小浩算法-java题解</summary>
    
    
    
    <category term="刷题笔记" scheme="https://www.maolilan.top/categories/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0/"/>
    
    
    <category term="笔记" scheme="https://www.maolilan.top/tags/%E7%AC%94%E8%AE%B0/"/>
    
    <category term="leetcode" scheme="https://www.maolilan.top/tags/leetcode/"/>
    
  </entry>
  
  <entry>
    <title>小浩算法-java题解-动态规划篇</title>
    <link href="https://www.maolilan.top/article/21f50898.html"/>
    <id>https://www.maolilan.top/article/21f50898.html</id>
    <published>2020-07-29T09:25:23.000Z</published>
    <updated>2020-07-29T09:59:30.515Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\css\APlayer.min.css"><script src="\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\js\Meting.min.js"></script><p>原文链接<br><a href="https://www.geekxh.com/0.0.%E5%AD%A6%E4%B9%A0%E9%A1%BB%E7%9F%A5/01.html">https://www.geekxh.com/0.0.%E5%AD%A6%E4%B9%A0%E9%A1%BB%E7%9F%A5/01.html</a><br>这里是把这个大佬的题解用java写一下做个记录</p><h1 id="动态规划篇"><a href="#动态规划篇" class="headerlink" title="动态规划篇"></a>动态规划篇</h1><h2 id="第70题：爬楼梯"><a href="#第70题：爬楼梯" class="headerlink" title="第70题：爬楼梯"></a>第70题：爬楼梯</h2><p>假设你正在爬楼梯。需要 n 阶你才能到达楼顶。每次你可以爬 1 或 2 个台阶。你有多少种不同的方法可以爬到楼顶呢？ <strong>注意：</strong>给定 n 是一个正整数。<br>示例 1：</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">输入： 2   输出： 2  解释： 有两种方法可以爬到楼顶。</span><br><span class="line">1.  1 阶 + 1 阶</span><br><span class="line">2.  2 阶</span><br></pre></td></tr></table></figure><p>解题思路：动态规划，dp[n]表示在第n个台阶时的所有方法，dp[1]=1,dp[2]=2,dp[n]=dp[n-1]+dp[n-2]，也就是前n-1个台阶的答案加上n-2个的答案。</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">climbStairs</span><span class="params">(<span class="keyword">int</span> n)</span> </span>&#123;</span><br><span class="line">          <span class="keyword">if</span>(n==<span class="number">1</span>) <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">          <span class="keyword">int</span> dp[]=<span class="keyword">new</span> <span class="keyword">int</span>[n+<span class="number">1</span>];</span><br><span class="line">          dp[<span class="number">1</span>]=<span class="number">1</span>;</span><br><span class="line">          dp[<span class="number">2</span>]=<span class="number">2</span>;</span><br><span class="line">          <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">3</span>;i&lt;=n;i++)</span><br><span class="line">             dp[i]=dp[i-<span class="number">1</span>]+dp[i-<span class="number">2</span>];</span><br><span class="line">          <span class="keyword">return</span> dp[n];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="第53题：最大子序和"><a href="#第53题：最大子序和" class="headerlink" title="第53题：最大子序和"></a>第53题：最大子序和</h2><p>给定一个整数数组 nums ，找到一个具有最大和的连续子数组（子数组最少包含一个元素），返回其最大和。<br>示例:</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">输入: [-2,1,-3,4,-1,2,1,-5,4],</span><br><span class="line">输出: 6</span><br><span class="line">解释: 连续子数组 [4,-1,2,1] 的和最大，为 6。</span><br></pre></td></tr></table></figure><p>解题思路：<br>方法一：不动态规划，就直接累加，大于0就一直累加，否则就重新开始累加</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">maxSubArray</span><span class="params">(<span class="keyword">int</span>[] nums)</span> </span>&#123;</span><br><span class="line">             <span class="keyword">int</span> ans=nums[<span class="number">0</span>];</span><br><span class="line">             <span class="keyword">int</span> sum=<span class="number">0</span>;</span><br><span class="line">             <span class="keyword">for</span>(<span class="keyword">int</span> num:nums)</span><br><span class="line">             &#123;</span><br><span class="line">                 <span class="keyword">if</span>(sum&gt;<span class="number">0</span>) sum+=num;</span><br><span class="line">                 <span class="keyword">else</span> sum=num;</span><br><span class="line">                 ans=Math.max(sum,ans);</span><br><span class="line">             &#125;</span><br><span class="line">             <span class="keyword">return</span> ans;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>方法二：动态规划。dp[i]表示以nums[i]结尾的最大子序列和，这个有两个可能，一个是前一个加上nums[i]，但是这个nums[i-1]就有可能是负的，所以还有可能是nums[i]，所以取这两个的最大值，dp[i]=Math.max(dp[i-1],nums[i])。</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">maxSubArray</span><span class="params">(<span class="keyword">int</span>[] nums)</span> </span>&#123;</span><br><span class="line">            <span class="keyword">if</span>(nums.length&lt;<span class="number">1</span>) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">int</span> ans=nums[<span class="number">0</span>];</span><br><span class="line">            <span class="keyword">int</span> dp[]=<span class="keyword">new</span> <span class="keyword">int</span>[nums.length];</span><br><span class="line">            dp[<span class="number">0</span>]=nums[<span class="number">0</span>];</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;nums.length;i++)</span><br><span class="line">           &#123;</span><br><span class="line">              dp[i]=Math.max((dp[i-<span class="number">1</span>]+nums[i]),nums[i]);</span><br><span class="line">               ans=Math.max(dp[i],ans);</span><br><span class="line">          &#125;</span><br><span class="line">          <span class="keyword">return</span> ans;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="第300题：最长上升子序列"><a href="#第300题：最长上升子序列" class="headerlink" title="第300题：最长上升子序列"></a>第300题：最长上升子序列</h2><p>给定一个无序的整数数组，找到其中最长上升子序列的长度。<br>示例:</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">输入: [10,9,2,5,3,7,101,18]</span><br><span class="line">输出: 4 </span><br><span class="line">解释: 最长的上升子序列是 [2,3,7,101]，它的长度是 4。</span><br><span class="line">说明:</span><br><span class="line"></span><br><span class="line">可能会有多种最长上升子序列的组合，你只需要输出对应的长度即可。</span><br></pre></td></tr></table></figure><p>解题思路：承接上一题，dp[i]表示以nums[i]结尾的最长上升子序列，如果nums[i]大于前面的任意一个nums[j],0&lt;=j&lt;i，那么此时dp[i]=max(dp[i],dp[j]+1)。配合代码比较直观</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">lengthOfLIS</span><span class="params">(<span class="keyword">int</span>[] nums)</span> </span>&#123;</span><br><span class="line">             <span class="keyword">if</span>(nums.length==<span class="number">0</span>) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">             <span class="keyword">int</span> dp[]=<span class="keyword">new</span> <span class="keyword">int</span>[nums.length];</span><br><span class="line">             <span class="keyword">int</span> ans=<span class="number">1</span>;<span class="comment">//假设答案是1，更新这个答案</span></span><br><span class="line">             <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;nums.length;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        dp[i]=<span class="number">1</span>;<span class="comment">//将dp[i]初始化为1，默认nums[i]是要求的子序列，长度为1</span></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;i;j++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(nums[j]&lt;nums[i])<span class="comment">//如果是严格递增才开始算，否则直接跳过</span></span><br><span class="line">             dp[i]=Math.max(dp[j]+<span class="number">1</span>,dp[i]);<span class="comment">//进行更新，要么是还要+1，要么就不加，</span></span><br><span class="line">             <span class="comment">//比如 2 4 3 5，执行的话dp[3]=1是初始化，然后更新，</span></span><br><span class="line">             <span class="comment">//dp[3]=max(dp[0]+1,1)=2,dp[3]=max(dp[1]+1,2)=3,dp[3]=max(dp[2]+1,3)=3。所以最后答案是3</span></span><br><span class="line">        &#125;</span><br><span class="line">        ans=Math.max(ans,dp[i]);</span><br><span class="line">       </span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="第120题：三角形最小路径和"><a href="#第120题：三角形最小路径和" class="headerlink" title="第120题：三角形最小路径和"></a>第120题：三角形最小路径和</h2><p>给定一个三角形，找出自顶向下的最小路径和。每一步只能移动到下一行中相邻的结点上。<br>例如，给定三角形：</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[</span><br><span class="line">     [2],</span><br><span class="line">    [3,4],</span><br><span class="line">   [6,5,7],</span><br><span class="line">  [4,1,8,3]</span><br><span class="line">]</span><br><span class="line">则自顶向下的最小路径和为 11（即，2 + 3 + 5 + 1 &#x3D; 11）。</span><br></pre></td></tr></table></figure><p>解题思路：<br>方法一从下到上，甜姐的思路：<br><a href="https://leetcode-cn.com/problems/triangle/solution/di-gui-ji-yi-hua-dp-bi-xu-miao-dong-by-sweetiee/">https://leetcode-cn.com/problems/triangle/solution/di-gui-ji-yi-hua-dp-bi-xu-miao-dong-by-sweetiee/</a><br>从下到上可以避免边界问题。<br><img src= "/img/loading.gif" data-src="https://img-blog.csdnimg.cn/20200729165708802.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxMzE4NDAw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>其他解法可以去看甜姐的题解。</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">minimumTotal</span><span class="params">(List&lt;List&lt;Integer&gt;&gt; triangle)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> n=triangle.size();</span><br><span class="line">         <span class="keyword">int</span> dp[][]=<span class="keyword">new</span> <span class="keyword">int</span>[n+<span class="number">1</span>][n+<span class="number">1</span>];</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=n-<span class="number">1</span>;i&gt;=<span class="number">0</span>;i--)</span><br><span class="line">        &#123;</span><br><span class="line">          <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;=i;j++)</span><br><span class="line">           dp[i][j]=Math.min(dp[i+<span class="number">1</span>][j],dp[i+<span class="number">1</span>][j+<span class="number">1</span>])+triangle.get(i).get(j);</span><br><span class="line">       &#125;</span><br><span class="line">       <span class="keyword">return</span> dp[<span class="number">0</span>][<span class="number">0</span>];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>方法二：从上到下，需要考虑边界，如果是在左边则只可能是从上面来的，如果是在右边界则只可能是从左上角来的。其他情况就是这两个的最小值了。</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">minimumTotal</span><span class="params">(List&lt;List&lt;Integer&gt;&gt; triangle)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> n=triangle.size();</span><br><span class="line">        <span class="keyword">if</span>(n==<span class="number">0</span>) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">if</span>(n==<span class="number">1</span>) <span class="keyword">return</span> triangle.get(<span class="number">0</span>).get(<span class="number">0</span>);</span><br><span class="line">        <span class="keyword">int</span> dp[][]=<span class="keyword">new</span> <span class="keyword">int</span>[n][n];</span><br><span class="line">        dp[<span class="number">0</span>][<span class="number">0</span>]=triangle.get(<span class="number">0</span>).get(<span class="number">0</span>);</span><br><span class="line">        dp[<span class="number">1</span>][<span class="number">0</span>]=triangle.get(<span class="number">1</span>).get(<span class="number">0</span>)+triangle.get(<span class="number">0</span>).get(<span class="number">0</span>);</span><br><span class="line">        dp[<span class="number">1</span>][<span class="number">1</span>]=triangle.get(<span class="number">1</span>).get(<span class="number">1</span>)+triangle.get(<span class="number">0</span>).get(<span class="number">0</span>);</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">2</span>;i&lt;n;i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;=i;j++)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span>(j==<span class="number">0</span>) dp[i][j]=dp[i-<span class="number">1</span>][j]+triangle.get(i).get(<span class="number">0</span>); <span class="comment">//如果是在左边界</span></span><br><span class="line">                <span class="keyword">else</span> <span class="keyword">if</span>(j==i) dp[i][j]=dp[i-<span class="number">1</span>][j-<span class="number">1</span>]+triangle.get(i).get(j);<span class="comment">//如果是在有边界</span></span><br><span class="line">                <span class="keyword">else</span> dp[i][j]=Math.min(dp[i-<span class="number">1</span>][j-<span class="number">1</span>],dp[i-<span class="number">1</span>][j])+triangle.get(i).get(j);</span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">int</span> ans=dp[n-<span class="number">1</span>][<span class="number">0</span>];<span class="comment">//假定最后一行的第一个是答案</span></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;n;i++)</span><br><span class="line">        &#123;</span><br><span class="line">           ans=Math.min(dp[n-<span class="number">1</span>][i],ans);<span class="comment">//取那个最小值</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> ans;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="第64题：最小路径和"><a href="#第64题：最小路径和" class="headerlink" title="第64题：最小路径和"></a>第64题：最小路径和</h2><p>给定一个包含非负整数的 m x n 网格，请找出一条从左上角到右下角的路径，使得路径上的数字总和为最小。<br>说明：每次只能向下或者向右移动一步。</p><p>示例:</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">输入:</span><br><span class="line">[</span><br><span class="line">  [1,3,1],</span><br><span class="line">  [1,5,1],</span><br><span class="line">  [4,2,1]</span><br><span class="line">]</span><br><span class="line">输出: 7</span><br><span class="line">解释: 因为路径 1→3→1→1→1 的总和最小。</span><br></pre></td></tr></table></figure><p>解题思路：<br>和上面的类似，dp[i][j]表示在第i行第j列时的最小路径和，如果i=0，说明在第一行，此时只能从左边来，dp[i][j]=dp[i][j-1]+grid[i][j]，如果j=0，说明只能从上面来，那么dp[i][j]=dp[i-1][j]+grid[i][j]。其他情况就是判断上面和左边的最小值再加上那个位置的数即可。</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">minPathSum</span><span class="params">(<span class="keyword">int</span>[][] grid)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(grid.length==<span class="number">0</span>) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">int</span> dp[][]=<span class="keyword">new</span> <span class="keyword">int</span>[grid.length][grid[<span class="number">0</span>].length];</span><br><span class="line">        dp[<span class="number">0</span>][<span class="number">0</span>]=grid[<span class="number">0</span>][<span class="number">0</span>];</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;grid.length;i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;grid[i].length;j++)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span>(i==<span class="number">0</span> &amp;&amp; j!=<span class="number">0</span>) dp[i][j]=dp[i][j-<span class="number">1</span>]+grid[i][j];</span><br><span class="line">                <span class="keyword">else</span> <span class="keyword">if</span>(j==<span class="number">0</span> &amp;&amp; i!=<span class="number">0</span>) dp[i][j]=dp[i-<span class="number">1</span>][j]+grid[i][j];</span><br><span class="line">                <span class="keyword">else</span> <span class="keyword">if</span>(j!=<span class="number">0</span> &amp;&amp; i!=<span class="number">0</span>) dp[i][j]=Math.min(dp[i][j-<span class="number">1</span>],dp[i-<span class="number">1</span>][j])+grid[i][j];</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> dp[grid.length-<span class="number">1</span>][grid[<span class="number">0</span>].length-<span class="number">1</span>];</span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="第198题：打家劫舍"><a href="#第198题：打家劫舍" class="headerlink" title="第198题：打家劫舍"></a>第198题：打家劫舍</h2><p>你是一个专业的小偷，计划偷窃沿街的房屋。每间房内都藏有一定的现金，影响你偷窃的唯一制约因素就是相邻的房屋装有相互连通的防盗系统，如果两间相邻的房屋在同一晚上被小偷闯入，系统会自动报警。<br>给定一个代表每个房屋存放金额的非负整数数组，计算你在不触动警报装置的情况下，能够偷窃到的最高金额。</p><p>示例 1:</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">输入: [1,2,3,1]</span><br><span class="line">输出: 4</span><br><span class="line">解释: 偷窃 1 号房屋 (金额 &#x3D; 1) ，然后偷窃 3 号房屋 (金额 &#x3D; 3)。</span><br><span class="line"> 偷窃到的最高金额 &#x3D; 1 + 3 &#x3D; 4 。</span><br></pre></td></tr></table></figure><p>解题思路：dp[i]表示在第i号房获得的最大收益，dp[0]=nums[0],dp[1]=max(dp[0],dp[1])，dp[2]=max(dp[i-2]+nums[2],dp[i-1]),要么是倒数第二房间+该房间，要么是倒数第一个房间。最后返回dp[nums.length-1]便是我们需要的答案。</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">rob</span><span class="params">(<span class="keyword">int</span>[] nums)</span> </span>&#123;</span><br><span class="line">           <span class="keyword">int</span>  len=nums.length;</span><br><span class="line">           <span class="keyword">if</span>(len==<span class="number">0</span>) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">           <span class="keyword">if</span>(len==<span class="number">1</span>) <span class="keyword">return</span> nums[<span class="number">0</span>];</span><br><span class="line">           <span class="keyword">int</span> [] dp=<span class="keyword">new</span> <span class="keyword">int</span>[len];</span><br><span class="line">           dp[<span class="number">0</span>]=nums[<span class="number">0</span>];</span><br><span class="line">           dp[<span class="number">1</span>]=Math.max(nums[<span class="number">0</span>],nums[<span class="number">1</span>]);</span><br><span class="line">           <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">2</span>;i&lt;len;i++)</span><br><span class="line">           &#123;</span><br><span class="line">               dp[i]=Math.max(dp[i-<span class="number">1</span>],dp[i-<span class="number">2</span>]+nums[i]);</span><br><span class="line">           &#125;</span><br><span class="line">           <span class="keyword">return</span> dp[len-<span class="number">1</span>];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">小浩算法-java题解</summary>
    
    
    
    <category term="刷题笔记" scheme="https://www.maolilan.top/categories/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0/"/>
    
    
    <category term="笔记" scheme="https://www.maolilan.top/tags/%E7%AC%94%E8%AE%B0/"/>
    
    <category term="leetcode" scheme="https://www.maolilan.top/tags/leetcode/"/>
    
  </entry>
  
  <entry>
    <title>小浩算法-java题解-链表篇</title>
    <link href="https://www.maolilan.top/article/7758c0ce.html"/>
    <id>https://www.maolilan.top/article/7758c0ce.html</id>
    <published>2020-07-28T20:42:13.000Z</published>
    <updated>2020-07-30T05:12:55.346Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\css\APlayer.min.css"><script src="\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\js\Meting.min.js"></script><p>原文链接<br><a href="https://www.geekxh.com/0.0.%E5%AD%A6%E4%B9%A0%E9%A1%BB%E7%9F%A5/01.html">https://www.geekxh.com/0.0.%E5%AD%A6%E4%B9%A0%E9%A1%BB%E7%9F%A5/01.html</a><br>这里是把这个大佬的题解用java写一下做个记录</p><h1 id="链表篇"><a href="#链表篇" class="headerlink" title="链表篇"></a>链表篇</h1><h2 id="第19题：删除链表倒数第N个节点"><a href="#第19题：删除链表倒数第N个节点" class="headerlink" title="第19题：删除链表倒数第N个节点"></a>第19题：删除链表倒数第N个节点</h2><p>给定一个链表，删除链表的倒数第 n 个节点，并且返回链表的头结点。<br>示例：</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">给定一个链表: 1-&gt;2-&gt;3-&gt;4-&gt;5, 和 n &#x3D; 2.</span><br><span class="line">当删除了倒数第二个节点后，链表变为 1-&gt;2-&gt;3-&gt;5.</span><br><span class="line">说明：</span><br><span class="line"></span><br><span class="line">给定的 n 保证是有效的。</span><br><span class="line">进阶：</span><br><span class="line"></span><br><span class="line">你能尝试使用一趟扫描实现吗？</span><br></pre></td></tr></table></figure><p>解题思路：用一个哨兵节点res定位，然后用两个指针pre和cur，指向这个哨兵节点，其中cur是要删除的节点，用head进行遍历，当head距离cur有n-1时，cur开始移动，pre始终在cur的前一个，直到head指向null，结束后pre.next=pre.next.next就删除了cur，最后返回res.next。</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Definition for singly-linked list.</span></span><br><span class="line"><span class="comment"> * public class ListNode &#123;</span></span><br><span class="line"><span class="comment"> *     int val;</span></span><br><span class="line"><span class="comment"> *     ListNode next;</span></span><br><span class="line"><span class="comment"> *     ListNode(int x) &#123; val = x; &#125;</span></span><br><span class="line"><span class="comment"> * &#125;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> ListNode <span class="title">removeNthFromEnd</span><span class="params">(ListNode head, <span class="keyword">int</span> n)</span> </span>&#123;</span><br><span class="line">         ListNode res=<span class="keyword">new</span> ListNode(<span class="number">0</span>);<span class="comment">//哨兵节点</span></span><br><span class="line">         res.next=head;</span><br><span class="line">         ListNode pre=res;</span><br><span class="line">         ListNode cur=res;</span><br><span class="line">         <span class="keyword">int</span> i=<span class="number">1</span>; <span class="comment">//距离是n-1，所以从1开始</span></span><br><span class="line">         <span class="keyword">while</span>(head!=<span class="keyword">null</span>)</span><br><span class="line">         &#123;</span><br><span class="line">             <span class="keyword">if</span>(i&gt;=n)</span><br><span class="line">             &#123;</span><br><span class="line">                 pre=cur;</span><br><span class="line">                 cur=cur.next;</span><br><span class="line">             &#125;</span><br><span class="line">             head=head.next;</span><br><span class="line">             i++;</span><br><span class="line">         &#125;</span><br><span class="line">         pre.next=pre.next.next;</span><br><span class="line">         <span class="keyword">return</span> res.next;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>哨兵节点的妙处：<br><img src= "/img/loading.gif" data-src="https://img-blog.csdnimg.cn/20200729031206624.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxMzE4NDAw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h2 id="第21题：合并两个有序链表"><a href="#第21题：合并两个有序链表" class="headerlink" title="第21题：合并两个有序链表"></a>第21题：合并两个有序链表</h2><p>将两个有序链表合并为一个新的有序链表并返回。新链表是通过拼接给定的两个链表的所有节点组成的。<br>示例：</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">输入：1-&gt;2-&gt;4, 1-&gt;3-&gt;4</span><br><span class="line">输出：1-&gt;1-&gt;2-&gt;3-&gt;4-&gt;4</span><br></pre></td></tr></table></figure><p>解题思路：<br>方法一： 递归</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> ListNode <span class="title">mergeTwoLists</span><span class="params">(ListNode l1, ListNode l2)</span> </span>&#123;</span><br><span class="line">          <span class="keyword">if</span>(l1==<span class="keyword">null</span> &amp;&amp; l2==<span class="keyword">null</span>) <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">          <span class="keyword">if</span>(l1==<span class="keyword">null</span>) <span class="keyword">return</span> l2;</span><br><span class="line">          <span class="keyword">if</span>(l2==<span class="keyword">null</span>) <span class="keyword">return</span> l1;</span><br><span class="line">          <span class="keyword">if</span>(l1.val&lt;l2.val)</span><br><span class="line">          &#123;</span><br><span class="line">              l1.next=mergeTwoLists(l1.next,l2);<span class="comment">//下一个是其中那个小的，下面类推</span></span><br><span class="line">              <span class="keyword">return</span> l1;</span><br><span class="line">          &#125;<span class="keyword">else</span></span><br><span class="line">          &#123;</span><br><span class="line">              l2.next=mergeTwoLists(l1,l2.next);</span><br><span class="line">              <span class="keyword">return</span> l2;</span><br><span class="line">          &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>方法二： 使用哨兵节点res，pre用来遍历新的链表，然后再在两个里进行比较，取其中小的那个，最后返回哨兵节点res.next。官方解里有图。</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> ListNode <span class="title">mergeTwoLists</span><span class="params">(ListNode l1, ListNode l2)</span> </span>&#123;</span><br><span class="line">          <span class="keyword">if</span>(l1==<span class="keyword">null</span> &amp;&amp; l2==<span class="keyword">null</span>) <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">          <span class="keyword">if</span>(l1==<span class="keyword">null</span>) <span class="keyword">return</span> l2;</span><br><span class="line">          <span class="keyword">if</span>(l2==<span class="keyword">null</span>) <span class="keyword">return</span> l1;</span><br><span class="line">          ListNode pre=<span class="keyword">new</span> ListNode(<span class="number">0</span>);</span><br><span class="line">          ListNode res=pre;</span><br><span class="line">          <span class="keyword">while</span>(l1!=<span class="keyword">null</span> &amp;&amp; l2!=<span class="keyword">null</span>)</span><br><span class="line">          &#123;</span><br><span class="line">              <span class="keyword">if</span>(l1.val&lt;l2.val)</span><br><span class="line">              &#123;</span><br><span class="line">                  pre.next=l1;</span><br><span class="line">                  l1=l1.next;</span><br><span class="line">              &#125;<span class="keyword">else</span></span><br><span class="line">              &#123;</span><br><span class="line">                  pre.next=l2;</span><br><span class="line">                  l2=l2.next;</span><br><span class="line">              &#125;</span><br><span class="line">              pre=pre.next;</span><br><span class="line">          &#125;</span><br><span class="line">          <span class="keyword">if</span>(l1!=<span class="keyword">null</span>) pre.next=l1;</span><br><span class="line">          <span class="keyword">if</span>(l2!=<span class="keyword">null</span>) pre.next=l2;</span><br><span class="line">          <span class="keyword">return</span> res.next;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="第141题：环形链表"><a href="#第141题：环形链表" class="headerlink" title="第141题：环形链表"></a>第141题：环形链表</h2><p>给定一个链表，判断链表中是否有环。为了表示给定链表中的环，我们使用整数 pos 来表示链表尾连接到链表中的位置（索引从 0 开始）。如果 pos 是 -1，则在该链表中没有环。<br>示例 1：</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">输入：head &#x3D; [3,2,0,-4], pos &#x3D; 1</span><br><span class="line">输出：true</span><br><span class="line">解释：链表中有一个环，其尾部连接到第二个节点。</span><br></pre></td></tr></table></figure><p>解题思路：快慢指针，快指针走两步，慢指针走一步，如果相遇说明就有环。</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">hasCycle</span><span class="params">(ListNode head)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(head == <span class="keyword">null</span> || head.next== <span class="keyword">null</span>) <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">        ListNode slow=head;</span><br><span class="line">        ListNode fast=head.next;</span><br><span class="line">        <span class="keyword">while</span>(fast!=slow)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(fast==<span class="keyword">null</span> || fast.next==<span class="keyword">null</span>) <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">            fast=fast.next.next;</span><br><span class="line">            slow=slow.next;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="第2题：两数相加"><a href="#第2题：两数相加" class="headerlink" title="第2题：两数相加"></a>第2题：两数相加</h2><p>给出两个 非空 的链表用来表示两个非负的整数。其中，它们各自的位数是按照 逆序 的方式存储的，并且它们的每个节点只能存储 一位 数字。<br>给出两个 非空 的链表用来表示两个非负的整数。其中，它们各自的位数是按照 逆序 的方式存储的，并且它们的每个节点只能存储 一位 数字。</p><p>如果，我们将这两个数相加起来，则会返回一个新的链表来表示它们的和。</p><p>您可以假设除了数字 0 之外，这两个数都不会以 0 开头。</p><p>示例：</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">输入：(2 -&gt; 4 -&gt; 3) + (5 -&gt; 6 -&gt; 4)</span><br><span class="line">输出：7 -&gt; 0 -&gt; 8</span><br><span class="line">原因：342 + 465 &#x3D; 807</span><br></pre></td></tr></table></figure><p>解题思路： 构建一个新的链表，这个链表的每一个值都是给的两个链表值的和，然后考虑进位。用哨兵节点指向我们的新链表。建议看大佬的图解，很直观。</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Definition for singly-linked list.</span></span><br><span class="line"><span class="comment"> * public class ListNode &#123;</span></span><br><span class="line"><span class="comment"> *     int val;</span></span><br><span class="line"><span class="comment"> *     ListNode next;</span></span><br><span class="line"><span class="comment"> *     ListNode(int x) &#123; val = x; &#125;</span></span><br><span class="line"><span class="comment"> * &#125;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> ListNode <span class="title">addTwoNumbers</span><span class="params">(ListNode l1, ListNode l2)</span> </span>&#123;</span><br><span class="line">      ListNode list=<span class="keyword">new</span> ListNode(<span class="number">0</span>);</span><br><span class="line">      ListNode res=list;</span><br><span class="line">      <span class="keyword">int</span> tmp=<span class="number">0</span>;</span><br><span class="line">      <span class="keyword">while</span>(l1!=<span class="keyword">null</span> || l2 != <span class="keyword">null</span> || tmp!=<span class="number">0</span> )<span class="comment">//这个是判断是不是结束，tmp是判断进位后</span></span><br><span class="line">      <span class="comment">//的那个是不是结束，比如[5] [5]按照这样是0,1满足条件，而如果没有tmp就变成了0。</span></span><br><span class="line">      &#123;</span><br><span class="line">          <span class="keyword">if</span>(l1!=<span class="keyword">null</span>)</span><br><span class="line">          &#123;</span><br><span class="line">              tmp+=l1.val;</span><br><span class="line">              l1=l1.next;</span><br><span class="line">          &#125;</span><br><span class="line">          <span class="keyword">if</span>(l2!= <span class="keyword">null</span>)</span><br><span class="line">          &#123;</span><br><span class="line">              tmp+=l2.val;</span><br><span class="line">              l2=l2.next;</span><br><span class="line">          &#125;</span><br><span class="line">          list.next=<span class="keyword">new</span> ListNode(tmp%<span class="number">10</span>);<span class="comment">//填入后面的值</span></span><br><span class="line">          tmp/=<span class="number">10</span>;<span class="comment">//判断是不是进位了，如果没有那么这个就是0。</span></span><br><span class="line">          list=list.next;<span class="comment">//新链表后移</span></span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">return</span> res.next;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">小浩算法-java题解</summary>
    
    
    
    <category term="刷题笔记" scheme="https://www.maolilan.top/categories/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0/"/>
    
    
    <category term="笔记" scheme="https://www.maolilan.top/tags/%E7%AC%94%E8%AE%B0/"/>
    
    <category term="leetcode" scheme="https://www.maolilan.top/tags/leetcode/"/>
    
  </entry>
  
</feed>
