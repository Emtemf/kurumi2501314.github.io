<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>电脑软件推荐</title>
    <url>/article/e419ec53.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\css\APlayer.min.css"><script src="\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\js\Meting.min.js"></script><p>目前自己用的好软推荐，不提供破解版，只提供官网。</p>
<h1 id="下载类"><a href="#下载类" class="headerlink" title="下载类"></a>下载类</h1><h2 id="IDM"><a href="#IDM" class="headerlink" title="IDM"></a>IDM</h2><p><img src= "/img/loading.gif" data-src="https://gitee.com/ztfn520/imagebed/raw/master/img/20200803234004.png" alt><br>及其好用，可以多线程下载视频，文件。对于b站大部分视频可以下载，YouTube也是。网盘没黑号可以加速下载。正式版不免费</p>
<p>官网： <a href="http://www.internetdownloadmanager.com/" target="_blank" rel="external nofollow noopener noreferrer">http://www.internetdownloadmanager.com/</a></p>
<h2 id="Xdown"><a href="#Xdown" class="headerlink" title="Xdown"></a>Xdown</h2><p>类似上面。更推荐IDM<br><img src= "/img/loading.gif" data-src="https://gitee.com/ztfn520/imagebed/raw/master/img/20200803234025.png" alt><br>官网：<a href="https://xdown.org/" target="_blank" rel="external nofollow noopener noreferrer">https://xdown.org/</a></p>
<h2 id="Free-Download-Manager"><a href="#Free-Download-Manager" class="headerlink" title="Free Download Manager"></a>Free Download Manager</h2><p>bt类文件比较好，如果能用IDM建议优先IDM。免费。<br>官网： <a href="https://www.freedownloadmanager.org/zh/" target="_blank" rel="external nofollow noopener noreferrer">https://www.freedownloadmanager.org/zh/</a></p>
<h1 id="搜索类"><a href="#搜索类" class="headerlink" title="搜索类"></a>搜索类</h1><h2 id="Everyting"><a href="#Everyting" class="headerlink" title="Everyting"></a>Everyting</h2><p>和listary类似，个人喜欢这个。免费。<br>官网： <a href="https://www.voidtools.com/zh-cn/" target="_blank" rel="external nofollow noopener noreferrer">https://www.voidtools.com/zh-cn/</a></p>
<h1 id="录屏类"><a href="#录屏类" class="headerlink" title="录屏类"></a>录屏类</h1><h2 id="EV录屏"><a href="#EV录屏" class="headerlink" title="EV录屏"></a>EV录屏</h2><p>免费录屏软件。<br><a href="https://www.ieway.cn/" target="_blank" rel="external nofollow noopener noreferrer">https://www.ieway.cn/</a></p>
<h2 id="ScreenToGif"><a href="#ScreenToGif" class="headerlink" title="ScreenToGif"></a>ScreenToGif</h2><p><img src= "/img/loading.gif" data-src="https://gitee.com/ztfn520/imagebed/raw/master/img/20200803233319.png" alt><br>也是免费的，这个可以选择输出格式，不过没声音，可能是我使用方法不对，可以把录屏转成gif。</p>
<p>官网： <a href="https://www.screentogif.com/" target="_blank" rel="external nofollow noopener noreferrer">https://www.screentogif.com/</a></p>
<h1 id="视频播放类"><a href="#视频播放类" class="headerlink" title="视频播放类"></a>视频播放类</h1><h2 id="PotPlayer"><a href="#PotPlayer" class="headerlink" title="PotPlayer"></a>PotPlayer</h2><p>解码很快，有4k片源用这个看很舒服。<br><img src= "/img/loading.gif" data-src="https://gitee.com/ztfn520/imagebed/raw/master/img/20200803233650.png" alt></p>
<p>官网： <a href="https://potplayer.org/" target="_blank" rel="external nofollow noopener noreferrer">https://potplayer.org/</a></p>
<h1 id="解压缩类"><a href="#解压缩类" class="headerlink" title="解压缩类"></a>解压缩类</h1><h2 id="Bandizip"><a href="#Bandizip" class="headerlink" title="Bandizip"></a>Bandizip</h2><p><img src= "/img/loading.gif" data-src="https://gitee.com/ztfn520/imagebed/raw/master/img/20200803233906.png" alt><br>强大的解压缩软件，基本都可以解压缩，也不收费。<br>建议下载6.25版本，没广告，后续版本有广告。<br>官网： <a href="http://www.bandisoft.com/" target="_blank" rel="external nofollow noopener noreferrer">http://www.bandisoft.com/</a></p>
<h1 id="桌面管理类"><a href="#桌面管理类" class="headerlink" title="桌面管理类"></a>桌面管理类</h1><h2 id="Fences"><a href="#Fences" class="headerlink" title="Fences"></a>Fences</h2><p>效果：<br><img src= "/img/loading.gif" data-src="https://gitee.com/ztfn520/imagebed/raw/master/img/20200803234301.png" alt><br>双击后隐藏桌面图标，比较方便归纳。<br>官网： <a href="https://www.stardock.com/products/fences/" target="_blank" rel="external nofollow noopener noreferrer">https://www.stardock.com/products/fences/</a></p>
]]></content>
      <categories>
        <category>电脑软件推荐</category>
      </categories>
      <tags>
        <tag>电脑软件推荐</tag>
      </tags>
  </entry>
  <entry>
    <title>小浩算法-java题解-二分篇</title>
    <url>/article/ae9b4fbd.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\css\APlayer.min.css"><script src="\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\js\Meting.min.js"></script><p>原文链接<br><a href="https://www.geekxh.com/0.0.%E5%AD%A6%E4%B9%A0%E9%A1%BB%E7%9F%A5/01.html" target="_blank" rel="external nofollow noopener noreferrer">https://www.geekxh.com/0.0.%E5%AD%A6%E4%B9%A0%E9%A1%BB%E7%9F%A5/01.html</a><br>这里是把这个大佬的题解用java写一下做个记录</p>
<h1 id="二分篇"><a href="#二分篇" class="headerlink" title="二分篇"></a>二分篇</h1><h2 id="第875题：阿珂喜欢吃香蕉"><a href="#第875题：阿珂喜欢吃香蕉" class="headerlink" title="第875题：阿珂喜欢吃香蕉"></a>第875题：阿珂喜欢吃香蕉</h2><p>这里总共有 N 堆香蕉，第 i 堆中有piles[i] 根香蕉。警卫已经离开了，将在 H 小时后回来。 阿珂可以决定她吃香蕉的速度 K （单位：根/小时），每个小时，她将会选择一堆香蕉，从中吃掉 K 根。<br>如果这堆香蕉少于 K 根，她将吃掉这堆的所有香蕉，然后这一小时内不会再吃更多的香蕉。</p>
<p>珂珂喜欢慢慢吃，但仍然想在警卫回来前吃掉所有的香蕉。返回她可以在 H 小时内吃掉所有香蕉的最小速度 K（K 为整数）。</p>
<p>示例 1：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">输入: piles &#x3D; [3,6,7,11], H &#x3D; 8</span><br><span class="line">输出: 4</span><br></pre></td></tr></table></figure>
<p>解题思路：<br>参考：<a href="https://leetcode-cn.com/problems/koko-eating-bananas/solution/er-fen-cha-zhao-ding-wei-su-du-by-liweiwei1419/" target="_blank" rel="external nofollow noopener noreferrer">https://leetcode-cn.com/problems/koko-eating-bananas/solution/er-fen-cha-zhao-ding-wei-su-du-by-liweiwei1419/</a><br>1小时最低吃1个香蕉，最多吃一大堆香蕉，通过二分找到那个最合适的。</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">minEatingSpeed</span><span class="params">(<span class="keyword">int</span>[] piles, <span class="keyword">int</span> H)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> maxval=<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> num:piles)</span><br><span class="line">           maxval=Math.max(num,maxval);</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">int</span> left=<span class="number">1</span>;<span class="comment">//最少吃一根香蕉</span></span><br><span class="line">        <span class="keyword">int</span> right=maxval;<span class="comment">//最多吃最多的那一堆，一个小时只吃一堆，多了没意义</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">while</span>(left&lt; right)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">int</span> mid=left+(right-left)/<span class="number">2</span>;<span class="comment">//防止超出范围</span></span><br><span class="line">            <span class="keyword">if</span>(check(piles,mid)&gt;H)<span class="comment">//说明这样吃超出时间范围，需要缩小</span></span><br><span class="line">            &#123;</span><br><span class="line">                left=mid+<span class="number">1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">               right=mid;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> left;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">check</span><span class="params">(<span class="keyword">int</span> [] piles,<span class="keyword">int</span> speed)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> sum=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> pile:piles)</span><br><span class="line">        &#123;</span><br><span class="line">            sum+=(pile+speed-<span class="number">1</span>)/speed;<span class="comment">//这个是向上取整</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> sum;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="第69题：x的平方根"><a href="#第69题：x的平方根" class="headerlink" title="第69题：x的平方根"></a>第69题：x的平方根</h2><p>实现 int sqrt(int x) 函数。</p>
<p>计算并返回 x 的平方根，其中 x 是非负整数。</p>
<p>由于返回类型是整数，结果只保留整数的部分，小数部分将被舍去。</p>
<p>示例 1:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">输入: 4</span><br><span class="line">输出: 2</span><br></pre></td></tr></table></figure>
<p>解题思路：<br>新手版本：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">mySqrt</span><span class="params">(<span class="keyword">int</span> x)</span> </span>&#123;</span><br><span class="line">       <span class="keyword">double</span> mid=(<span class="keyword">double</span>)x/<span class="number">2</span>;</span><br><span class="line">       <span class="keyword">double</span> right=x;</span><br><span class="line">       <span class="keyword">double</span> left=<span class="number">0</span>;</span><br><span class="line">       <span class="keyword">while</span>((<span class="keyword">int</span>)left&lt;(<span class="keyword">int</span>)right)</span><br><span class="line">       &#123;</span><br><span class="line">           <span class="keyword">if</span>(mid*mid==x)</span><br><span class="line">               <span class="keyword">return</span> (<span class="keyword">int</span>)mid;</span><br><span class="line">           <span class="keyword">else</span> <span class="keyword">if</span>(mid*mid&gt;x)</span><br><span class="line">           &#123;</span><br><span class="line">               right=mid;</span><br><span class="line">               mid=(<span class="keyword">double</span>)(right+left)/<span class="number">2</span>;</span><br><span class="line">           &#125;<span class="keyword">else</span></span><br><span class="line">           &#123;</span><br><span class="line">               left=mid;</span><br><span class="line">               mid=(<span class="keyword">double</span>)(right+left)/<span class="number">2</span>;</span><br><span class="line">           &#125;</span><br><span class="line">       &#125;</span><br><span class="line">        <span class="keyword">return</span> (<span class="keyword">int</span>)mid;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>进阶版本：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123; </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">mySqrt</span><span class="params">(<span class="keyword">int</span> x)</span> </span>&#123; </span><br><span class="line">        <span class="keyword">if</span> (x == <span class="number">0</span>) <span class="keyword">return</span> <span class="number">0</span>; </span><br><span class="line">        <span class="keyword">long</span> left = <span class="number">1</span>; </span><br><span class="line">        <span class="keyword">long</span> right = x / <span class="number">2</span>; </span><br><span class="line">        <span class="keyword">while</span> (left &lt; right) &#123; </span><br><span class="line">            <span class="comment">//注意这一行代码 </span></span><br><span class="line">            <span class="keyword">long</span> mid = (right + left) / <span class="number">2</span> + <span class="number">1</span>;</span><br><span class="line">            <span class="keyword">if</span> (mid &gt; x / mid) &#123;</span><br><span class="line">                right = mid - <span class="number">1</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                left = mid;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> (<span class="keyword">int</span>) left;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="第278题：第一个错误的版本"><a href="#第278题：第一个错误的版本" class="headerlink" title="第278题：第一个错误的版本"></a>第278题：第一个错误的版本</h2><p>假设你有 n 个版本 [1, 2, …, n]，你想找出导致之后所有版本出错的第一个错误的版本。</p>
<p>你可以通过调用 bool isBadVersion(version) 接口来判断版本号 version 是否在单元测试中出错。实现一个函数来查找第一个错误的版本。你应该尽量减少对调用 API 的次数。</p>
<p>示例:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">给定 n &#x3D; 5，并且 version &#x3D; 4 是第一个错误的版本。</span><br><span class="line"></span><br><span class="line">调用 isBadVersion(3) -&gt; false</span><br><span class="line">调用 isBadVersion(5) -&gt; true</span><br><span class="line">调用 isBadVersion(4) -&gt; true</span><br><span class="line"></span><br><span class="line">所以，4 是第一个错误的版本。</span><br></pre></td></tr></table></figure>
<p>解题思路: 二分，判断中间是不是，是就向右走，不是就向左走，到找到为止。</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* The isBadVersion API is defined in the parent class VersionControl.</span></span><br><span class="line"><span class="comment">      boolean isBadVersion(int version); */</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Solution</span> <span class="keyword">extends</span> <span class="title">VersionControl</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">firstBadVersion</span><span class="params">(<span class="keyword">int</span> n)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> le=<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">int</span> ri=n;</span><br><span class="line">        <span class="keyword">while</span>(le&lt;ri)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">int</span> mid=le+(ri-le)/<span class="number">2</span>;</span><br><span class="line">            <span class="keyword">if</span>(isBadVersion(mid))</span><br><span class="line">               ri=mid;</span><br><span class="line">            <span class="keyword">else</span> </span><br><span class="line">               le=mid+<span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> le;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="第153题：旋转排序数组最小值Ⅰ"><a href="#第153题：旋转排序数组最小值Ⅰ" class="headerlink" title="第153题：旋转排序数组最小值Ⅰ"></a>第153题：旋转排序数组最小值Ⅰ</h2><p>假设按照升序排序的数组在预先未知的某个点上进行了旋转。( 例如，数组 [0,1,2,4,5,6,7] 可能变为 [4,5,6,7,0,1,2] )。请找出其中最小的元素。你可以假设数组中不存在重复元素。<br>示例 1:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">输入: [3,4,5,1,2]</span><br><span class="line">输出: 1</span><br></pre></td></tr></table></figure>
<p>解题思路：<br>方法一:一次遍历，找到那个前面&gt;后面的元素。</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">findMin</span><span class="params">(<span class="keyword">int</span>[] nums)</span> </span>&#123;</span><br><span class="line">       <span class="keyword">int</span> ans=nums[<span class="number">0</span>];</span><br><span class="line">       <span class="keyword">if</span>(nums.length==<span class="number">1</span>) <span class="keyword">return</span> ans;</span><br><span class="line">       <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;nums.length;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(nums[i-<span class="number">1</span>]&gt;nums[i])</span><br><span class="line">         ans=nums[i];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ans;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>方法二：二分法，有点类似前面都是0，后面都是1，找到那个第一个出现的1。刚开始都是0，然后旋转后一部分就到后面去了，就成为1，找到那个最小值也就是找到那个第一次出现的1。<br>至于为什么选择有边界看这个：<br><a href="https://leetcode-cn.com/problems/find-minimum-in-rotated-sorted-array/solution/er-fen-cha-zhao-wei-shi-yao-zuo-you-bu-dui-cheng-z/" target="_blank" rel="external nofollow noopener noreferrer">https://leetcode-cn.com/problems/find-minimum-in-rotated-sorted-array/solution/er-fen-cha-zhao-wei-shi-yao-zuo-you-bu-dui-cheng-z/</a></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">findMin</span><span class="params">(<span class="keyword">int</span>[] nums)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> left=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">int</span> right=nums.length-<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span>(left&lt;right)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> mid=left+(right-left)/<span class="number">2</span>;</span><br><span class="line">        <span class="keyword">if</span>(nums[mid]&lt;nums[right])</span><br><span class="line">        &#123;</span><br><span class="line">            right=mid;<span class="comment">//mid有可能是那个最小值</span></span><br><span class="line">        &#125;<span class="keyword">else</span> </span><br><span class="line">        &#123;</span><br><span class="line">            left=mid+<span class="number">1</span>;<span class="comment">//mid绝对不可能那个最小值</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> nums[left];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="第154题：旋转排序数组最小值Ⅱ"><a href="#第154题：旋转排序数组最小值Ⅱ" class="headerlink" title="第154题：旋转排序数组最小值Ⅱ"></a>第154题：旋转排序数组最小值Ⅱ</h2><p>假设按照升序排序的数组在预先未知的某个点上进行了旋转。( 例如，数组 [0,1,2,4,5,6,7] 可能变为 [4,5,6,7,0,1,2] )。请找出其中最小的元素。 注意数组中可能存在重复的元素。<br>示例 1：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">输入: [1,3,5]</span><br><span class="line">输出: 1</span><br></pre></td></tr></table></figure>
<p>解题思路：<br>参考：<br><a href="https://leetcode-cn.com/problems/find-minimum-in-rotated-sorted-array-ii/solution/154-find-minimum-in-rotated-sorted-array-ii-by-jyd/" target="_blank" rel="external nofollow noopener noreferrer">https://leetcode-cn.com/problems/find-minimum-in-rotated-sorted-array-ii/solution/154-find-minimum-in-rotated-sorted-array-ii-by-jyd/</a><br>判断mid和right。<br>如果mid&gt;right，那么铁定是在右边，i的取值就是mid&lt;i&lt;=right。所以left=mid+1。<br>如果mid&lt;right，那么铁定是在左边，i的取值就是left&lt;i&lt;=mid。所以right=mid。<br>如果是等于，那么right=right-1。证明详情请看这个大佬的题解。</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">findMin</span><span class="params">(<span class="keyword">int</span>[] nums)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> left=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">int</span> right=nums.length-<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span>(left&lt;right)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> mid=left+(right-left)/<span class="number">2</span>;</span><br><span class="line">        <span class="keyword">if</span>(nums[mid]&lt;nums[right])</span><br><span class="line">        &#123;</span><br><span class="line">            right=mid;</span><br><span class="line">        &#125;<span class="keyword">else</span> <span class="keyword">if</span>(nums[mid]&gt;nums[right])</span><br><span class="line">        &#123;</span><br><span class="line">            left=mid+<span class="number">1</span>;</span><br><span class="line">        &#125;<span class="keyword">else</span></span><br><span class="line">        right=right-<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> nums[left];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="第475题：供暖器"><a href="#第475题：供暖器" class="headerlink" title="第475题：供暖器"></a>第475题：供暖器</h2><p>冬季已经来临。你的任务是设计一个有固定加热半径的供暖器向所有房屋供暖。现在，给出位于一条水平线上的房屋和供暖器的位置，找到可以覆盖所有房屋的最小加热半径。所以，你的输入将会是房屋和供暖器的位置。你将输出供暖器的最小加热半径。<br>说明:</p>
<p>给出的房屋和供暖器的数目是非负数且不会超过 25000。</p>
<p>给出的房屋和供暖器的位置均是非负数且不会超过10^9。</p>
<p>只要房屋位于供暖器的半径内(包括在边缘上)，它就可以得到供暖。</p>
<p>所有供暖器都遵循你的半径标准，加热的半径也一样。</p>
<p>示例 1:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">输入: [1,2,3],[2]</span><br><span class="line">输出: 1</span><br><span class="line">解释: 仅在位置2上有一个供暖器。如果我们将加热半径设为1，那么所有房屋就都能得到供暖。</span><br></pre></td></tr></table></figure>
<p>解题思路：<br>两遍遍历，找到每个房间距离供暖的最短距离，找到这些距离中的最大值。<br>参考：<a href="https://leetcode-cn.com/problems/heaters/solution/bian-li-liang-bian-sui-ran-su-du-man-shi-man-liao-/" target="_blank" rel="external nofollow noopener noreferrer">https://leetcode-cn.com/problems/heaters/solution/bian-li-liang-bian-sui-ran-su-du-man-shi-man-liao-/</a></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">findRadius</span><span class="params">(<span class="keyword">int</span>[] houses, <span class="keyword">int</span>[] heaters)</span> </span>&#123;</span><br><span class="line">       <span class="keyword">int</span> rad=-<span class="number">1</span>;</span><br><span class="line">       <span class="keyword">for</span>(<span class="keyword">int</span> num:houses)</span><br><span class="line">         rad=Math.max(rad,f(num,heaters));</span><br><span class="line">       <span class="keyword">return</span> rad;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">f</span><span class="params">(<span class="keyword">int</span> n,<span class="keyword">int</span> [] heaters)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> ans=<span class="number">1000000010</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> num:heaters)</span><br><span class="line">        &#123;</span><br><span class="line">            ans=Math.min(ans,Math.abs(num-n));</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> ans;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>刷题笔记</category>
      </categories>
      <tags>
        <tag>笔记</tag>
        <tag>leetcode</tag>
      </tags>
  </entry>
  <entry>
    <title>小浩算法-java题解-位运算篇</title>
    <url>/article/5dcc92c.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\css\APlayer.min.css"><script src="\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\js\Meting.min.js"></script><p>原文链接<br><a href="https://www.geekxh.com/0.0.%E5%AD%A6%E4%B9%A0%E9%A1%BB%E7%9F%A5/01.html" target="_blank" rel="external nofollow noopener noreferrer">https://www.geekxh.com/0.0.%E5%AD%A6%E4%B9%A0%E9%A1%BB%E7%9F%A5/01.html</a><br>这里是把这个大佬的题解用java写一下做个记录</p>
<h1 id="位运算篇"><a href="#位运算篇" class="headerlink" title="位运算篇"></a>位运算篇</h1><h2 id="连续n个数的和"><a href="#连续n个数的和" class="headerlink" title="连续n个数的和"></a>连续n个数的和</h2><p>求 1 2 … n ，要求不能使用乘除法、for、while、if、else、switch、case等关键字及条件判断语句（A?B:C）。<br>示例 1：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">输入: n &#x3D; 3 输出: 6</span><br></pre></td></tr></table></figure>
<p>解题思路： 递归，A&amp;&amp;B，A为true，那么返回B的布尔值，A为false，那么返回false，所以我们把递归的返回条件设置成A，递归的主体就是B<br>也就是：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">sumNums</span><span class="params">(<span class="keyword">int</span> n)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">boolean</span> b = n &gt; <span class="number">0</span> &amp;&amp; ((n + = sumNums(n - <span class="number">1</span>)) &gt; <span class="number">0</span>);</span><br><span class="line">        <span class="keyword">return</span> n;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="第231题：2的幂"><a href="#第231题：2的幂" class="headerlink" title="第231题：2的幂"></a>第231题：2的幂</h2><p>给定一个整数，编写一个函数来判断它是否是 2 的幂次方。<br>示例 1:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">输入: 1</span><br><span class="line">输出: true</span><br><span class="line">解释: 20 &#x3D; 1</span><br></pre></td></tr></table></figure>
<p>解题思路：<br>方法一：判断n%2为0时，n/=2的结果是不是1。</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">isPowerOfTwo</span><span class="params">(<span class="keyword">int</span> n)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (n == <span class="number">0</span>) <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">    <span class="keyword">while</span> (n % <span class="number">2</span> == <span class="number">0</span>) n /= <span class="number">2</span>;</span><br><span class="line">    <span class="keyword">return</span> n == <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>方法二： 对于N为2的幂的数，都有 N&amp;(N-1)=0。</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">isPowerOfTwo</span><span class="params">(<span class="keyword">int</span> n)</span> </span>&#123;</span><br><span class="line">       <span class="keyword">return</span> n &gt;<span class="number">0</span> &amp;&amp;  (n&amp;(n-<span class="number">1</span>))==<span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="第191题：位1的个数"><a href="#第191题：位1的个数" class="headerlink" title="第191题：位1的个数"></a>第191题：位1的个数</h2><p>编写一个函数，输入是一个无符号整数，返回其二进制表达式中数字位数为 ‘1’ 的个数（也被称为汉明重量）。<br>示例 1：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">输入：00000000000000000000000000001011</span><br><span class="line">输出：3</span><br><span class="line">解释：输入的二进制串 00000000000000000000000000001011 中，共有三位为 &#39;1&#39;。</span><br></pre></td></tr></table></figure>
<p>解题思路：<br>方法一：利用掩码来计算，碰到掩码mask&amp;n！=0说明这位是1，计数。最后返回结果。</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="comment">// you need to treat n as an unsigned value</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">hammingWeight</span><span class="params">(<span class="keyword">int</span> n)</span> </span>&#123;</span><br><span class="line">         <span class="keyword">int</span> result = <span class="number">0</span>;</span><br><span class="line">        <span class="comment">//初始化掩码为1</span></span><br><span class="line">        <span class="keyword">int</span> mask = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">32</span>; i++) &#123;</span><br><span class="line">            <span class="keyword">if</span> ((n &amp; mask) != <span class="number">0</span>) &#123;</span><br><span class="line">                result++;</span><br><span class="line">            &#125;</span><br><span class="line">            mask = mask &lt;&lt; <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> result;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>方法二: 根据上一题的思路，n&amp;n(n-1)进行位运算，那么最低位的1会变成0。我们计数又多少次这样成立就ok。</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="comment">// you need to treat n as an unsigned value</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">hammingWeight</span><span class="params">(<span class="keyword">int</span> n)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> count = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">while</span>(n != <span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            n =(n &amp; (n - <span class="number">1</span>)) ;</span><br><span class="line">            count++;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> count;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="第136题：只出现一次的数字"><a href="#第136题：只出现一次的数字" class="headerlink" title="第136题：只出现一次的数字"></a>第136题：只出现一次的数字</h2><p>给定一个非空整数数组，除了某个元素只出现一次以外，其余每个元素均出现两次。找出那个只出现了一次的元素。<br>说明：</p>
<p>你的算法应该具有线性时间复杂度。 你可以不使用额外空间来实现吗？</p>
<p>示例 1:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">输入: [2,2,1]</span><br><span class="line">输出: 1</span><br></pre></td></tr></table></figure>
<p>解题思路:用异或，自己和自己异或是0，剩下的就是结果</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">singleNumber</span><span class="params">(<span class="keyword">int</span>[] nums)</span> </span>&#123;</span><br><span class="line">         <span class="keyword">int</span> ans=<span class="number">0</span>;</span><br><span class="line">         <span class="keyword">for</span>(<span class="keyword">int</span>  num:nums)</span><br><span class="line">           ans^=num;</span><br><span class="line">        <span class="keyword">return</span> ans;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="第137题：只出现一次的数字Ⅱ"><a href="#第137题：只出现一次的数字Ⅱ" class="headerlink" title="第137题：只出现一次的数字Ⅱ"></a>第137题：只出现一次的数字Ⅱ</h2><p>给定一个非空整数数组，除了某个元素只出现一次以外，其余每个元素均出现了三次。找出那个只出现了一次的元素。说明：你的算法应该具有线性时间复杂度。你可以不使用额外空间来实现吗？<br>说明：</p>
<p>你的算法应该具有线性时间复杂度。 你可以不使用额外空间来实现吗？</p>
<p>示例 1:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">输入: [2,2,3,2]</span><br><span class="line">输出: 3</span><br></pre></td></tr></table></figure>
<p>解题思路：<br>方法一：哈希表，存储元素和次数，然后再遍历找到那个次数为1的。</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">singleNumber</span><span class="params">(<span class="keyword">int</span>[] nums)</span> </span>&#123;</span><br><span class="line">             HashMap&lt;Integer,Integer&gt; map=<span class="keyword">new</span> HashMap&lt;Integer,Integer&gt;();</span><br><span class="line">             <span class="keyword">for</span>(<span class="keyword">int</span> num:nums)</span><br><span class="line">             &#123;</span><br><span class="line">                 map.put(num,map.getOrDefault(num,<span class="number">0</span>)+<span class="number">1</span>);</span><br><span class="line"></span><br><span class="line">             &#125;</span><br><span class="line">             <span class="keyword">for</span>(<span class="keyword">int</span> k:map.keySet())</span><br><span class="line">              <span class="keyword">if</span>(map.get(k)==<span class="number">1</span>) <span class="keyword">return</span> k;</span><br><span class="line">             <span class="keyword">return</span> -<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>方法二： 数学，[A,A,A,B,B,B,C,C,C] 和 [A,A,A,B,B,B,C]，差了两个C。即：</p>
<p><em>3×(a b c)−(a a a b b b c)=2c</em>，也就是去重后数组的和x3-现在数组的和是c的两倍。</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">singleNumber</span><span class="params">(<span class="keyword">int</span>[] nums)</span> </span>&#123;</span><br><span class="line">            Set&lt;Long&gt; set=<span class="keyword">new</span> HashSet&lt;&gt;();</span><br><span class="line">            <span class="keyword">long</span> sumSet=<span class="number">0</span>,sumArr=<span class="number">0</span>;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> num:nums)</span><br><span class="line">            &#123;</span><br><span class="line">                sumArr+=num;</span><br><span class="line">                set.add((<span class="keyword">long</span>)num);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">long</span> s:set) sumSet+=s;</span><br><span class="line">            <span class="keyword">return</span> (<span class="keyword">int</span>)((sumSet*<span class="number">3</span>-sumArr)/<span class="number">2</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>方法三：位运算。<br>。。。。。。。。。。。。。</p>
<h2 id="第268题：缺失数字"><a href="#第268题：缺失数字" class="headerlink" title="第268题：缺失数字"></a>第268题：缺失数字</h2><p>给定一个包含 0, 1, 2, …, n 中 n 个数的序列，找出 0 .. n 中没有出现在序列中的那个数。</p>
<p>示例 1:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">输入: [3,0,1]</span><br><span class="line">输出: 2</span><br></pre></td></tr></table></figure>
<p>解题思路：<br>方法一：1到n的和是(n+1)<em>n/2,我们算出总的和，然后减去这个数组的和，剩下的就是我们要求的。因为有一个0，所以数组的长度也就是1到n的长度。<br>3 0 1 作为例子，n</em>(n+1)/2的结果是6，然后数组的结果是4，所以差2。</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">missingNumber</span><span class="params">(<span class="keyword">int</span>[] nums)</span> </span>&#123;</span><br><span class="line">          <span class="keyword">int</span> len=nums.length;</span><br><span class="line">          <span class="keyword">int</span> sum=(len+<span class="number">1</span>)*len/<span class="number">2</span>;</span><br><span class="line">          <span class="keyword">int</span> tsum=<span class="number">0</span>;</span><br><span class="line">          <span class="keyword">for</span>(<span class="keyword">int</span> num:nums)</span><br><span class="line">            tsum+=num;</span><br><span class="line">          <span class="keyword">return</span> sum-tsum;     </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>方法二：异或，假设是n然后用 ans^ =nums[i]^ i来找到那个值。<br>3 0 1作为例子 3^  (3 ^ 0)  ^ (0 ^1) ^ (1 ^ 2),结果就是2,括号里是nums[i] ^ i。</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">missingNumber</span><span class="params">(<span class="keyword">int</span>[] nums)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">int</span> ans=nums.length;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;nums.length;i++)</span><br><span class="line">           ans^=nums[i]^i;</span><br><span class="line">        <span class="keyword">return</span> ans;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>刷题笔记</category>
      </categories>
      <tags>
        <tag>笔记</tag>
        <tag>leetcode</tag>
      </tags>
  </entry>
  <entry>
    <title>小浩算法-java题解-字符串篇</title>
    <url>/article/18e57658.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\css\APlayer.min.css"><script src="\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\js\Meting.min.js"></script><h1 id="字符串篇"><a href="#字符串篇" class="headerlink" title="字符串篇"></a>字符串篇</h1><h2 id="第344题：反转字符串"><a href="#第344题：反转字符串" class="headerlink" title="第344题：反转字符串"></a>第344题：反转字符串</h2><p>编写一个函数，其作用是将输入的字符串反转过来。输入字符串以字符数组 char[] 的形式给出。<br>不要给另外的数组分配额外的空间，你必须原地修改输入数组、使用 O(1) 的额外空间解决这一问题。<br>示例 1：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">输入：[&quot;h&quot;,&quot;e&quot;,&quot;l&quot;,&quot;l&quot;,&quot;o&quot;]</span><br><span class="line">输出：[&quot;o&quot;,&quot;l&quot;,&quot;l&quot;,&quot;e&quot;,&quot;h&quot;]</span><br></pre></td></tr></table></figure>
<p>解题思路：双指针一个指向头，一个指向尾，用一个tmp交换头尾，直到头和尾一样。</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">reverseString</span><span class="params">(<span class="keyword">char</span>[] s)</span> </span>&#123;</span><br><span class="line">          <span class="keyword">int</span> start=<span class="number">0</span>,end=s.length-<span class="number">1</span>;</span><br><span class="line">          <span class="keyword">while</span>(start&lt;end)</span><br><span class="line">          &#123;</span><br><span class="line">              <span class="keyword">char</span> tem=s[start];</span><br><span class="line">              s[start]=s[end];</span><br><span class="line">              s[end]=tem;</span><br><span class="line">              start++;end--;</span><br><span class="line">          &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="第387题：字符串中的第一个唯一字符"><a href="#第387题：字符串中的第一个唯一字符" class="headerlink" title="第387题：字符串中的第一个唯一字符"></a>第387题：字符串中的第一个唯一字符</h2><p>给定一个字符串，找到它的第一个不重复的字符，并返回它的索引。如果不存在，则返回 -1 。<br>案例:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">s &#x3D; &quot;leetcode&quot;</span><br><span class="line">返回 0.</span><br><span class="line"></span><br><span class="line">s &#x3D; &quot;loveleetcode&quot;,</span><br><span class="line">返回 2.  </span><br><span class="line">**注意事项：**您可以假定该字符串只包含小写字母。</span><br></pre></td></tr></table></figure>
<p>解题思路：两遍遍历，第一次遍历用哈希表存储字符串的每一个元素和次数，第二次遍历把出现次数为1的找到然后打印索引。</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">firstUniqChar</span><span class="params">(String s)</span> </span>&#123;</span><br><span class="line">       HashMap&lt;Character,Integer&gt; map=<span class="keyword">new</span> HashMap&lt;Character,Integer&gt;();</span><br><span class="line">       <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;s.length();i++)</span><br><span class="line">       &#123;  </span><br><span class="line">           <span class="keyword">char</span> c=s.charAt(i);</span><br><span class="line">           map.put(c,map.getOrDefault(c,<span class="number">0</span>)+<span class="number">1</span>);</span><br><span class="line"></span><br><span class="line">       &#125;</span><br><span class="line">       <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;s.length();i++)</span><br><span class="line">       &#123;</span><br><span class="line">           <span class="keyword">if</span>(map.get(s.charAt(i))==<span class="number">1</span>) <span class="keyword">return</span> i;<span class="comment">//如果当前元素的次数为1，那么说明找到了这个元素，返回索引即可</span></span><br><span class="line">       &#125;</span><br><span class="line">       <span class="keyword">return</span> -<span class="number">1</span>;<span class="comment">//说明没有这个元素</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="题目28：实现-strStr"><a href="#题目28：实现-strStr" class="headerlink" title="题目28：实现 strStr()"></a>题目28：实现 strStr()</h2><p>实现 strStr() 函数。给定一个 haystack 字符串和一个 needle 字符串，在 haystack 字符串中找出 needle 字符串出现的第一个位置 (从0开始)。如果不存在，则返回 -1。<br>示例 1:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">输入: haystack &#x3D; &quot;hello&quot;, needle &#x3D; &quot;ll&quot;</span><br><span class="line">输出: 2</span><br></pre></td></tr></table></figure>
<p><strong>注意事项：</strong>您可以假定该字符串只包含小写字母。<br>解题思路：sunday没整明白，用的官解。<br>有点像滑窗，每次用模式串来和目标串进行对比。</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">strStr</span><span class="params">(String haystack, String needle)</span> </span>&#123;</span><br><span class="line">       <span class="keyword">int</span> hl=haystack.length(),nl=needle.length();</span><br><span class="line">       <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;hl-nl+<span class="number">1</span>;i++)</span><br><span class="line">       &#123;</span><br><span class="line">           <span class="keyword">if</span>(haystack.substring(i,i+nl).equals(needle)) <span class="keyword">return</span> i;</span><br><span class="line"></span><br><span class="line">       &#125;</span><br><span class="line">       <span class="keyword">return</span> -<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="剑指-Offer-17题目：大数打印"><a href="#剑指-Offer-17题目：大数打印" class="headerlink" title="剑指 Offer 17题目：大数打印"></a>剑指 Offer 17题目：大数打印</h2><p>输入数字 n，按顺序打印出从 1 到最大的 n 位十进制数。比如输入 3，则打印出 1、2、3 一直到最大的 3 位数 999。<br>示例 1:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">输入: n &#x3D; 1 </span><br><span class="line">输出: [1,2,3,4,5,6,7,8,9]</span><br></pre></td></tr></table></figure>
<p>解题思路：<br>方法一：用Math.pow确定要打印的长度</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">int</span>[] printNumbers(<span class="keyword">int</span> n) &#123;</span><br><span class="line">            <span class="keyword">int</span> len=(<span class="keyword">int</span>)Math.pow(<span class="number">10</span>,n);</span><br><span class="line">             <span class="keyword">int</span> ans[]=<span class="keyword">new</span> <span class="keyword">int</span>[len-<span class="number">1</span>];</span><br><span class="line">             <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;len;i++)</span><br><span class="line">           &#123;</span><br><span class="line">                ans[i-<span class="number">1</span>]=i;</span><br><span class="line">            &#125;</span><br><span class="line">           <span class="keyword">return</span> ans;</span><br><span class="line"></span><br><span class="line">            </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>方法二：<br>计数形式的记下来然后打印出来</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">int</span>[] printNumbers(<span class="keyword">int</span> n) &#123;</span><br><span class="line">            <span class="keyword">int</span> l=<span class="number">0</span>;</span><br><span class="line">            <span class="keyword">while</span>(<span class="number">0</span>&lt;n)</span><br><span class="line">            &#123;</span><br><span class="line">                n--;</span><br><span class="line">                l=l*<span class="number">10</span>+<span class="number">9</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">int</span> ans[]=<span class="keyword">new</span> <span class="keyword">int</span>[l];</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=l;i++)</span><br><span class="line">             ans[i-<span class="number">1</span>]=i;</span><br><span class="line">            <span class="keyword">return</span> ans;</span><br><span class="line"></span><br><span class="line">            </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>方法三：字符串记录。详情看这个大佬的。</p>
<h2 id="第125题：验证回文串"><a href="#第125题：验证回文串" class="headerlink" title="第125题：验证回文串"></a>第125题：验证回文串</h2><p>给定一个字符串，验证它是否是回文串，只考虑字母和数字字符，可以忽略字母的大小写。<br>说明： 本题中，我们将空字符串定义为有效的回文串。</p>
<p>示例 1:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">输入: &quot;A man, a plan, a canal: Panama&quot;</span><br><span class="line">输出: true</span><br></pre></td></tr></table></figure>
<p>解题思路：先全部搞成小写，然后过滤掉不比较的，然后用双指针来比较头和尾。</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">isPalindrome</span><span class="params">(String s)</span> </span>&#123;</span><br><span class="line">       s=s.toLowerCase();</span><br><span class="line">       <span class="keyword">char</span>  c[]=s.toCharArray();</span><br><span class="line">       <span class="keyword">int</span> i=<span class="number">0</span>;</span><br><span class="line">       <span class="keyword">int</span> j=s.length()-<span class="number">1</span>;</span><br><span class="line">       <span class="keyword">while</span>(i&lt;j)</span><br><span class="line">       &#123;</span><br><span class="line">          <span class="keyword">if</span> (!((c[i] &gt;= <span class="string">'0'</span> &amp;&amp; c[i] &lt;= <span class="string">'9'</span>) || (c[i] &gt;= <span class="string">'a'</span> &amp;&amp; c[i] &lt;= <span class="string">'z'</span>))) </span><br><span class="line">           &#123;</span><br><span class="line">               i++;</span><br><span class="line">               <span class="keyword">continue</span>;</span><br><span class="line">           &#125;</span><br><span class="line">           <span class="keyword">if</span> (!((c[j] &gt;= <span class="string">'0'</span> &amp;&amp; c[j] &lt;= <span class="string">'9'</span>) || (c[j] &gt;= <span class="string">'a'</span> &amp;&amp; c[j] &lt;= <span class="string">'z'</span>))) </span><br><span class="line">           &#123;</span><br><span class="line">               j--;</span><br><span class="line">               <span class="keyword">continue</span>;</span><br><span class="line">           &#125;</span><br><span class="line">           <span class="keyword">if</span>(c[i]!=c[j])</span><br><span class="line">           <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">           i++;</span><br><span class="line">           j--;</span><br><span class="line">       &#125;</span><br><span class="line">       <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line"> &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="第796题：旋转字符串"><a href="#第796题：旋转字符串" class="headerlink" title="第796题：旋转字符串"></a>第796题：旋转字符串</h2><p>给定两个字符串, A 和 B。A 的旋转操作就是将 A 最左边的字符移动到最右边。例如, 若 A = ‘abcde’，在移动一次之后结果就是’bcdea’ 。如果在若干次旋转操作之后，A 能变成B，那么返回True。<br>示例 1:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">输入: A &#x3D; &#39;abcde&#39;, B &#x3D; &#39;cdeab&#39;</span><br><span class="line">输出: true</span><br></pre></td></tr></table></figure>
<p>解题思路：<br>方法一：把A串的每一个元素向后移，然后再和B进行比较。</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">rotateString</span><span class="params">(String A, String B)</span> </span>&#123;</span><br><span class="line">       <span class="keyword">if</span>(A.equals(<span class="string">""</span>) &amp;&amp; B.equals(<span class="string">""</span>))</span><br><span class="line">       <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">       <span class="keyword">int</span> len=A.length();</span><br><span class="line">       <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;len;i++)</span><br><span class="line">       &#123;</span><br><span class="line">           String first=A.substring(<span class="number">0</span>,<span class="number">1</span>);</span><br><span class="line">           String last=A.substring(<span class="number">1</span>,len);</span><br><span class="line">           A=last+first;</span><br><span class="line">           <span class="keyword">if</span>(A.equals(B)) <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">       &#125;</span><br><span class="line">       <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>方法二：无论怎么移，B符合条件的话一定是A+A的子串，所以判断B是不是A+A的子串就好了。</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">rotateString</span><span class="params">(String A, String B)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> A.length()==B.length()&amp;&amp; (A+A).contains(B);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="第58题：最后一个单词的长度"><a href="#第58题：最后一个单词的长度" class="headerlink" title="第58题：最后一个单词的长度"></a>第58题：最后一个单词的长度</h2><p>给定一个仅包含大小写字母和空格 ‘ ‘ 的字符串 s，返回其最后一个单词的长度。如果字符串从左向右滚动显示，那么最后一个单词就是最后出现的单词。<br>示例：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">输入: &quot;Hello World&quot; </span><br><span class="line">输出: 5</span><br><span class="line">说明： 一个单词是指仅由字母组成、不包含任何空格字符的 最大子字符串。</span><br></pre></td></tr></table></figure>
<p>解题思路：从最后一个不为空的地方开始计数,计数为ans，比如”AAA bbb CCCC        “就是在最后一个C开始计数的，如果末尾是空格，并且ans为0，那么略过。</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">lengthOfLastWord</span><span class="params">(String s)</span> </span>&#123;</span><br><span class="line">         <span class="keyword">int</span> len=s.length();</span><br><span class="line">         <span class="keyword">int</span> ans=<span class="number">0</span>;</span><br><span class="line">         <span class="keyword">for</span>(<span class="keyword">int</span> i=len-<span class="number">1</span>;i&gt;=<span class="number">0</span>;i--)</span><br><span class="line">         &#123;   </span><br><span class="line">             <span class="keyword">if</span>(s.charAt(i)==<span class="string">' '</span>)</span><br><span class="line">             &#123;</span><br><span class="line">                 <span class="keyword">if</span>(ans==<span class="number">0</span>) <span class="keyword">continue</span>;</span><br><span class="line">                 <span class="keyword">break</span>;</span><br><span class="line">             &#125;</span><br><span class="line">               </span><br><span class="line">             <span class="keyword">else</span> ans++;</span><br><span class="line"></span><br><span class="line">         &#125;</span><br><span class="line">         <span class="keyword">return</span> ans;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>刷题笔记</category>
      </categories>
      <tags>
        <tag>笔记</tag>
        <tag>leetcode</tag>
      </tags>
  </entry>
  <entry>
    <title>小浩算法-java题解-动态规划篇</title>
    <url>/article/21f50898.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\css\APlayer.min.css"><script src="\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\js\Meting.min.js"></script><p>原文链接<br><a href="https://www.geekxh.com/0.0.%E5%AD%A6%E4%B9%A0%E9%A1%BB%E7%9F%A5/01.html" target="_blank" rel="external nofollow noopener noreferrer">https://www.geekxh.com/0.0.%E5%AD%A6%E4%B9%A0%E9%A1%BB%E7%9F%A5/01.html</a><br>这里是把这个大佬的题解用java写一下做个记录</p>
<h1 id="动态规划篇"><a href="#动态规划篇" class="headerlink" title="动态规划篇"></a>动态规划篇</h1><h2 id="第70题：爬楼梯"><a href="#第70题：爬楼梯" class="headerlink" title="第70题：爬楼梯"></a>第70题：爬楼梯</h2><p>假设你正在爬楼梯。需要 n 阶你才能到达楼顶。每次你可以爬 1 或 2 个台阶。你有多少种不同的方法可以爬到楼顶呢？ <strong>注意：</strong>给定 n 是一个正整数。<br>示例 1：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">输入： 2   输出： 2  解释： 有两种方法可以爬到楼顶。</span><br><span class="line">1.  1 阶 + 1 阶</span><br><span class="line">2.  2 阶</span><br></pre></td></tr></table></figure>
<p>解题思路：动态规划，dp[n]表示在第n个台阶时的所有方法，dp[1]=1,dp[2]=2,dp[n]=dp[n-1]+dp[n-2]，也就是前n-1个台阶的答案加上n-2个的答案。</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">climbStairs</span><span class="params">(<span class="keyword">int</span> n)</span> </span>&#123;</span><br><span class="line">          <span class="keyword">if</span>(n==<span class="number">1</span>) <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">          <span class="keyword">int</span> dp[]=<span class="keyword">new</span> <span class="keyword">int</span>[n+<span class="number">1</span>];</span><br><span class="line">          dp[<span class="number">1</span>]=<span class="number">1</span>;</span><br><span class="line">          dp[<span class="number">2</span>]=<span class="number">2</span>;</span><br><span class="line">          <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">3</span>;i&lt;=n;i++)</span><br><span class="line">             dp[i]=dp[i-<span class="number">1</span>]+dp[i-<span class="number">2</span>];</span><br><span class="line">          <span class="keyword">return</span> dp[n];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="第53题：最大子序和"><a href="#第53题：最大子序和" class="headerlink" title="第53题：最大子序和"></a>第53题：最大子序和</h2><p>给定一个整数数组 nums ，找到一个具有最大和的连续子数组（子数组最少包含一个元素），返回其最大和。<br>示例:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">输入: [-2,1,-3,4,-1,2,1,-5,4],</span><br><span class="line">输出: 6</span><br><span class="line">解释: 连续子数组 [4,-1,2,1] 的和最大，为 6。</span><br></pre></td></tr></table></figure>
<p>解题思路：<br>方法一：不动态规划，就直接累加，大于0就一直累加，否则就重新开始累加</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">maxSubArray</span><span class="params">(<span class="keyword">int</span>[] nums)</span> </span>&#123;</span><br><span class="line">             <span class="keyword">int</span> ans=nums[<span class="number">0</span>];</span><br><span class="line">             <span class="keyword">int</span> sum=<span class="number">0</span>;</span><br><span class="line">             <span class="keyword">for</span>(<span class="keyword">int</span> num:nums)</span><br><span class="line">             &#123;</span><br><span class="line">                 <span class="keyword">if</span>(sum&gt;<span class="number">0</span>) sum+=num;</span><br><span class="line">                 <span class="keyword">else</span> sum=num;</span><br><span class="line">                 ans=Math.max(sum,ans);</span><br><span class="line">             &#125;</span><br><span class="line">             <span class="keyword">return</span> ans;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>方法二：动态规划。dp[i]表示以nums[i]结尾的最大子序列和，这个有两个可能，一个是前一个加上nums[i]，但是这个nums[i-1]就有可能是负的，所以还有可能是nums[i]，所以取这两个的最大值，dp[i]=Math.max(dp[i-1],nums[i])。</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">maxSubArray</span><span class="params">(<span class="keyword">int</span>[] nums)</span> </span>&#123;</span><br><span class="line">            <span class="keyword">if</span>(nums.length&lt;<span class="number">1</span>) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">int</span> ans=nums[<span class="number">0</span>];</span><br><span class="line">            <span class="keyword">int</span> dp[]=<span class="keyword">new</span> <span class="keyword">int</span>[nums.length];</span><br><span class="line">            dp[<span class="number">0</span>]=nums[<span class="number">0</span>];</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;nums.length;i++)</span><br><span class="line">           &#123;</span><br><span class="line">              dp[i]=Math.max((dp[i-<span class="number">1</span>]+nums[i]),nums[i]);</span><br><span class="line">               ans=Math.max(dp[i],ans);</span><br><span class="line">          &#125;</span><br><span class="line">          <span class="keyword">return</span> ans;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="第300题：最长上升子序列"><a href="#第300题：最长上升子序列" class="headerlink" title="第300题：最长上升子序列"></a>第300题：最长上升子序列</h2><p>给定一个无序的整数数组，找到其中最长上升子序列的长度。<br>示例:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">输入: [10,9,2,5,3,7,101,18]</span><br><span class="line">输出: 4 </span><br><span class="line">解释: 最长的上升子序列是 [2,3,7,101]，它的长度是 4。</span><br><span class="line">说明:</span><br><span class="line"></span><br><span class="line">可能会有多种最长上升子序列的组合，你只需要输出对应的长度即可。</span><br></pre></td></tr></table></figure>
<p>解题思路：承接上一题，dp[i]表示以nums[i]结尾的最长上升子序列，如果nums[i]大于前面的任意一个nums[j],0&lt;=j&lt;i，那么此时dp[i]=max(dp[i],dp[j]+1)。配合代码比较直观</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">lengthOfLIS</span><span class="params">(<span class="keyword">int</span>[] nums)</span> </span>&#123;</span><br><span class="line">             <span class="keyword">if</span>(nums.length==<span class="number">0</span>) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">             <span class="keyword">int</span> dp[]=<span class="keyword">new</span> <span class="keyword">int</span>[nums.length];</span><br><span class="line">             <span class="keyword">int</span> ans=<span class="number">1</span>;<span class="comment">//假设答案是1，更新这个答案</span></span><br><span class="line">             <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;nums.length;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        dp[i]=<span class="number">1</span>;<span class="comment">//将dp[i]初始化为1，默认nums[i]是要求的子序列，长度为1</span></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;i;j++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(nums[j]&lt;nums[i])<span class="comment">//如果是严格递增才开始算，否则直接跳过</span></span><br><span class="line">             dp[i]=Math.max(dp[j]+<span class="number">1</span>,dp[i]);<span class="comment">//进行更新，要么是还要+1，要么就不加，</span></span><br><span class="line">             <span class="comment">//比如 2 4 3 5，执行的话dp[3]=1是初始化，然后更新，</span></span><br><span class="line">             <span class="comment">//dp[3]=max(dp[0]+1,1)=2,dp[3]=max(dp[1]+1,2)=3,dp[3]=max(dp[2]+1,3)=3。所以最后答案是3</span></span><br><span class="line">        &#125;</span><br><span class="line">        ans=Math.max(ans,dp[i]);</span><br><span class="line">       </span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="第120题：三角形最小路径和"><a href="#第120题：三角形最小路径和" class="headerlink" title="第120题：三角形最小路径和"></a>第120题：三角形最小路径和</h2><p>给定一个三角形，找出自顶向下的最小路径和。每一步只能移动到下一行中相邻的结点上。<br>例如，给定三角形：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[</span><br><span class="line">     [2],</span><br><span class="line">    [3,4],</span><br><span class="line">   [6,5,7],</span><br><span class="line">  [4,1,8,3]</span><br><span class="line">]</span><br><span class="line">则自顶向下的最小路径和为 11（即，2 + 3 + 5 + 1 &#x3D; 11）。</span><br></pre></td></tr></table></figure>
<p>解题思路：<br>方法一从下到上，甜姐的思路：<br><a href="https://leetcode-cn.com/problems/triangle/solution/di-gui-ji-yi-hua-dp-bi-xu-miao-dong-by-sweetiee/" target="_blank" rel="external nofollow noopener noreferrer">https://leetcode-cn.com/problems/triangle/solution/di-gui-ji-yi-hua-dp-bi-xu-miao-dong-by-sweetiee/</a><br>从下到上可以避免边界问题。<br><img src= "/img/loading.gif" data-src="https://img-blog.csdnimg.cn/20200729165708802.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxMzE4NDAw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>其他解法可以去看甜姐的题解。</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">minimumTotal</span><span class="params">(List&lt;List&lt;Integer&gt;&gt; triangle)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> n=triangle.size();</span><br><span class="line">         <span class="keyword">int</span> dp[][]=<span class="keyword">new</span> <span class="keyword">int</span>[n+<span class="number">1</span>][n+<span class="number">1</span>];</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=n-<span class="number">1</span>;i&gt;=<span class="number">0</span>;i--)</span><br><span class="line">        &#123;</span><br><span class="line">          <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;=i;j++)</span><br><span class="line">           dp[i][j]=Math.min(dp[i+<span class="number">1</span>][j],dp[i+<span class="number">1</span>][j+<span class="number">1</span>])+triangle.get(i).get(j);</span><br><span class="line">       &#125;</span><br><span class="line">       <span class="keyword">return</span> dp[<span class="number">0</span>][<span class="number">0</span>];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>方法二：从上到下，需要考虑边界，如果是在左边则只可能是从上面来的，如果是在右边界则只可能是从左上角来的。其他情况就是这两个的最小值了。</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">minimumTotal</span><span class="params">(List&lt;List&lt;Integer&gt;&gt; triangle)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> n=triangle.size();</span><br><span class="line">        <span class="keyword">if</span>(n==<span class="number">0</span>) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">if</span>(n==<span class="number">1</span>) <span class="keyword">return</span> triangle.get(<span class="number">0</span>).get(<span class="number">0</span>);</span><br><span class="line">        <span class="keyword">int</span> dp[][]=<span class="keyword">new</span> <span class="keyword">int</span>[n][n];</span><br><span class="line">        dp[<span class="number">0</span>][<span class="number">0</span>]=triangle.get(<span class="number">0</span>).get(<span class="number">0</span>);</span><br><span class="line">        dp[<span class="number">1</span>][<span class="number">0</span>]=triangle.get(<span class="number">1</span>).get(<span class="number">0</span>)+triangle.get(<span class="number">0</span>).get(<span class="number">0</span>);</span><br><span class="line">        dp[<span class="number">1</span>][<span class="number">1</span>]=triangle.get(<span class="number">1</span>).get(<span class="number">1</span>)+triangle.get(<span class="number">0</span>).get(<span class="number">0</span>);</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">2</span>;i&lt;n;i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;=i;j++)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span>(j==<span class="number">0</span>) dp[i][j]=dp[i-<span class="number">1</span>][j]+triangle.get(i).get(<span class="number">0</span>); <span class="comment">//如果是在左边界</span></span><br><span class="line">                <span class="keyword">else</span> <span class="keyword">if</span>(j==i) dp[i][j]=dp[i-<span class="number">1</span>][j-<span class="number">1</span>]+triangle.get(i).get(j);<span class="comment">//如果是在有边界</span></span><br><span class="line">                <span class="keyword">else</span> dp[i][j]=Math.min(dp[i-<span class="number">1</span>][j-<span class="number">1</span>],dp[i-<span class="number">1</span>][j])+triangle.get(i).get(j);</span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">int</span> ans=dp[n-<span class="number">1</span>][<span class="number">0</span>];<span class="comment">//假定最后一行的第一个是答案</span></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;n;i++)</span><br><span class="line">        &#123;</span><br><span class="line">           ans=Math.min(dp[n-<span class="number">1</span>][i],ans);<span class="comment">//取那个最小值</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> ans;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="第64题：最小路径和"><a href="#第64题：最小路径和" class="headerlink" title="第64题：最小路径和"></a>第64题：最小路径和</h2><p>给定一个包含非负整数的 m x n 网格，请找出一条从左上角到右下角的路径，使得路径上的数字总和为最小。<br>说明：每次只能向下或者向右移动一步。</p>
<p>示例:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">输入:</span><br><span class="line">[</span><br><span class="line">  [1,3,1],</span><br><span class="line">  [1,5,1],</span><br><span class="line">  [4,2,1]</span><br><span class="line">]</span><br><span class="line">输出: 7</span><br><span class="line">解释: 因为路径 1→3→1→1→1 的总和最小。</span><br></pre></td></tr></table></figure>
<p>解题思路：<br>和上面的类似，dp[i][j]表示在第i行第j列时的最小路径和，如果i=0，说明在第一行，此时只能从左边来，dp[i][j]=dp[i][j-1]+grid[i][j]，如果j=0，说明只能从上面来，那么dp[i][j]=dp[i-1][j]+grid[i][j]。其他情况就是判断上面和左边的最小值再加上那个位置的数即可。</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">minPathSum</span><span class="params">(<span class="keyword">int</span>[][] grid)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(grid.length==<span class="number">0</span>) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">int</span> dp[][]=<span class="keyword">new</span> <span class="keyword">int</span>[grid.length][grid[<span class="number">0</span>].length];</span><br><span class="line">        dp[<span class="number">0</span>][<span class="number">0</span>]=grid[<span class="number">0</span>][<span class="number">0</span>];</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;grid.length;i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;grid[i].length;j++)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span>(i==<span class="number">0</span> &amp;&amp; j!=<span class="number">0</span>) dp[i][j]=dp[i][j-<span class="number">1</span>]+grid[i][j];</span><br><span class="line">                <span class="keyword">else</span> <span class="keyword">if</span>(j==<span class="number">0</span> &amp;&amp; i!=<span class="number">0</span>) dp[i][j]=dp[i-<span class="number">1</span>][j]+grid[i][j];</span><br><span class="line">                <span class="keyword">else</span> <span class="keyword">if</span>(j!=<span class="number">0</span> &amp;&amp; i!=<span class="number">0</span>) dp[i][j]=Math.min(dp[i][j-<span class="number">1</span>],dp[i-<span class="number">1</span>][j])+grid[i][j];</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> dp[grid.length-<span class="number">1</span>][grid[<span class="number">0</span>].length-<span class="number">1</span>];</span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="第198题：打家劫舍"><a href="#第198题：打家劫舍" class="headerlink" title="第198题：打家劫舍"></a>第198题：打家劫舍</h2><p>你是一个专业的小偷，计划偷窃沿街的房屋。每间房内都藏有一定的现金，影响你偷窃的唯一制约因素就是相邻的房屋装有相互连通的防盗系统，如果两间相邻的房屋在同一晚上被小偷闯入，系统会自动报警。<br>给定一个代表每个房屋存放金额的非负整数数组，计算你在不触动警报装置的情况下，能够偷窃到的最高金额。</p>
<p>示例 1:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">输入: [1,2,3,1]</span><br><span class="line">输出: 4</span><br><span class="line">解释: 偷窃 1 号房屋 (金额 &#x3D; 1) ，然后偷窃 3 号房屋 (金额 &#x3D; 3)。</span><br><span class="line">	 偷窃到的最高金额 &#x3D; 1 + 3 &#x3D; 4 。</span><br></pre></td></tr></table></figure>
<p>解题思路：dp[i]表示在第i号房获得的最大收益，dp[0]=nums[0],dp[1]=max(dp[0],dp[1])，dp[2]=max(dp[i-2]+nums[2],dp[i-1]),要么是倒数第二房间+该房间，要么是倒数第一个房间。最后返回dp[nums.length-1]便是我们需要的答案。</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">rob</span><span class="params">(<span class="keyword">int</span>[] nums)</span> </span>&#123;</span><br><span class="line">           <span class="keyword">int</span>  len=nums.length;</span><br><span class="line">           <span class="keyword">if</span>(len==<span class="number">0</span>) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">           <span class="keyword">if</span>(len==<span class="number">1</span>) <span class="keyword">return</span> nums[<span class="number">0</span>];</span><br><span class="line">           <span class="keyword">int</span> [] dp=<span class="keyword">new</span> <span class="keyword">int</span>[len];</span><br><span class="line">           dp[<span class="number">0</span>]=nums[<span class="number">0</span>];</span><br><span class="line">           dp[<span class="number">1</span>]=Math.max(nums[<span class="number">0</span>],nums[<span class="number">1</span>]);</span><br><span class="line">           <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">2</span>;i&lt;len;i++)</span><br><span class="line">           &#123;</span><br><span class="line">               dp[i]=Math.max(dp[i-<span class="number">1</span>],dp[i-<span class="number">2</span>]+nums[i]);</span><br><span class="line">           &#125;</span><br><span class="line">           <span class="keyword">return</span> dp[len-<span class="number">1</span>];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>刷题笔记</category>
      </categories>
      <tags>
        <tag>笔记</tag>
        <tag>leetcode</tag>
      </tags>
  </entry>
  <entry>
    <title>小浩算法-java题解-链表篇</title>
    <url>/article/7758c0ce.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\css\APlayer.min.css"><script src="\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\js\Meting.min.js"></script><p>原文链接<br><a href="https://www.geekxh.com/0.0.%E5%AD%A6%E4%B9%A0%E9%A1%BB%E7%9F%A5/01.html" target="_blank" rel="external nofollow noopener noreferrer">https://www.geekxh.com/0.0.%E5%AD%A6%E4%B9%A0%E9%A1%BB%E7%9F%A5/01.html</a><br>这里是把这个大佬的题解用java写一下做个记录</p>
<h1 id="链表篇"><a href="#链表篇" class="headerlink" title="链表篇"></a>链表篇</h1><h2 id="第19题：删除链表倒数第N个节点"><a href="#第19题：删除链表倒数第N个节点" class="headerlink" title="第19题：删除链表倒数第N个节点"></a>第19题：删除链表倒数第N个节点</h2><p>给定一个链表，删除链表的倒数第 n 个节点，并且返回链表的头结点。<br>示例：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">给定一个链表: 1-&gt;2-&gt;3-&gt;4-&gt;5, 和 n &#x3D; 2.</span><br><span class="line">当删除了倒数第二个节点后，链表变为 1-&gt;2-&gt;3-&gt;5.</span><br><span class="line">说明：</span><br><span class="line"></span><br><span class="line">给定的 n 保证是有效的。</span><br><span class="line">进阶：</span><br><span class="line"></span><br><span class="line">你能尝试使用一趟扫描实现吗？</span><br></pre></td></tr></table></figure>
<p>解题思路：用一个哨兵节点res定位，然后用两个指针pre和cur，指向这个哨兵节点，其中cur是要删除的节点，用head进行遍历，当head距离cur有n-1时，cur开始移动，pre始终在cur的前一个，直到head指向null，结束后pre.next=pre.next.next就删除了cur，最后返回res.next。</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Definition for singly-linked list.</span></span><br><span class="line"><span class="comment"> * public class ListNode &#123;</span></span><br><span class="line"><span class="comment"> *     int val;</span></span><br><span class="line"><span class="comment"> *     ListNode next;</span></span><br><span class="line"><span class="comment"> *     ListNode(int x) &#123; val = x; &#125;</span></span><br><span class="line"><span class="comment"> * &#125;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> ListNode <span class="title">removeNthFromEnd</span><span class="params">(ListNode head, <span class="keyword">int</span> n)</span> </span>&#123;</span><br><span class="line">         ListNode res=<span class="keyword">new</span> ListNode(<span class="number">0</span>);<span class="comment">//哨兵节点</span></span><br><span class="line">         res.next=head;</span><br><span class="line">         ListNode pre=res;</span><br><span class="line">         ListNode cur=res;</span><br><span class="line">         <span class="keyword">int</span> i=<span class="number">1</span>; <span class="comment">//距离是n-1，所以从1开始</span></span><br><span class="line">         <span class="keyword">while</span>(head!=<span class="keyword">null</span>)</span><br><span class="line">         &#123;</span><br><span class="line">             <span class="keyword">if</span>(i&gt;=n)</span><br><span class="line">             &#123;</span><br><span class="line">                 pre=cur;</span><br><span class="line">                 cur=cur.next;</span><br><span class="line">             &#125;</span><br><span class="line">             head=head.next;</span><br><span class="line">             i++;</span><br><span class="line">         &#125;</span><br><span class="line">         pre.next=pre.next.next;</span><br><span class="line">         <span class="keyword">return</span> res.next;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>哨兵节点的妙处：<br><img src= "/img/loading.gif" data-src="https://img-blog.csdnimg.cn/20200729031206624.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxMzE4NDAw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<h2 id="第21题：合并两个有序链表"><a href="#第21题：合并两个有序链表" class="headerlink" title="第21题：合并两个有序链表"></a>第21题：合并两个有序链表</h2><p>将两个有序链表合并为一个新的有序链表并返回。新链表是通过拼接给定的两个链表的所有节点组成的。<br>示例：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">输入：1-&gt;2-&gt;4, 1-&gt;3-&gt;4</span><br><span class="line">输出：1-&gt;1-&gt;2-&gt;3-&gt;4-&gt;4</span><br></pre></td></tr></table></figure>
<p>解题思路：<br>方法一： 递归</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> ListNode <span class="title">mergeTwoLists</span><span class="params">(ListNode l1, ListNode l2)</span> </span>&#123;</span><br><span class="line">          <span class="keyword">if</span>(l1==<span class="keyword">null</span> &amp;&amp; l2==<span class="keyword">null</span>) <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">          <span class="keyword">if</span>(l1==<span class="keyword">null</span>) <span class="keyword">return</span> l2;</span><br><span class="line">          <span class="keyword">if</span>(l2==<span class="keyword">null</span>) <span class="keyword">return</span> l1;</span><br><span class="line">          <span class="keyword">if</span>(l1.val&lt;l2.val)</span><br><span class="line">          &#123;</span><br><span class="line">              l1.next=mergeTwoLists(l1.next,l2);<span class="comment">//下一个是其中那个小的，下面类推</span></span><br><span class="line">              <span class="keyword">return</span> l1;</span><br><span class="line">          &#125;<span class="keyword">else</span></span><br><span class="line">          &#123;</span><br><span class="line">              l2.next=mergeTwoLists(l1,l2.next);</span><br><span class="line">              <span class="keyword">return</span> l2;</span><br><span class="line">          &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>方法二： 使用哨兵节点res，pre用来遍历新的链表，然后再在两个里进行比较，取其中小的那个，最后返回哨兵节点res.next。官方解里有图。</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> ListNode <span class="title">mergeTwoLists</span><span class="params">(ListNode l1, ListNode l2)</span> </span>&#123;</span><br><span class="line">          <span class="keyword">if</span>(l1==<span class="keyword">null</span> &amp;&amp; l2==<span class="keyword">null</span>) <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">          <span class="keyword">if</span>(l1==<span class="keyword">null</span>) <span class="keyword">return</span> l2;</span><br><span class="line">          <span class="keyword">if</span>(l2==<span class="keyword">null</span>) <span class="keyword">return</span> l1;</span><br><span class="line">          ListNode pre=<span class="keyword">new</span> ListNode(<span class="number">0</span>);</span><br><span class="line">          ListNode res=pre;</span><br><span class="line">          <span class="keyword">while</span>(l1!=<span class="keyword">null</span> &amp;&amp; l2!=<span class="keyword">null</span>)</span><br><span class="line">          &#123;</span><br><span class="line">              <span class="keyword">if</span>(l1.val&lt;l2.val)</span><br><span class="line">              &#123;</span><br><span class="line">                  pre.next=l1;</span><br><span class="line">                  l1=l1.next;</span><br><span class="line">              &#125;<span class="keyword">else</span></span><br><span class="line">              &#123;</span><br><span class="line">                  pre.next=l2;</span><br><span class="line">                  l2=l2.next;</span><br><span class="line">              &#125;</span><br><span class="line">              pre=pre.next;</span><br><span class="line">          &#125;</span><br><span class="line">          <span class="keyword">if</span>(l1!=<span class="keyword">null</span>) pre.next=l1;</span><br><span class="line">          <span class="keyword">if</span>(l2!=<span class="keyword">null</span>) pre.next=l2;</span><br><span class="line">          <span class="keyword">return</span> res.next;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="第141题：环形链表"><a href="#第141题：环形链表" class="headerlink" title="第141题：环形链表"></a>第141题：环形链表</h2><p>给定一个链表，判断链表中是否有环。为了表示给定链表中的环，我们使用整数 pos 来表示链表尾连接到链表中的位置（索引从 0 开始）。如果 pos 是 -1，则在该链表中没有环。<br>示例 1：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">输入：head &#x3D; [3,2,0,-4], pos &#x3D; 1</span><br><span class="line">输出：true</span><br><span class="line">解释：链表中有一个环，其尾部连接到第二个节点。</span><br></pre></td></tr></table></figure>
<p>解题思路：快慢指针，快指针走两步，慢指针走一步，如果相遇说明就有环。</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">hasCycle</span><span class="params">(ListNode head)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(head == <span class="keyword">null</span> || head.next== <span class="keyword">null</span>) <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">        ListNode slow=head;</span><br><span class="line">        ListNode fast=head.next;</span><br><span class="line">        <span class="keyword">while</span>(fast!=slow)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(fast==<span class="keyword">null</span> || fast.next==<span class="keyword">null</span>) <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">            fast=fast.next.next;</span><br><span class="line">            slow=slow.next;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="第2题：两数相加"><a href="#第2题：两数相加" class="headerlink" title="第2题：两数相加"></a>第2题：两数相加</h2><p>给出两个 非空 的链表用来表示两个非负的整数。其中，它们各自的位数是按照 逆序 的方式存储的，并且它们的每个节点只能存储 一位 数字。<br>给出两个 非空 的链表用来表示两个非负的整数。其中，它们各自的位数是按照 逆序 的方式存储的，并且它们的每个节点只能存储 一位 数字。</p>
<p>如果，我们将这两个数相加起来，则会返回一个新的链表来表示它们的和。</p>
<p>您可以假设除了数字 0 之外，这两个数都不会以 0 开头。</p>
<p>示例：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">输入：(2 -&gt; 4 -&gt; 3) + (5 -&gt; 6 -&gt; 4)</span><br><span class="line">输出：7 -&gt; 0 -&gt; 8</span><br><span class="line">原因：342 + 465 &#x3D; 807</span><br></pre></td></tr></table></figure>
<p>解题思路： 构建一个新的链表，这个链表的每一个值都是给的两个链表值的和，然后考虑进位。用哨兵节点指向我们的新链表。建议看大佬的图解，很直观。</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Definition for singly-linked list.</span></span><br><span class="line"><span class="comment"> * public class ListNode &#123;</span></span><br><span class="line"><span class="comment"> *     int val;</span></span><br><span class="line"><span class="comment"> *     ListNode next;</span></span><br><span class="line"><span class="comment"> *     ListNode(int x) &#123; val = x; &#125;</span></span><br><span class="line"><span class="comment"> * &#125;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> ListNode <span class="title">addTwoNumbers</span><span class="params">(ListNode l1, ListNode l2)</span> </span>&#123;</span><br><span class="line">      ListNode list=<span class="keyword">new</span> ListNode(<span class="number">0</span>);</span><br><span class="line">      ListNode res=list;</span><br><span class="line">      <span class="keyword">int</span> tmp=<span class="number">0</span>;</span><br><span class="line">      <span class="keyword">while</span>(l1!=<span class="keyword">null</span> || l2 != <span class="keyword">null</span> || tmp!=<span class="number">0</span> )<span class="comment">//这个是判断是不是结束，tmp是判断进位后</span></span><br><span class="line">      <span class="comment">//的那个是不是结束，比如[5] [5]按照这样是0,1满足条件，而如果没有tmp就变成了0。</span></span><br><span class="line">      &#123;</span><br><span class="line">          <span class="keyword">if</span>(l1!=<span class="keyword">null</span>)</span><br><span class="line">          &#123;</span><br><span class="line">              tmp+=l1.val;</span><br><span class="line">              l1=l1.next;</span><br><span class="line">          &#125;</span><br><span class="line">          <span class="keyword">if</span>(l2!= <span class="keyword">null</span>)</span><br><span class="line">          &#123;</span><br><span class="line">              tmp+=l2.val;</span><br><span class="line">              l2=l2.next;</span><br><span class="line">          &#125;</span><br><span class="line">          list.next=<span class="keyword">new</span> ListNode(tmp%<span class="number">10</span>);<span class="comment">//填入后面的值</span></span><br><span class="line">          tmp/=<span class="number">10</span>;<span class="comment">//判断是不是进位了，如果没有那么这个就是0。</span></span><br><span class="line">          list=list.next;<span class="comment">//新链表后移</span></span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">return</span> res.next;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>刷题笔记</category>
      </categories>
      <tags>
        <tag>笔记</tag>
        <tag>leetcode</tag>
      </tags>
  </entry>
  <entry>
    <title>小浩算法-java题解-数组篇</title>
    <url>/article/683f20fa.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\css\APlayer.min.css"><script src="\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\js\Meting.min.js"></script><p>原文链接<br><a href="https://www.geekxh.com/0.0.%E5%AD%A6%E4%B9%A0%E9%A1%BB%E7%9F%A5/01.html" target="_blank" rel="external nofollow noopener noreferrer">https://www.geekxh.com/0.0.%E5%AD%A6%E4%B9%A0%E9%A1%BB%E7%9F%A5/01.html</a><br>这里是把这个大佬的题解用java写一下做个记录</p>
<h1 id="数组系列"><a href="#数组系列" class="headerlink" title="数组系列"></a>数组系列</h1><h2 id="两个数组的交集-350"><a href="#两个数组的交集-350" class="headerlink" title="两个数组的交集(350)"></a>两个数组的交集(350)</h2><p>给定两个数组，编写一个函数来计算它们的交集。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">示例 1:</span><br><span class="line">输入: nums1 &#x3D; [1,2,2,1], nums2 &#x3D; [2,2]</span><br><span class="line">输出: [2,2]</span><br></pre></td></tr></table></figure>

<p>方法一：map映射<br>两组数记录下每组数中每位数的次数，再加入另一组数中比较，如果另一组数组的元素在map中的v，也就是次数大于0，做记录，如果次数=0除去这个数。注意要减次数。<br>官方题解比较美观，贴出来。</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">int</span>[] intersect(<span class="keyword">int</span>[] nums1, <span class="keyword">int</span>[] nums2) &#123;</span><br><span class="line">          <span class="keyword">if</span>(nums1.length&gt;nums2.length)</span><br><span class="line">           <span class="keyword">return</span> intersect(nums2,nums1); <span class="comment">//保证nums1永远是那个最小的</span></span><br><span class="line">    </span><br><span class="line">    Map&lt;Integer,Integer&gt; map=<span class="keyword">new</span> HashMap&lt;Integer,Integer&gt;();</span><br><span class="line">   <span class="keyword">for</span> (<span class="keyword">int</span> num : nums1) </span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> count=map.getOrDefault(num,<span class="number">0</span>)+<span class="number">1</span>; <span class="comment">//如果出现过出现次数+1，如果没出现过为1</span></span><br><span class="line">        map.put(num,count);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> [] intersection=<span class="keyword">new</span> <span class="keyword">int</span>[nums1.length];<span class="comment">//记录结果的，最大长度是nums1的长度</span></span><br><span class="line">    <span class="keyword">int</span> index=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> num:nums2)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> count=map.getOrDefault(num,<span class="number">0</span>);</span><br><span class="line">        <span class="keyword">if</span>(count&gt;<span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            intersection[index++]=num;</span><br><span class="line">            count--;<span class="comment">//记录完记得减次数</span></span><br><span class="line">            <span class="keyword">if</span>(count&gt;<span class="number">0</span>)<span class="comment">//减完还是大于0更新map</span></span><br><span class="line">            &#123;</span><br><span class="line">                map.put(num,count);</span><br><span class="line">            &#125;<span class="keyword">else</span><span class="comment">//=0说明该移除了</span></span><br><span class="line">            &#123;</span><br><span class="line">                map.remove(num);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> Arrays.copyOfRange(intersection,<span class="number">0</span>,index); </span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>方法二：排序后双指针对比，碰到一样的记录，不一样的根据大小往后推，直到两边都遍历完，用一个ans数组存储结果。</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">int</span>[] intersect(<span class="keyword">int</span>[] nums1, <span class="keyword">int</span>[] nums2) &#123;</span><br><span class="line">       <span class="keyword">if</span>(nums1.length&gt;nums2.length)</span><br><span class="line">       <span class="keyword">return</span> intersect(nums2,nums1);</span><br><span class="line"></span><br><span class="line">       <span class="keyword">int</span> ans[]=<span class="keyword">new</span> <span class="keyword">int</span>[nums1.length];</span><br><span class="line">       Arrays.sort(nums1);</span><br><span class="line">       Arrays.sort(nums2);</span><br><span class="line">       <span class="keyword">int</span> i=<span class="number">0</span>,j=<span class="number">0</span>,k=<span class="number">0</span>;</span><br><span class="line">       <span class="keyword">while</span>(i&lt;nums1.length &amp;&amp; j&lt;nums2.length)</span><br><span class="line">       &#123;</span><br><span class="line">           <span class="keyword">if</span>(nums1[i]==nums2[j])</span><br><span class="line">            &#123;</span><br><span class="line">                ans[k++]=nums1[i];</span><br><span class="line">                i++;j++;</span><br><span class="line">            &#125;<span class="keyword">else</span> <span class="keyword">if</span>(nums1[i]&gt;nums2[j])</span><br><span class="line">            &#123;</span><br><span class="line">                j++;</span><br><span class="line">            &#125;<span class="keyword">else</span> i++;</span><br><span class="line">       &#125;</span><br><span class="line">       <span class="keyword">return</span> Arrays.copyOfRange(ans, <span class="number">0</span>, k);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="最长公共前缀"><a href="#最长公共前缀" class="headerlink" title="最长公共前缀"></a>最长公共前缀</h2><p>编写一个函数来查找字符串数组中的最长公共前缀。如果不存在公共前缀，则返回””</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">示例1:</span><br><span class="line"></span><br><span class="line">输入: [&quot;flower&quot;,&quot;flow&quot;,&quot;flight&quot;]</span><br><span class="line">输出: &quot;fl&quot;</span><br></pre></td></tr></table></figure>

<p>解题思路：横向比较，假设第一个就是答案，向后遍历，遍历时判断这两个的公共前缀，如果出现了空的就直接返回“”，否则继续向后。<br>参考：<a href="https://leetcode-cn.com/problems/longest-common-prefix/solution/hua-jie-suan-fa-14-zui-chang-gong-gong-qian-zhui-b/" target="_blank" rel="external nofollow noopener noreferrer">https://leetcode-cn.com/problems/longest-common-prefix/solution/hua-jie-suan-fa-14-zui-chang-gong-gong-qian-zhui-b/</a></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">longestCommonPrefix</span><span class="params">(String[] strs)</span> </span>&#123;</span><br><span class="line">             <span class="keyword">if</span>(strs.length==<span class="number">0</span>) <span class="keyword">return</span> <span class="string">""</span>;</span><br><span class="line">             String prefix=strs[<span class="number">0</span>];</span><br><span class="line">             <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;strs.length;i++)</span><br><span class="line">             &#123;</span><br><span class="line">                 <span class="keyword">int</span> j=<span class="number">0</span>;</span><br><span class="line">                 <span class="keyword">for</span>(;j&lt;prefix.length() &amp;&amp; j&lt;strs[i].length();j++)<span class="comment">//j是要小于两个才是公共前缀</span></span><br><span class="line">                 &#123;</span><br><span class="line">                         <span class="keyword">if</span>(prefix.charAt(j)!=strs[i].charAt(j))</span><br><span class="line">                         <span class="keyword">break</span>;</span><br><span class="line">                 &#125;</span><br><span class="line">                 prefix=prefix.substring(<span class="number">0</span>,j);</span><br><span class="line">                 <span class="keyword">if</span>(prefix.equals(<span class="string">""</span>)) <span class="keyword">return</span> <span class="string">""</span>;</span><br><span class="line">             &#125;</span><br><span class="line">             <span class="keyword">return</span> prefix;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="第122题：买卖股票的最佳时机-II"><a href="#第122题：买卖股票的最佳时机-II" class="headerlink" title="第122题：买卖股票的最佳时机 II"></a>第122题：买卖股票的最佳时机 II</h2><p>给定一个数组，它的第 i 个元素是一支给定股票第 i 天的价格。<br>如果你最多只允许完成一笔交易（即买入和卖出一支股票），设计一个算法来计算你所能获取的最大利润。注意你不能在买入股票前卖出股票。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">示例 1:</span><br><span class="line">输入: [7,1,5,3,6,4]</span><br><span class="line">输出: 7</span><br><span class="line">解释: 在第 2 天（股票价格 &#x3D; 1）的时候买入，在第 3 天（股票价格 &#x3D; 5）的时候卖出, 这笔交易所能获得利润 &#x3D; 5-1 &#x3D; 4 。</span><br><span class="line">随后，在第 4 天（股票价格 &#x3D; 3）的时候买入，在第 5 天（股票价格 &#x3D; 6）的时候卖出, 这笔交易所能获得利润 &#x3D; 6-3 &#x3D; 3 。</span><br></pre></td></tr></table></figure>

<p>贪心：只算正数的</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">maxProfit</span><span class="params">(<span class="keyword">int</span>[] prices)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> ans=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">int</span> tem_ans=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;prices.length;i++)</span><br><span class="line">        &#123;</span><br><span class="line">            tem_ans=prices[i]-prices[i-<span class="number">1</span>];</span><br><span class="line">            <span class="keyword">if</span>(tem_ans&gt;<span class="number">0</span>)</span><br><span class="line">                ans+=tem_ans;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> ans;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="题目189-旋转数组"><a href="#题目189-旋转数组" class="headerlink" title="题目189: 旋转数组"></a>题目189: 旋转数组</h2><p>给定一个数组，将数组中的元素向右移动 k 个位置，其中 k 是非负数。<br>示例 1:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">输入: [1,2,3,4,5,6,7] 和 k &#x3D; 3</span><br><span class="line">输出: [5,6,7,1,2,3,4]</span><br><span class="line">解释:</span><br><span class="line"></span><br><span class="line">向右旋转 1 步: [7,1,2,3,4,5,6]</span><br><span class="line">向右旋转 2 步: [6,7,1,2,3,4,5]</span><br><span class="line">向右旋转 3 步: [5,6,7,1,2,3,4]</span><br></pre></td></tr></table></figure>
<p>解题思路：反转数组，7654321，再分别反转 k%7，得到答案。</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">rotate</span><span class="params">(<span class="keyword">int</span>[] nums, <span class="keyword">int</span> k)</span> </span>&#123;</span><br><span class="line">          reverse(nums,<span class="number">0</span>,nums.length-<span class="number">1</span>);</span><br><span class="line">          k%=nums.length; <span class="comment">//如果k的长度大于数组长度，那么只计算取余之后的，因为=的部分会不变。</span></span><br><span class="line">          reverse(nums,<span class="number">0</span>,k-<span class="number">1</span>);</span><br><span class="line">           reverse(nums,k,nums.length-<span class="number">1</span>);</span><br><span class="line">          </span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">reverse</span><span class="params">(<span class="keyword">int</span> [] nums,<span class="keyword">int</span> strat,<span class="keyword">int</span> end)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">         <span class="keyword">while</span>(strat&lt;end)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">int</span> tem=nums[strat];</span><br><span class="line">            nums[strat]=nums[end];</span><br><span class="line">            nums[end]=tem;</span><br><span class="line">            end--; strat++;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="题目27：移除元素"><a href="#题目27：移除元素" class="headerlink" title="题目27：移除元素"></a>题目27：移除元素</h2><p>给定一个数组 nums 和一个值 val，你需要原地移除所有数值等于 val 的元素，返回移除后数组的新长度。<br>不要使用额外的数组空间，你必须在原地修改输入数组并在使用 O(1) 额外空间的条件下完成。</p>
<p>元素的顺序可以改变。你不需要考虑数组中超出新长度后面的元素。</p>
<p>示例 1:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">给定 nums &#x3D; [3,2,2,3], val &#x3D; 3,</span><br><span class="line">函数应该返回新的长度 2, 并且 nums 中的前两个元素均为 2。</span><br><span class="line">你不需要考虑数组中超出新长度后面的元素。</span><br></pre></td></tr></table></figure>
<p>解题思路：修改后必定是长度少于原来的，我们直接修改。</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">removeElement</span><span class="params">(<span class="keyword">int</span>[] nums, <span class="keyword">int</span> val)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> k=<span class="number">0</span>; <span class="comment">//这个就是真正的索引</span></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;nums.length;i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(nums[i]!=val)</span><br><span class="line">            &#123;</span><br><span class="line">                nums[k]=nums[i];</span><br><span class="line">                k++;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> k;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="类似题目：删除排序数组中的重复项"><a href="#类似题目：删除排序数组中的重复项" class="headerlink" title="类似题目：删除排序数组中的重复项"></a>类似题目：删除排序数组中的重复项</h3><p>给定一个排序数组，你需要在原地删除重复出现的元素，使得每个元素只出现一次。<br>返回移除后数组的新长度。不要使用额外的数组空间，你必须在原地修改输入数组并在使用 O(1) 额外空间的条件下完成。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">示例 1:</span><br><span class="line"></span><br><span class="line">给定数组 nums &#x3D; [1,1,2],</span><br><span class="line">函数应该返回新的长度 2, 并且原数组 nums 的前两个元素被修改为 1, 2。</span><br><span class="line">你不需要考虑数组中超出新长度后面的元素。</span><br></pre></td></tr></table></figure>
<p>解题思路:和上面的类似，稍作修改，还是用一个真正的索引来确定位置，然后进行判断。</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">removeDuplicates</span><span class="params">(<span class="keyword">int</span>[] nums)</span> </span>&#123;</span><br><span class="line">       <span class="keyword">if</span>(nums.length==<span class="number">0</span>)<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">       <span class="keyword">int</span> index=<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;nums.length;i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(nums[i]!=nums[i-<span class="number">1</span>])</span><br><span class="line">            &#123;</span><br><span class="line">                nums[index]=nums[i];</span><br><span class="line">                index++;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> index;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="删除排序数组中的重复项-II"><a href="#删除排序数组中的重复项-II" class="headerlink" title="删除排序数组中的重复项 II"></a>删除排序数组中的重复项 II</h3><p>给定一个排序数组，你需要在原地删除重复出现的元素，使得每个元素最多出现两次，返回移除后数组的新长度。</p>
<p>不要使用额外的数组空间，你必须在原地修改输入数组并在使用 O(1) 额外空间的条件下完成。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">示例 1:</span><br><span class="line"></span><br><span class="line">给定 nums &#x3D; [1,1,1,2,2,3],</span><br><span class="line"></span><br><span class="line">函数应返回新长度 length &#x3D; 5, 并且原数组的前五个元素被修改为 1, 1, 2, 2, 3 。</span><br><span class="line"></span><br><span class="line">你不需要考虑数组中超出新长度后面的元素。</span><br></pre></td></tr></table></figure>
<p>解题思路：已经排好序，我们直接看第三个是不是和第一个一样，不一样我们更新数组，一样就不更新</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">removeDuplicates</span><span class="params">(<span class="keyword">int</span>[] nums)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> i=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> n:nums)</span><br><span class="line">            <span class="keyword">if</span>(i&lt;<span class="number">2</span>|| n!=nums[i-<span class="number">2</span>])</span><br><span class="line">                nums[i++]=n;</span><br><span class="line">        <span class="keyword">return</span> i;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="第66题：加一"><a href="#第66题：加一" class="headerlink" title="第66题：加一"></a>第66题：加一</h2><p>给定一个由整数组成的非空数组所表示的非负整数，在该数的基础上加一。<br>最高位数字存放在数组的首位， 数组中每个元素只存储单个数字。你可以假设除了整数 0 之外，这个整数不会以零开头。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">示例 1:</span><br><span class="line"></span><br><span class="line">输入: [1,2,3]</span><br><span class="line">输出: [1,2,4]</span><br><span class="line">解释: 输入数组表示数字 123。</span><br></pre></td></tr></table></figure>
<p>解题思路：从后往前看，普通情况就是加上之后不会进位直接输出即可，特别情况下进位，然后输出即可，再更特别情况下要一直进位，还要在前面补个一。<br>贴个神仙思路：<a href="https://leetcode-cn.com/problems/plus-one/solution/java-shu-xue-jie-ti-by-yhhzw/" target="_blank" rel="external nofollow noopener noreferrer">https://leetcode-cn.com/problems/plus-one/solution/java-shu-xue-jie-ti-by-yhhzw/</a></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">int</span>[] plusOne(<span class="keyword">int</span>[] digits) &#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=digits.length-<span class="number">1</span>;i&gt;-<span class="number">1</span>;i--)</span><br><span class="line">        &#123;</span><br><span class="line">            digits[i]++;</span><br><span class="line">            digits[i]=digits[i]%<span class="number">10</span>;</span><br><span class="line">            <span class="keyword">if</span>(digits[i]!=<span class="number">0</span>) <span class="keyword">return</span> digits;</span><br><span class="line">        &#125;</span><br><span class="line">        digits=<span class="keyword">new</span> <span class="keyword">int</span>[digits.length+<span class="number">1</span>]; <span class="comment">//如果是更特别的情况长度+1</span></span><br><span class="line">        digits[<span class="number">0</span>]=<span class="number">1</span>;<span class="comment">//第一个是1，后面全是0</span></span><br><span class="line">        <span class="keyword">return</span> digits;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="第1题：两数之和"><a href="#第1题：两数之和" class="headerlink" title="第1题：两数之和"></a>第1题：两数之和</h2><p>给定一个整数数组 nums 和一个目标值 target，请你在该数组中找出和为目标值的那 两个 整数，并返回他们的数组下标。<br>你可以假设每种输入只会对应一个答案。但是，你不能重复利用这个数组中同样的元素。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">示例:</span><br><span class="line"></span><br><span class="line">给定 nums &#x3D; [2, 7, 11, 15], target &#x3D; 9</span><br><span class="line">因为 nums[0] + nums[1] &#x3D; 2 + 7 &#x3D; 9</span><br><span class="line">所以返回 [0, 1]</span><br></pre></td></tr></table></figure>
<p>解题思路：可以暴力法直接遍历，这里用哈希表</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">int</span>[] twoSum(<span class="keyword">int</span>[] nums, <span class="keyword">int</span> target) &#123;</span><br><span class="line">        Map&lt;Integer,Integer&gt; map=<span class="keyword">new</span> HashMap&lt;Integer,Integer&gt;();</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;nums.length;i++)</span><br><span class="line">            map.put(nums[i],i);</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;nums.length;i++)</span><br><span class="line">        &#123;</span><br><span class="line">           <span class="keyword">int</span> com=target-nums[i];</span><br><span class="line">            <span class="keyword">if</span>(map.containsKey(com) &amp;&amp; map.get(com)!=i) <span class="comment">//如果是两个一样的保证是不是一个</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">new</span> <span class="keyword">int</span>[]&#123;i,map.get(com)&#125;;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="keyword">int</span>[]&#123;-<span class="number">1</span>,-<span class="number">1</span>&#125;;</span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="第15题：三数之和"><a href="#第15题：三数之和" class="headerlink" title="第15题：三数之和"></a>第15题：三数之和</h2><p>给你一个包含 n 个整数的数组 nums，判断 nums 中是否存在三个元素 a，b，c ，使得 a + b + c = 0 ？请你找出所有满足条件且不重复的三元组。注意：答案中不可以包含重复的三元组。<br>示例：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">给定数组 nums &#x3D; [-1, 0, 1, 2, -1, -4]，</span><br><span class="line">满足要求的三元组集合为：</span><br><span class="line">[</span><br><span class="line">  [-1, 0, 1],</span><br><span class="line">  [-1, -1, 2]</span><br><span class="line">]</span><br></pre></td></tr></table></figure>
<p>解题思路： 排序，然后固定第一个，再用双指针判断后面，大于就右移，小于就左移，得到结果后再固定第二个，以此类推。</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> List&lt;List&lt;Integer&gt;&gt; threeSum(<span class="keyword">int</span>[] nums) &#123;</span><br><span class="line">          Arrays.sort(nums);</span><br><span class="line">          List&lt;List&lt;Integer&gt;&gt; res=<span class="keyword">new</span> ArrayList();</span><br><span class="line">          <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;nums.length;i++)</span><br><span class="line">          &#123;</span><br><span class="line">              <span class="keyword">int</span> target=<span class="number">0</span>-nums[i]; <span class="comment">//这个是双指针要判断的目标值</span></span><br><span class="line">              <span class="keyword">int</span> l=i+<span class="number">1</span>;</span><br><span class="line">              <span class="keyword">int</span> r=nums.length-<span class="number">1</span>;</span><br><span class="line">              <span class="keyword">if</span>(nums[i]&gt;<span class="number">0</span>) <span class="keyword">break</span>;<span class="comment">//如果大于0那么后面必定大于0直接结束</span></span><br><span class="line">              <span class="keyword">if</span>(i==<span class="number">0</span> || nums[i]!=nums[i-<span class="number">1</span>]) <span class="comment">//这个是去重</span></span><br><span class="line">              &#123;</span><br><span class="line">                  <span class="keyword">while</span>(l&lt;r)</span><br><span class="line">                  &#123;</span><br><span class="line">                      <span class="keyword">if</span>(nums[l]+nums[r]==target)</span><br><span class="line">                      &#123;</span><br><span class="line">                          res.add(Arrays.asList(nums[i],nums[l],nums[r]));</span><br><span class="line">                          <span class="keyword">while</span>(l&lt;r &amp;&amp; nums[l]==nums[l+<span class="number">1</span>]) l++;<span class="comment">//这个也是去重，下面的也是</span></span><br><span class="line">                          <span class="keyword">while</span>(l&lt;r &amp;&amp; nums[r]==nums[r-<span class="number">1</span>]) r--;</span><br><span class="line">                          l++;r--;</span><br><span class="line">                      &#125;<span class="keyword">else</span> <span class="keyword">if</span>(nums[l]+nums[r]&gt;target)<span class="comment">//说明需要右移</span></span><br><span class="line">                       r--;</span><br><span class="line">                       <span class="keyword">else</span></span><br><span class="line">                       l++;</span><br><span class="line">                  &#125;</span><br><span class="line">              &#125;</span><br><span class="line">          &#125;</span><br><span class="line">          <span class="keyword">return</span> res;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="第6题：Z-字形变换"><a href="#第6题：Z-字形变换" class="headerlink" title="第6题：Z 字形变换"></a>第6题：Z 字形变换</h2><p>将一个给定字符串根据给定的行数，以从上往下、从左到右进行 Z 字形排列。比如输入字符串为 **”LEETCODEISHIRING” **行数为 3 时，排列如下：<br>L   C   I   R<br>E T O E S I I G<br>E   D   H   N</p>
<p>解题思路：<br><a href="https://www.geekxh.com/1.0.%E6%95%B0%E7%BB%84%E7%B3%BB%E5%88%97/009.html#_01%E3%80%81%E9%A2%98%E7%9B%AE%E7%A4%BA%E4%BE%8B" target="_blank" rel="external nofollow noopener noreferrer">https://www.geekxh.com/1.0.%E6%95%B0%E7%BB%84%E7%B3%BB%E5%88%97/009.html#_01%E3%80%81%E9%A2%98%E7%9B%AE%E7%A4%BA%E4%BE%8B</a><br><a href="https://leetcode-cn.com/problems/zigzag-conversion/solution/zzi-xing-bian-huan-by-jyd/" target="_blank" rel="external nofollow noopener noreferrer">https://leetcode-cn.com/problems/zigzag-conversion/solution/zzi-xing-bian-huan-by-jyd/</a><br>图解更清晰一点。<br>这里贴第二个的</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">convert</span><span class="params">(String s, <span class="keyword">int</span> numRows)</span> </span>&#123;</span><br><span class="line">          <span class="keyword">if</span>(numRows&lt;<span class="number">2</span>) <span class="keyword">return</span> s;</span><br><span class="line">          List&lt;StringBuilder&gt; rows=<span class="keyword">new</span> ArrayList&lt;StringBuilder&gt;();</span><br><span class="line">          <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;numRows;i++) rows.add(<span class="keyword">new</span> StringBuilder());</span><br><span class="line">          <span class="keyword">int</span> i=<span class="number">0</span>,flag=-<span class="number">1</span>;</span><br><span class="line">          <span class="keyword">for</span>(<span class="keyword">char</span> c:s.toCharArray())</span><br><span class="line">          &#123;</span><br><span class="line">              rows.get(i).append(c);</span><br><span class="line">              <span class="keyword">if</span>(i== <span class="number">0</span> || i==numRows-<span class="number">1</span>) flag=-flag;</span><br><span class="line">              i+=flag;</span><br><span class="line">          &#125;</span><br><span class="line">          StringBuilder res=<span class="keyword">new</span> StringBuilder();</span><br><span class="line">          <span class="keyword">for</span>(StringBuilder row:rows) res.append(row);</span><br><span class="line">          <span class="keyword">return</span> res.toString();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>刷题笔记</category>
      </categories>
      <tags>
        <tag>笔记</tag>
        <tag>leetcode</tag>
      </tags>
  </entry>
  <entry>
    <title>阿里云api课程学习笔记</title>
    <url>/article/1e64d194.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\css\APlayer.min.css"><script src="\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\js\Meting.min.js"></script><h1 id="API简介"><a href="#API简介" class="headerlink" title="API简介"></a>API简介</h1><h2 id="API的概念"><a href="#API的概念" class="headerlink" title="API的概念"></a>API的概念</h2><p>应用程序编程接口：是一些预先定义的函数，目的是提供应用程序与开发人员基于某软件或硬件得以访问一组例程的能力，而又无需访问源码或理解内部工作机制的细节。</p>
<h2 id="API的特点"><a href="#API的特点" class="headerlink" title="API的特点"></a>API的特点</h2><p><strong>·</strong> 是一个明确定义的接口，可以为其他软件提供特定服务</p>
<p><strong>·</strong> 可以小到只包含一个单独的函数，也可以大到包含数以百计的类、方法、全局函数、数据类型、枚举类型和常量等</p>
<p><strong>·</strong> 实现可以是私有的，也可以是开源的</p>
<h2 id="API的分类"><a href="#API的分类" class="headerlink" title="API的分类"></a>API的分类</h2><p>面向对象语言的API：Java API列表</p>
<p>库与框架的API：Windows API、Windows DirectX</p>
<p>API与协议：LDAP应用程序接口</p>
<p>API与设备接口：PC BIOS调用接口</p>
<p>Web API：谷歌地图API</p>
<h2 id="为什么使用"><a href="#为什么使用" class="headerlink" title="为什么使用"></a>为什么使用</h2><p>快速扩展功能</p>
<p>避免造轮子，提高开发效率</p>
<p>降低模块之间的耦合度</p>
<h1 id="API请求与认证"><a href="#API请求与认证" class="headerlink" title="API请求与认证"></a>API请求与认证</h1><h2 id="web-api协议与http请求"><a href="#web-api协议与http请求" class="headerlink" title="web api协议与http请求"></a>web api协议与http请求</h2><h3 id="web-api一般采用http作为底层协议，http请求机制如下："><a href="#web-api一般采用http作为底层协议，http请求机制如下：" class="headerlink" title="web api一般采用http作为底层协议，http请求机制如下："></a>web api一般采用http作为底层协议，http请求机制如下：</h3><p><strong>·</strong> 客户端向服务器发送一个请求</p>
<p><strong>·</strong> 服务端给客户端一个响应，告诉客户端是否可以完成它请求的工作</p>
<p><img src= "/img/loading.gif" data-src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly9naXRlZS5jb20venRmbjUyMC9pbWFnZWJlZC9yYXcvbWFzdGVyL2ltZy8yMDIwMDcyMDIzMTA0MC5wbmc?x-oss-process=image/format,png" alt><br>好处是客户端和服务端的语言可以完全没关系。</p>
<h3 id="http请求包含的内容"><a href="#http请求包含的内容" class="headerlink" title="http请求包含的内容"></a>http请求包含的内容</h3><p>为了构造有效的请求，客户端需要包含四个部分：<br><strong>·</strong> url（api调用地址）</p>
<p><strong>·</strong> 请求方式</p>
<p><strong>·</strong> Header（请求头）</p>
<p><strong>·</strong> Body（请求主体）</p>
<p>图示如下：</p>
<p><img src= "/img/loading.gif" data-src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly9naXRlZS5jb20venRmbjUyMC9pbWFnZWJlZC9yYXcvbWFzdGVyL2ltZy8yMDIwMDcyMDIzMTQzMi5wbmc?x-oss-process=image/format,png" alt></p>
<h2 id="api请求方式"><a href="#api请求方式" class="headerlink" title="api请求方式"></a>api请求方式</h2><h3 id="api请求方式-1"><a href="#api请求方式-1" class="headerlink" title="api请求方式"></a>api请求方式</h3><p>作用是告诉服务器客户端希望它采取什么动作，常见请求方式：</p>
<p>GET： 请求服务器获取一个资源</p>
<p>POST： 请求服务器创建一个新的资源</p>
<p>PUT: 请求服务器编辑或更新一个已存在的资源</p>
<p>DELETE：请求服务器删除一个资源</p>
<h3 id="请求头与请求主题"><a href="#请求头与请求主题" class="headerlink" title="请求头与请求主题"></a>请求头与请求主题</h3><p>请求头：提供了请求的元信息，是一个简单的项目列表，其中有客户端发送请求的时间和请求主体大小、身份认证等信息。</p>
<p>请求体：包含了客户端希望发送给服务器的数据。</p>
<h2 id="状态返回码"><a href="#状态返回码" class="headerlink" title="状态返回码"></a>状态返回码</h2><p>成功调用后，除了返回数据还有一个状态码，状态码表示什么参考自己调用的api</p>
<h2 id="api数据格式"><a href="#api数据格式" class="headerlink" title="api数据格式"></a>api数据格式</h2><p>json格式和xml格式，目前大多是json数据格式。<br>json表示对象是对象的键值对<br><img src= "/img/loading.gif" data-src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly9naXRlZS5jb20venRmbjUyMC9pbWFnZWJlZC9yYXcvbWFzdGVyL2ltZy8yMDIwMDcyMDIzMjM0OS5wbmc?x-oss-process=image/format,png" alt></p>
<p>json表示数据使用方括号<br><img src= "/img/loading.gif" data-src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly9naXRlZS5jb20venRmbjUyMC9pbWFnZWJlZC9yYXcvbWFzdGVyL2ltZy8yMDIwMDcyMDIzMjM1NS5wbmc?x-oss-process=image/format,png" alt></p>
<h2 id="api身份认证以及签名认证"><a href="#api身份认证以及签名认证" class="headerlink" title="api身份认证以及签名认证"></a>api身份认证以及签名认证</h2><p>appcode和（appkey&amp;appsecret）需要哪种看具体调用的api</p>
]]></content>
      <categories>
        <category>阿里云学习笔记</category>
      </categories>
      <tags>
        <tag>笔记</tag>
        <tag>阿里云课程</tag>
      </tags>
  </entry>
  <entry>
    <title>hexo在coding和github的双线部署</title>
    <url>/article/541a8071.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\css\APlayer.min.css"><script src="\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\js\Meting.min.js"></script><p>hexo在coding和github的双线部署</p>
<a id="more"></a>
<p><img src= "/img/loading.gif" data-src="https://gitee.com/ztfn520/imagebed/raw/master/img/%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E9%A2%84%E8%A7%88.png" alt><br>地址：<a href="https://www.maolilan.top/">博客地址 </a><br>欢迎来看看<br><a href="https://www.maolilan.top/">https://www.maolilan.top/</a></p>
<h1 id="实现步骤"><a href="#实现步骤" class="headerlink" title="实现步骤"></a>实现步骤</h1><p>github访问还是太慢了，而coding因为在国内所以很快，那么就让国外访问github而国内访问coding，上篇已经讲了github的<br><a href="https://blog.csdn.net/qq_41318400/article/details/107381793" target="_blank" rel="external nofollow noopener noreferrer">https://blog.csdn.net/qq_41318400/article/details/107381793</a></p>
<h2 id="1创建Coding的个人仓库"><a href="#1创建Coding的个人仓库" class="headerlink" title="1创建Coding的个人仓库"></a>1创建Coding的个人仓库</h2><p>仓库名为：最好是用户名，因为艾米莉亚碳我选择了EMT<br><img src= "/img/loading.gif" data-src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly9naXRlZS5jb20venRmbjUyMC9pbWFnZWJlZC9yYXcvbWFzdGVyL2ltZy9jb25kaW5nLnBuZw?x-oss-process=image/format,png" alt><br>选择第三个，紫色的然后勾选启动readme.md初始化<br><img src= "/img/loading.gif" data-src="https://img-blog.csdnimg.cn/20200716144212271.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxMzE4NDAw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<h2 id="2SSH公钥配置"><a href="#2SSH公钥配置" class="headerlink" title="2SSH公钥配置"></a>2SSH公钥配置</h2><p>进入个人中心<br><img src= "/img/loading.gif" data-src="https://img-blog.csdnimg.cn/20200716144329214.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxMzE4NDAw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src= "/img/loading.gif" data-src="https://img-blog.csdnimg.cn/20200716144338124.png" alt="在这里插入图片描述"><br>这里是上篇博客提到的在.ssh文件夹下的，同理</p>
<h2 id="3开启Coding-Pages服务"><a href="#3开启Coding-Pages服务" class="headerlink" title="3开启Coding Pages服务"></a>3开启Coding Pages服务</h2><p><img src= "/img/loading.gif" data-src="https://img-blog.csdnimg.cn/20200716144613210.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxMzE4NDAw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>位置如图，这里要实名认证才可以使用，挺快的，这里有三个是因为我自定义域名了，正常来说是一个第三个那个</p>
<h2 id="4站点配置文件修改"><a href="#4站点配置文件修改" class="headerlink" title="4站点配置文件修改"></a>4站点配置文件修改</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">deploy:</span><br><span class="line">- type: git</span><br><span class="line">  repository:</span><br><span class="line">      github: https:<span class="comment">//github.com/......io.git,master</span></span><br><span class="line">      coding: https:<span class="comment">//e.coding.net/......git,master</span></span><br></pre></td></tr></table></figure>
<p>这里请把地址改成你自己的</p>
<h2 id="5自定义域名Coding"><a href="#5自定义域名Coding" class="headerlink" title="5自定义域名Coding"></a>5自定义域名Coding</h2><p>跟着要求就好<br><img src= "/img/loading.gif" data-src="https://img-blog.csdnimg.cn/20200716145851817.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxMzE4NDAw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>跟着提示去相应的控制台就好。</p>
<h2 id="5自定义域名github"><a href="#5自定义域名github" class="headerlink" title="5自定义域名github"></a>5自定义域名github</h2><p>添加解析，以阿里云为例<br><img src= "/img/loading.gif" data-src="https://img-blog.csdnimg.cn/20200716150723195.png" alt="在这里插入图片描述"><br>然后去<br>在GitHub Pages的<br><img src= "/img/loading.gif" data-src="https://img-blog.csdnimg.cn/20200716150606218.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxMzE4NDAw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>这个要等阿里云通知你解析完成才可以，一般挺快的。<br>测试：<br><a href="http://ping.chinaz.com/" target="_blank" rel="external nofollow noopener noreferrer">http://ping.chinaz.com/</a><br>可以去检查自己的<br><img src= "/img/loading.gif" data-src="https://img-blog.csdnimg.cn/20200716150019250.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxMzE4NDAw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src= "/img/loading.gif" data-src="https://img-blog.csdnimg.cn/20200716150102206.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxMzE4NDAw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
]]></content>
      <categories>
        <category>搭建个人博客</category>
      </categories>
      <tags>
        <tag>hexo</tag>
        <tag>github</tag>
        <tag>coding</tag>
      </tags>
  </entry>
  <entry>
    <title>借助hexo和github搭建个人博客</title>
    <url>/article/7a56c169.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\css\APlayer.min.css"><script src="\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\js\Meting.min.js"></script><p>借助hexo和github搭建个人博客</p>
<a id="more"></a>

<p><img src= "/img/loading.gif" data-src="https://gitee.com/ztfn520/imagebed/raw/master/img/%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E9%A2%84%E8%A7%88.png" alt><br>地址：<a href="https://www.maolilan.top/">博客地址 </a><br><a href="https://www.maolilan.top/">https://www.maolilan.top/</a></p>
<h1 id="实现步骤"><a href="#实现步骤" class="headerlink" title="实现步骤"></a>实现步骤</h1><p>这里只讲述hexo+github搭建，至于自定义域名留在下一篇</p>
<h2 id="1创建github的个人仓库"><a href="#1创建github的个人仓库" class="headerlink" title="1创建github的个人仓库"></a>1创建github的个人仓库</h2><p>仓库名为：用户名.github.io<br>比如我的是kurumi2501314<br><img src= "/img/loading.gif" data-src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly9naXRlZS5jb20venRmbjUyMC9pbWFnZWJlZC9yYXcvbWFzdGVyL2ltZy9naXRodWIlRTQlQkIlOTMlRTUlQkElOTMucG5n?x-oss-process=image/format,png" alt></p>
<h2 id="2安装Git"><a href="#2安装Git" class="headerlink" title="2安装Git"></a>2安装Git</h2><p>这个是为了获得ssh的秘钥<br><strong>1Git下载地址</strong><br><a href="https://git-scm.com/download/win" target="_blank" rel="external nofollow noopener noreferrer">https://git-scm.com/download/win</a><br>可以直接点链接<a href="https://git-scm.com/download/win" target="_blank" rel="external nofollow noopener noreferrer">点这个</a></p>
<p><strong>2Git和github绑定</strong><br>在任意的文件夹下面右键出现Git Bash<br>就是这个<br><img src= "/img/loading.gif" data-src="https://img-blog.csdnimg.cn/2020071613320245.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxMzE4NDAw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>然后输入下面的信息进行绑定</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">git config --global user.name <span class="string">"你的GitHub用户名"</span></span><br><span class="line">git config --global user.email <span class="string">"你的GitHub注册邮箱"</span></span><br></pre></td></tr></table></figure>
<p>最后生成ssh秘钥文件</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">ssh-keygen -t rsa -C <span class="string">"你的GitHub注册邮箱"</span></span><br></pre></td></tr></table></figure>
<p>一路回车就ok<br>可以在.ssh文件夹下找到id_rsa.pub密钥<br>推荐用everything检索工具，很小，很方面快速检索，因为用户名不一样这里不再赘述<br><strong>3在github新建SSH Key</strong><br>地址<br><a href="https://github.com/settings/keys" target="_blank" rel="external nofollow noopener noreferrer">https://github.com/settings/keys</a><br>点击<a href="https://github.com/settings/keys" target="_blank" rel="external nofollow noopener noreferrer">点击</a><br><img src= "/img/loading.gif" data-src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly9naXRlZS5jb20venRmbjUyMC9pbWFnZWJlZC9yYXcvbWFzdGVyL2ltZy9zc2gucG5n?x-oss-process=image/format,png" alt><br>将第二步的那个id_rsa.pub打开复制就好啦<br>检测方法：<br>在Git Bash输入：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">ssh git<span class="meta">@github</span>.com</span><br></pre></td></tr></table></figure>
<p><img src= "/img/loading.gif" data-src="https://img-blog.csdnimg.cn/20200716134246207.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxMzE4NDAw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>这样就是大功告成了，这个是的用处是省去每次输入密码</p>
<h2 id="3安装Node-js"><a href="#3安装Node-js" class="headerlink" title="3安装Node.js"></a>3安装Node.js</h2><p>检验方法cmd输入</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">node -v</span><br></pre></td></tr></table></figure>
<p>出现版本号就说明你ok啦。<br>一般会自带npm的，为了稳健再确定npm</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">npm -v</span><br></pre></td></tr></table></figure>
<h2 id="4安装hexo"><a href="#4安装hexo" class="headerlink" title="4安装hexo"></a>4安装hexo</h2><p>终于到主角登场了，首先新建一个文件夹，这个文件夹里放的是hexo框架和之后发布的网页，然后按着shift在点击命令行<br><img src= "/img/loading.gif" data-src="https://img-blog.csdnimg.cn/2020071613492778.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxMzE4NDAw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>输入:</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">npm install -g hexo-cli</span><br></pre></td></tr></table></figure>
<p>然后初始化</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">hexo init blog</span><br></pre></td></tr></table></figure>
<p>这里会新建一个blog文件夹，然后东西都在里面，不加的话可能会报错。<br>验证请在blog文件夹下打开命令行<br><img src= "/img/loading.gif" data-src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly9naXRlZS5jb20venRmbjUyMC9pbWFnZWJlZC9yYXcvbWFzdGVyL2ltZy8lRTklQUElOEMlRTglQUYlODEucG5n?x-oss-process=image/format,png" alt><br>然后输入</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">hexo <span class="keyword">new</span> test_my_site</span><br><span class="line"></span><br><span class="line">hexo g</span><br><span class="line"></span><br><span class="line">hexo s</span><br></pre></td></tr></table></figure>
<p>hexo new是新建一个博客，文件格式是markdwon的，g是生成，s是启动预览。<br>当然这个时候和开头那个不一样，因为我后面加主题了，这里没有现存图。</p>
<h2 id="5发布网站"><a href="#5发布网站" class="headerlink" title="5发布网站"></a>5发布网站</h2><p>为了让别人可以看到我们要发布网站，在blog文件夹下_config.yml这个是站点配置文件，而在theme下也有个_config.yml文件，这个是主题配置文件，而我们的操作是在站点配置文件下<br>找到deploy没有请自己添加</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">deploy:</span><br><span class="line">type: git</span><br><span class="line">repo: 这里填入你之前在GitHub上创建仓库的完整路径，记得加上 .git</span><br><span class="line">branch: master</span><br></pre></td></tr></table></figure>
<p>比如我的就是<a href="https://github.com/kurumi2501314/kurumi2501314.github.io.git" target="_blank" rel="external nofollow noopener noreferrer">https://github.com/kurumi2501314/kurumi2501314.github.io.git</a><br>保存，然后在blog的根目录打开输入<br><img src= "/img/loading.gif" data-src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly9naXRlZS5jb20venRmbjUyMC9pbWFnZWJlZC9yYXcvbWFzdGVyL2ltZy8lRTklQUElOEMlRTglQUYlODEucG5n?x-oss-process=image/format,png" alt><br>输入：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">npm install hexo-deployer-git --save</span><br><span class="line">hexo clean </span><br><span class="line">hexo g</span><br><span class="line">hexo d</span><br></pre></td></tr></table></figure>
<p>大功告成，现在访问<br>http://你的用户名.github.io<br>就可以了</p>
<p>参考：<br><a href="https://zhuanlan.zhihu.com/p/26625249" target="_blank" rel="external nofollow noopener noreferrer">https://zhuanlan.zhihu.com/p/26625249</a></p>
]]></content>
      <categories>
        <category>搭建个人博客</category>
      </categories>
      <tags>
        <tag>hexo</tag>
        <tag>github</tag>
      </tags>
  </entry>
  <entry>
    <title>Android Studio引用github第三方库完成美观的侧滑菜单</title>
    <url>/article/5d6f1d17.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\css\APlayer.min.css"><script src="\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\js\Meting.min.js"></script><p>借助github的第三方库实现美观侧滑菜单。</p>
<a id="more"></a>
<p>预览图<br><img src= "/img/loading.gif" data-src="http://i1.fuimg.com/723232/cf76124142bccb31.gif" alt="在这里插入图片描述"></p>
<p>欢迎下载<br><a href="https://github.com/kurumi2501314/demo/blob/master/demo.apk" target="_blank" rel="external nofollow noopener noreferrer">https://github.com/kurumi2501314/demo/blob/master/demo.apk</a></p>
<h1 id="实现步骤"><a href="#实现步骤" class="headerlink" title="实现步骤"></a>实现步骤</h1><p>引用的地址为<br>  <a href="https://github.com/mzule/FantasySlide" target="_blank" rel="external nofollow noopener noreferrer">https://github.com/mzule/FantasySlide</a><br>原文有使用介绍，这里将步骤详</p>
<h2 id="1添加依赖"><a href="#1添加依赖" class="headerlink" title="1添加依赖"></a>1添加依赖</h2><p>在app下的build.gradle的依赖位置进行添加，因为更新，所以请把  <strong>compile</strong> 改为<br><strong>implementation</strong></p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 在dependencies的范围里添加</span></span><br><span class="line"> implementation <span class="string">'com.github.mzule.fantasyslide:library:1.0.5'</span></span><br></pre></td></tr></table></figure>



<h2 id="2进行布局"><a href="#2进行布局" class="headerlink" title="2进行布局"></a>2进行布局</h2><p>如同原博主所言，可以把这个当做抽屉布局就可以了，演示就直接用他的例子了。图片偷懒也使用博主的例子了。侵删。<br>篇幅有限，这里贴关键部分。</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">&lt;?xml version=<span class="string">"1.0"</span> encoding=<span class="string">"utf-8"</span>?&gt;</span><br><span class="line">&lt;RelativeLayout xmlns:android=<span class="string">"http://schemas.android.com/apk/res/android"</span></span><br><span class="line">    android:layout_width=<span class="string">"match_parent"</span></span><br><span class="line">    android:layout_height=<span class="string">"match_parent"</span>&gt;</span><br><span class="line"></span><br><span class="line">    &lt;com.github.mzule.fantasyslide.FantasyDrawerLayout                                        </span><br><span class="line">        xmlns:app=<span class="string">"http://schemas.android.com/apk/res-auto"</span></span><br><span class="line">        android:id=<span class="string">"@+id/drawerLayout"</span></span><br><span class="line">        android:layout_width=<span class="string">"match_parent"</span></span><br><span class="line">        android:layout_height=<span class="string">"match_parent"</span>&gt;</span><br><span class="line"></span><br><span class="line">      </span><br><span class="line"></span><br><span class="line">        &lt;com.github.mzule.fantasyslide.SideBar</span><br><span class="line">            android:id=<span class="string">"@+id/leftSideBar"</span></span><br><span class="line">            android:layout_width=<span class="string">"200dp"</span></span><br><span class="line">            android:layout_height=<span class="string">"match_parent"</span></span><br><span class="line">            android:layout_gravity=<span class="string">"start"</span></span><br><span class="line">            android:background=<span class="string">"@color/colorPrimary"</span></span><br><span class="line">            android:gravity=<span class="string">"center_vertical"</span></span><br><span class="line">            app:maxTranslationX=<span class="string">"66dp"</span>&gt;</span><br><span class="line"></span><br><span class="line">            &lt;LinearLayout</span><br><span class="line">                android:id=<span class="string">"@+id/userInfo"</span></span><br><span class="line">                android:layout_width=<span class="string">"wrap_content"</span></span><br><span class="line">                android:layout_height=<span class="string">"wrap_content"</span></span><br><span class="line">                android:layout_marginBottom=<span class="string">"30dp"</span></span><br><span class="line">                android:gravity=<span class="string">"center_horizontal"</span></span><br><span class="line">                android:onClick=<span class="string">"onClick"</span></span><br><span class="line">                android:orientation=<span class="string">"vertical"</span>&gt;</span><br><span class="line"></span><br><span class="line">                &lt;com.example.demo.widget.CircleimageView</span><br><span class="line">                    android:layout_width=<span class="string">"110dp"</span></span><br><span class="line">                    android:layout_height=<span class="string">"110dp"</span></span><br><span class="line">                    android:layout_margin=<span class="string">"10dp"</span></span><br><span class="line">                    android:src=<span class="string">"@drawable/me"</span></span><br><span class="line">                    app:civ_border_color=<span class="string">"@color/menu_text_color"</span></span><br><span class="line">                    app:civ_border_width=<span class="string">"2dp"</span> /&gt;</span><br><span class="line"></span><br><span class="line">                &lt;TextView</span><br><span class="line">                    android:layout_width=<span class="string">"wrap_content"</span></span><br><span class="line">                    android:layout_height=<span class="string">"wrap_content"</span></span><br><span class="line">                    android:text=<span class="string">"昵称"</span></span><br><span class="line">                    android:textColor=<span class="string">"@color/menu_text_color"</span></span><br><span class="line">                    android:textSize=<span class="string">"18sp"</span> /&gt;</span><br><span class="line">            &lt;<span class="regexp">/LinearLayout&gt;</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">            &lt;TextView</span></span><br><span class="line"><span class="regexp">                style="@style/</span>MenuText1<span class="string">"</span></span><br><span class="line"><span class="string">                android:drawableLeft="</span>@drawable/circle<span class="string">"</span></span><br><span class="line"><span class="string">                android:text="</span>朋友圈<span class="string">" /&gt;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">            &lt;TextView</span></span><br><span class="line"><span class="string">                style="</span>@style/MenuText1<span class="string">"</span></span><br><span class="line"><span class="string">                android:drawableLeft="</span>@drawable/wallet<span class="string">"</span></span><br><span class="line"><span class="string">                android:text="</span>钱包<span class="string">" /&gt;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">         </span></span><br><span class="line"><span class="string">        &lt;/com.github.mzule.fantasyslide.SideBar&gt;</span></span><br><span class="line"><span class="string">        &lt;com.github.mzule.fantasyslide.SideBar</span></span><br><span class="line"><span class="string">            android:id="</span>@+id/rightSideBar<span class="string">"</span></span><br><span class="line"><span class="string">            android:layout_width="</span><span class="number">133</span>dp<span class="string">"</span></span><br><span class="line"><span class="string">            android:layout_height="</span>match_parent<span class="string">"</span></span><br><span class="line"><span class="string">            android:layout_gravity="</span>end<span class="string">"</span></span><br><span class="line"><span class="string">            android:background="</span>@drawable/bg_right_bar<span class="string">"</span></span><br><span class="line"><span class="string">            android:gravity="</span>center_vertical|right<span class="string">"</span></span><br><span class="line"><span class="string">            app:maxTranslationX="</span><span class="number">-33</span>dp<span class="string">"&gt;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">            &lt;TextView</span></span><br><span class="line"><span class="string">                style="</span>@style/MenuText1<span class="string">"</span></span><br><span class="line"><span class="string">                android:text="</span>星期一<span class="string">" /&gt;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">            &lt;TextView</span></span><br><span class="line"><span class="string">                style="</span>@style/MenuText1<span class="string">"</span></span><br><span class="line"><span class="string">                android:text="</span>星期二<span class="string">" /&gt;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">            &lt;TextView</span></span><br><span class="line"><span class="string">                style="</span>@style/MenuText1<span class="string">"</span></span><br><span class="line"><span class="string">                android:text="</span>星期三<span class="string">" /&gt;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">           </span></span><br><span class="line"><span class="string">        &lt;/com.github.mzule.fantasyslide.SideBar&gt;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    &lt;/com.github.mzule.fantasyslide.FantasyDrawerLayout&gt;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    &lt;TextView</span></span><br><span class="line"><span class="string">        android:id="</span>@+id/tipView<span class="string">"</span></span><br><span class="line"><span class="string">        android:layout_width="</span><span class="number">160</span>dp<span class="string">"</span></span><br><span class="line"><span class="string">        android:layout_height="</span>wrap_content<span class="string">"</span></span><br><span class="line"><span class="string">        android:layout_alignParentRight="</span><span class="literal">true</span><span class="string">"</span></span><br><span class="line"><span class="string">        android:background="</span>@color/colorPrimary<span class="string">"</span></span><br><span class="line"><span class="string">        android:gravity="</span>center<span class="string">"</span></span><br><span class="line"><span class="string">        android:padding="</span><span class="number">20</span>dp<span class="string">"</span></span><br><span class="line"><span class="string">        android:textColor="</span>@color/colorAccent<span class="string">"</span></span><br><span class="line"><span class="string">        android:textSize="</span><span class="number">16</span>sp<span class="string">"</span></span><br><span class="line"><span class="string">        android:visibility="</span>invisible<span class="string">" /&gt;</span></span><br><span class="line"><span class="string">&lt;/RelativeLayout&gt;</span></span><br></pre></td></tr></table></figure>
<p>重点是在侧滑菜单的部分，其中 <strong>start</strong> 是说这个是左滑的，右滑是<strong>end</strong>，这个请注意。<br>另外关于头像部分，原博主是调用了一个github上的一个圆形视图库，链接<br><a href="https://github.com/hdodenhof/CircleImageView" target="_blank" rel="external nofollow noopener noreferrer">https://github.com/hdodenhof/CircleImageView</a><br>这里是继承后改了些，详情可以去看原博主或者我Git里widget部分。<br>另外drawble后缀是说图片的比例尺寸。</p>
<h2 id="3设置Listener来监听侧滑菜单"><a href="#3设置Listener来监听侧滑菜单" class="headerlink" title="3设置Listener来监听侧滑菜单"></a>3设置Listener来监听侧滑菜单</h2><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">private <span class="keyword">void</span> setListener() &#123;</span><br><span class="line">    final TextView tipView = (TextView) findViewById(R.id.tipView);</span><br><span class="line">    SideBar leftSideBar = (SideBar) findViewById(R.id.leftSideBar);</span><br><span class="line">    leftSideBar.setFantasyListener(<span class="keyword">new</span> SimpleFantasyListener() &#123;</span><br><span class="line">        @Override</span><br><span class="line">        public boolean onHover(@Nullable View view, int index) &#123;</span><br><span class="line">            tipView.setVisibility(View.VISIBLE);</span><br><span class="line">            <span class="keyword">if</span> (view <span class="keyword">instanceof</span> TextView) &#123;</span><br><span class="line">                tipView.setText(<span class="built_in">String</span>.format(<span class="string">"%s at %d"</span>, ((TextView) view).getText().toString(), index));</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span> (view != <span class="literal">null</span> &amp;&amp; view.getId() == R.id.userInfo) &#123;</span><br><span class="line">                tipView.setText(<span class="built_in">String</span>.format(<span class="string">"个人中心 at %d"</span>, index));</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                tipView.setText(<span class="literal">null</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">        @Override</span><br><span class="line">        public boolean onSelect(View view, int index) &#123;</span><br><span class="line">            tipView.setVisibility(View.INVISIBLE);</span><br><span class="line">            Toast.makeText(MainActivity.this, <span class="built_in">String</span>.format(<span class="string">"%d selected"</span>, index), Toast.LENGTH_SHORT).show();</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        @Override</span><br><span class="line">        public <span class="keyword">void</span> onCancel() &#123;</span><br><span class="line">            tipView.setVisibility(View.INVISIBLE);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>这里只是确认是不是点击，因为考虑到还有后续，所以将每个选项的点击后的反应放在第二个activity，这里只用变色就可以了。<br>关于第二个活动：<br>原博主第二个界面是调用了另一个github的库，地址如下<br><a href="https://github.com/ikew0ng/SwipeBackLayout" target="_blank" rel="external nofollow noopener noreferrer">https://github.com/ikew0ng/SwipeBackLayout</a><br>所以总共需要添加三个</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">dependencies &#123;</span><br><span class="line">    implementation fileTree(dir: <span class="string">'libs'</span>, <span class="attr">include</span>: [<span class="string">'*.jar'</span>])</span><br><span class="line">    implementation <span class="string">'com.android.support:appcompat-v7:28.0.0'</span></span><br><span class="line">    implementation <span class="string">'com.android.support.constraint:constraint-layout:1.1.3'</span></span><br><span class="line">    testImplementation <span class="string">'junit:junit:4.12'</span></span><br><span class="line">    androidTestImplementation <span class="string">'com.android.support.test:runner:1.0.2'</span></span><br><span class="line">    androidTestImplementation <span class="string">'com.android.support.test.espresso:espresso-core:3.0.2'</span></span><br><span class="line">    implementation <span class="string">'com.github.mzule.fantasyslide:library:1.0.5'</span></span><br><span class="line">    implementation <span class="string">'de.hdodenhof:circleimageview:3.0.0'</span></span><br><span class="line">    implementation <span class="string">'me.imid.swipebacklayout.lib:library:1.1.0'</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>然后可以在这个位置通过对标题的确认来添加事件</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">protected void onCreate(Bundle savedInstanceState) &#123;</span><br><span class="line">    super.onCreate(savedInstanceState);</span><br><span class="line">    setContentView(R.layout.activity_seconde);</span><br><span class="line">    swipeBackActivityHelper &#x3D; new SwipeBackActivityHelper(this);</span><br><span class="line">    swipeBackActivityHelper.onActivityCreate();</span><br><span class="line">    getSupportActionBar().setDisplayHomeAsUpEnabled(true);</span><br><span class="line">    setTitle(getIntent().getStringExtra(&quot;title&quot;));</span><br><span class="line">   &#x2F;&#x2F; if(getTitle().equals(&quot;xxx&quot;));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>  注释的部分就是了，在那里通过比较不同的字符串标题来添加事件。</p>
<h2 id="4Transformer的改变"><a href="#4Transformer的改变" class="headerlink" title="4Transformer的改变"></a>4Transformer的改变</h2><p>原博主的实例特效是平移的，我这里将其改变为旋转，是在右边将这个特效做了实现。<br>效果如下：</p>
<p><img src= "/img/loading.gif" data-src="https://img-blog.csdnimg.cn/20190405191402852.gif" alt="在这里插入图片描述"></p>
<p>详细可以去我github去看完整<br><a href="https://github.com/kurumi2501314/demo" target="_blank" rel="external nofollow noopener noreferrer">https://github.com/kurumi2501314/demo</a><br>欢迎下载<br><a href="https://github.com/kurumi2501314/demo/blob/master/demo.apk" target="_blank" rel="external nofollow noopener noreferrer">https://github.com/kurumi2501314/demo/blob/master/demo.apk</a></p>
]]></content>
      <categories>
        <category>Android</category>
      </categories>
      <tags>
        <tag>github</tag>
        <tag>Android</tag>
      </tags>
  </entry>
  <entry>
    <title>解决百度云情感分析乱码问题</title>
    <url>/article/234762cd.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\css\APlayer.min.css"><script src="\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\js\Meting.min.js"></script><p>在读取文本数据时碰到了xxx is not JSON serializable，主要是因为json.dump()或者json.dumps()无法序列化.</p>
<a id="more"></a>
<p>原始函数</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="function">def <span class="title">last_getProEmotion</span><span class="params">(inputText, access_token)</span>: #情感分析的函数</span></span><br><span class="line"><span class="function">      url </span>= <span class="string">'https://aip.baidubce.com/rpc/2.0/nlp/v1/sentiment_classify_custom?access_token='</span> + access_token</span><br><span class="line">      header = &#123;<span class="string">'Content-Type	'</span>: <span class="string">'application/json'</span>&#125;</span><br><span class="line">      body = &#123;<span class="string">'text'</span>: inputText&#125;</span><br><span class="line">      requests.packages.urllib3.disable_warnings()</span><br><span class="line">      res = requests.post(url=url, data=json.dumps(body), headers=header, verify=False)</span><br><span class="line">      time.sleep(<span class="number">1</span>)</span><br><span class="line">      <span class="keyword">if</span> res.status_code == <span class="number">200</span>:</span><br><span class="line">        info = json.loads(res.text)</span><br><span class="line">        print(info)</span><br><span class="line">        <span class="keyword">if</span> <span class="string">'items'</span> <span class="function">in info and <span class="title">len</span><span class="params">(info[<span class="string">'items'</span>])</span> &gt; 0:</span></span><br><span class="line"><span class="function">            sentiment </span>= info[<span class="string">'items'</span>][<span class="number">0</span>][<span class="string">'sentiment'</span>]</span><br><span class="line">            <span class="keyword">if</span>(sentiment==<span class="number">0</span>):</span><br><span class="line">                <span class="keyword">return</span> -<span class="number">2</span></span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                <span class="keyword">return</span>  sentiment</span><br></pre></td></tr></table></figure>

<p>解决方法：<br>新建一个MyEncoder类来继承json.JSONEncoder，重写json.JSONEncoder中的方法</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> json</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> numpy as np</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">class MyEncoder(json.JSONEncoder):</span><br><span class="line">    <span class="function">def <span class="title">default</span><span class="params">(self, obj)</span>:</span></span><br><span class="line"><span class="function">        <span class="keyword">if</span> <span class="title">isinstance</span><span class="params">(obj, np.integer)</span>:</span></span><br><span class="line"><span class="function">            return <span class="title">int</span><span class="params">(obj)</span></span></span><br><span class="line"><span class="function">        elif <span class="title">isinstance</span><span class="params">(obj, np.floating)</span>:</span></span><br><span class="line"><span class="function">            return <span class="title">float</span><span class="params">(obj)</span></span></span><br><span class="line"><span class="function">        elif <span class="title">isinstance</span><span class="params">(obj, np.ndarray)</span>:</span></span><br><span class="line"><span class="function">            return obj.<span class="title">tolist</span><span class="params">()</span></span></span><br><span class="line"><span class="function">        <span class="keyword">else</span>:</span></span><br><span class="line"><span class="function">            return <span class="title">super</span><span class="params">(NpEncoder, self)</span>.<span class="title">default</span><span class="params">(obj)</span></span></span><br></pre></td></tr></table></figure>

<p>然后引用之后修改json.dumps()的参数</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="function">def <span class="title">last_getProEmotion</span><span class="params">(inputText, access_token)</span>: #情感分析的函数</span></span><br><span class="line"><span class="function">    url </span>= <span class="string">'https://aip.baidubce.com/rpc/2.0/nlp/v1/sentiment_classify_custom?access_token='</span> + access_token</span><br><span class="line">      header = &#123;<span class="string">'Content-Type	'</span>: <span class="string">'application/json'</span>&#125;</span><br><span class="line">      body = &#123;<span class="string">'text'</span>: inputText&#125;</span><br><span class="line">      requests.packages.urllib3.disable_warnings()</span><br><span class="line">      res = requests.post(url=url, data=json.dumps(body,cls=MyEncoder), headers=header, verify=False)#就是这个位置</span><br><span class="line">      time.sleep(<span class="number">1</span>)</span><br><span class="line">      <span class="keyword">if</span> res.status_code == <span class="number">200</span>:</span><br><span class="line">        info = json.loads(res.text)</span><br><span class="line">        print(info)</span><br><span class="line">        <span class="keyword">if</span> <span class="string">'items'</span> <span class="function">in info and <span class="title">len</span><span class="params">(info[<span class="string">'items'</span>])</span> &gt; 0:</span></span><br><span class="line"><span class="function">            sentiment </span>= info[<span class="string">'items'</span>][<span class="number">0</span>][<span class="string">'sentiment'</span>]</span><br><span class="line">            <span class="keyword">if</span>(sentiment==<span class="number">0</span>):</span><br><span class="line">                <span class="keyword">return</span> -<span class="number">2</span></span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                <span class="keyword">return</span>  sentiment</span><br></pre></td></tr></table></figure>
<p>参考<br><a href="https://blog.csdn.net/qq_28935065/article/details/90265719?ops_request_misc=&amp;request_id=&amp;biz_id=102&amp;utm_term=data=json.dumps" target="_blank" rel="external nofollow noopener noreferrer">https://blog.csdn.net/qq_28935065/article/details/90265719?ops_request_misc=&amp;request_id=&amp;biz_id=102&amp;utm_term=data=json.dumps</a>(body,%20cls=NpEn&amp;utm_medium=distribute.pc_search_result.none-task-blog-2<del>all</del>sobaiduweb~default-1-90265719</p>
]]></content>
      <categories>
        <category>百度云</category>
      </categories>
      <tags>
        <tag>百度云接口</tag>
        <tag>情感分析</tag>
      </tags>
  </entry>
  <entry>
    <title>借助bmob实现简单的登陆注册</title>
    <url>/article/67da7762.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\css\APlayer.min.css"><script src="\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\js\Meting.min.js"></script><p>借助bmob后端云实现简单的登录注册，我这个是安卓项目，支持微信，安卓等，个人不需要收费，商用和企业需要，课设挺香的。</p>
<a id="more"></a>

<p><img src= "/img/loading.gif" data-src="http://i2.tiimg.com/723232/e5e5488cb6a240f4.gif" alt="动态展示"></p>
<p><img src= "/img/loading.gif" data-src="https://img-blog.csdnimg.cn/20190410220636600.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxMzE4NDAw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<p>欢迎下载<br><a href="https://github.com/kurumi2501314/Bmobdemo/blob/master/demo.apk" target="_blank" rel="external nofollow noopener noreferrer">https://github.com/kurumi2501314/Bmobdemo/blob/master/demo.apk</a></p>
<h1 id="实现步骤"><a href="#实现步骤" class="headerlink" title="实现步骤"></a>实现步骤</h1><p>详细可以去我的github<br><a href="https://github.com/kurumi2501314/Bmobdemo" target="_blank" rel="external nofollow noopener noreferrer">https://github.com/kurumi2501314/Bmobdemo</a><br>只是将官方文档稍作了修改，详细更改还是去官方文档。</p>
<h2 id="1注册bmob"><a href="#1注册bmob" class="headerlink" title="1注册bmob"></a>1注册bmob</h2><p>去bmob官网注册，地址<br><a href="https://www.bmob.cn/" target="_blank" rel="external nofollow noopener noreferrer">https://www.bmob.cn/</a><br>然后在我的控制台创建应用，之后<br><img src= "/img/loading.gif" data-src="https://img-blog.csdnimg.cn/20190410210713150.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxMzE4NDAw,size_7,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>我的这里是demo，点击进入你新进的那个应用，例如我进入demo<br><img src= "/img/loading.gif" data-src="https://img-blog.csdnimg.cn/20190410210915862.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxMzE4NDAw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>设置里的第一个Application ID就是之后需要的。数据里是你建的表，默认有一个user表，如果需要扩充，如性别，简介，兴趣爱好这些需要一个子类继承bmobuser类进行扩展。</p>
<h2 id="2配置Bomb相关"><a href="#2配置Bomb相关" class="headerlink" title="2配置Bomb相关"></a>2配置Bomb相关</h2><p><strong>1配置SDK</strong><br><img src= "/img/loading.gif" data-src="https://img-blog.csdnimg.cn/20190410211630887.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxMzE4NDAw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>源于官网文档</p>
<p><strong>2配置权限和ContentProvider</strong></p>
<p>打开AndroidManifest.xml，添加如下权限：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">&lt;!--允许联网 --&gt; </span><br><span class="line">&lt;uses-permission android:name=<span class="string">"android.permission.INTERNET"</span> /&gt; </span><br><span class="line">&lt;!--获取GSM（<span class="number">2</span>g）、WCDMA（联通<span class="number">3</span>g）等网络状态的信息  --&gt; </span><br><span class="line">&lt;uses-permission android:name=<span class="string">"android.permission.ACCESS_NETWORK_STATE"</span> /&gt; </span><br><span class="line">&lt;!--获取wifi网络状态的信息 --&gt; </span><br><span class="line">&lt;uses-permission android:name=<span class="string">"android.permission.ACCESS_WIFI_STATE"</span> /&gt; </span><br><span class="line">&lt;!--保持CPU 运转，屏幕和键盘灯有可能是关闭的,用于文件上传和下载 --&gt;</span><br><span class="line">&lt;uses-permission android:name=<span class="string">"android.permission.WAKE_LOCK"</span> /&gt; </span><br><span class="line">&lt;!--获取sd卡写的权限，用于文件上传和下载--&gt;</span><br><span class="line">&lt;uses-permission android:name=<span class="string">"android.permission.WRITE_EXTERNAL_STORAGE"</span> /&gt;</span><br><span class="line">&lt;!--允许读取手机状态 用于创建BmobInstallation--&gt; </span><br><span class="line">&lt;uses-permission android:name=<span class="string">"android.permission.READ_PHONE_STATE"</span> /&gt;</span><br></pre></td></tr></table></figure>

<p>然后配置ContentProvider</p>
<figure class="highlight"><table><tr><td class="code"><pre><span class="line">&lt;application&gt;</span><br><span class="line">···</span><br><span class="line">&lt;provider</span><br><span class="line">    android:name=<span class="string">"cn.bmob.v3.util.BmobContentProvider"</span></span><br><span class="line">    android:authorities=<span class="string">"你的应用包名.BmobContentProvider"</span>&gt;</span><br><span class="line">&lt;/provider&gt;</span><br><span class="line">···</span><br><span class="line">&lt;/application&gt;</span><br></pre></td></tr></table></figure>

<p>这两个都是官网文档的，这里直接引用。</p>
<p><strong>3初始化bmob</strong></p>
<p>在活动的oncreate方法里初始化</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onCreate</span><span class="params">(Bundle savedInstanceState)</span> </span>&#123;</span><br><span class="line">       <span class="keyword">super</span>.onCreate(savedInstanceState);</span><br><span class="line">       setContentView(R.layout.activity_main);</span><br><span class="line">       Bmob.initialize(<span class="keyword">this</span>,<span class="string">"这里填写你自己的id，就是第一步注册后看到的那个"</span>);</span><br><span class="line">     </span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure>


<h2 id="3扩展自己的用户列表"><a href="#3扩展自己的用户列表" class="headerlink" title="3扩展自己的用户列表"></a>3扩展自己的用户列表</h2><p>BmobUser默认里没有昵称，性别这些，所以如果用的话需要继承然后扩展，新建Myuser类继承BmobUser。</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">package</span> com.example.bmobdemo;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> cn.bmob.v3.BmobUser;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyUser</span>  <span class="keyword">extends</span> <span class="title">BmobUser</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//补充其他属性</span></span><br><span class="line">    <span class="keyword">private</span>  String fakename;<span class="comment">//昵称</span></span><br><span class="line">    <span class="keyword">private</span>  String introd;<span class="comment">//简介</span></span><br><span class="line">    <span class="keyword">private</span>  String sex; <span class="comment">//性别</span></span><br><span class="line">    <span class="keyword">private</span>  String interesting; <span class="comment">//兴趣爱好</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getFakename</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span>  fakename;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span>  <span class="title">setFakename</span><span class="params">(String fakename)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.fakename=fakename;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getIntrod</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span>  introd;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span>  <span class="keyword">void</span>  <span class="title">setIntrod</span><span class="params">(String introd)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.introd=introd;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span>  String <span class="title">getSex</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span>  sex;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span>  <span class="keyword">void</span>  <span class="title">setSex</span><span class="params">(String sex)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.sex=sex;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span>  String <span class="title">getInteresting</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> interesting;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span>  <span class="keyword">void</span>  <span class="title">setInteresting</span><span class="params">(String interesting)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.interesting=interesting;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>




<h2 id="4实现注册"><a href="#4实现注册" class="headerlink" title="4实现注册"></a>4实现注册</h2><p>默认在登陆页，当点击注册按钮后进入注册界面，填写相关信息。<br><img src= "/img/loading.gif" data-src="https://img-blog.csdnimg.cn/20190410212842106.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxMzE4NDAw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>布局就是线性布局然后向里面填充，然后密码栏选择了password属性的Edittext所以是不可见的，布局不再赘述，详细可以去我git看全部，这里主要是活动里。<br>活动也很简单，先初始化布局控件，然后判断点击，再添加点击事件。关于注册方法bmob给封装了，在官方文档是这样的：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">signUp</span><span class="params">(<span class="keyword">final</span> View view)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">final</span> User user = <span class="keyword">new</span> User();</span><br><span class="line">    user.setUsername(<span class="string">""</span> + System.currentTimeMillis());</span><br><span class="line">    user.setPassword(<span class="string">""</span> + System.currentTimeMillis());</span><br><span class="line">    user.setAge(<span class="number">18</span>);</span><br><span class="line">    user.setGender(<span class="number">0</span>);</span><br><span class="line">    user.signUp(<span class="keyword">new</span> SaveListener&lt;User&gt;() &#123;</span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">done</span><span class="params">(User user, BmobException e)</span> </span>&#123;</span><br><span class="line">            <span class="keyword">if</span> (e == <span class="keyword">null</span>) &#123;</span><br><span class="line">                Snackbar.make(view, <span class="string">"注册成功"</span>, Snackbar.LENGTH_LONG).show();</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                Snackbar.make(view, <span class="string">"尚未失败："</span> + e.getMessage(), Snackbar.LENGTH_LONG).show();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>这里稍作修改，关键部分如下：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onCreate</span><span class="params">(Bundle savedInstanceState)</span> </span>&#123;</span><br><span class="line">       <span class="keyword">super</span>.onCreate(savedInstanceState);</span><br><span class="line">       setContentView(R.layout.activity_signup);</span><br><span class="line">       Bmob.initialize(<span class="keyword">this</span>,<span class="string">"我的应用id"</span>);</span><br><span class="line">       initview(); <span class="comment">//初始化布局</span></span><br><span class="line">       setListen();<span class="comment">//设置监听</span></span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">setListen</span><span class="params">()</span> </span>&#123;</span><br><span class="line">       re_sgin_btn.setOnClickListener(<span class="keyword">this</span>);</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">initview</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="comment">//省略</span></span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="meta">@Override</span></span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onClick</span><span class="params">(View v)</span> </span>&#123;</span><br><span class="line">          <span class="keyword">if</span>(v.getId()==R.id.sgin_up_btn)</span><br><span class="line">          &#123;</span><br><span class="line">              signup();</span><br><span class="line">          &#125;</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">signup</span><span class="params">()</span> </span>&#123;</span><br><span class="line">       <span class="keyword">final</span>  MyUser myUser=<span class="keyword">new</span> MyUser();</span><br><span class="line">       myUser.setUsername(re_username.getText().toString().trim());</span><br><span class="line">       myUser.setPassword(re_possword.getText().toString().trim());</span><br><span class="line">       myUser.setFakename(re_fake.getText().toString().trim());</span><br><span class="line">       myUser.setSex(re_sex.getText().toString().trim());</span><br><span class="line">       myUser.setIntrod(re_intro.getText().toString().trim());</span><br><span class="line">       myUser.setInteresting(re_inter.getText().toString().trim());</span><br><span class="line">       myUser.signUp(<span class="keyword">new</span> SaveListener&lt;MyUser&gt;() &#123;</span><br><span class="line">           <span class="meta">@Override</span></span><br><span class="line">           <span class="function"><span class="keyword">public</span>  <span class="keyword">void</span>  <span class="title">done</span><span class="params">(MyUser user, BmobException e)</span></span></span><br><span class="line"><span class="function">           </span>&#123;</span><br><span class="line">               <span class="keyword">if</span> (e==<span class="keyword">null</span>)</span><br><span class="line">               &#123;</span><br><span class="line">                   Toast.makeText(getApplicationContext(),<span class="string">"注册成功"</span>,Toast.LENGTH_LONG).show();</span><br><span class="line">                   Intent intent=<span class="keyword">new</span> Intent(SignupActivity.<span class="keyword">this</span>,MainActivity<span class="class">.<span class="keyword">class</span>)</span>;    <span class="comment">//注册成功就去登陆页，其实finish（）也行。</span></span><br><span class="line">                   startActivity(intent);</span><br><span class="line">               &#125;</span><br><span class="line">           &#125;</span><br><span class="line">       &#125;);</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure>
<h2 id="5实现登陆"><a href="#5实现登陆" class="headerlink" title="5实现登陆"></a>5实现登陆</h2><p>布局就是开始效果图那样，不再赘述<br>登陆活动的关键部分如下</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onClick</span><span class="params">(View v)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">switch</span> (v.getId())</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">case</span>  R.id.signin:</span><br><span class="line">                 login();</span><br><span class="line">                 <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span>  R.id.signup:</span><br><span class="line">            Intent intent1=<span class="keyword">new</span> Intent(MainActivity.<span class="keyword">this</span>,SignupActivity<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line">            startActivity(intent1);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">login</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">final</span>  MyUser user=<span class="keyword">new</span> MyUser();</span><br><span class="line">    <span class="keyword">final</span>  String username=username_signin.getText().toString().trim();</span><br><span class="line">    <span class="keyword">final</span>  String password=userpassword_signin.getText().toString().trim();</span><br><span class="line">    user.setUsername(username);</span><br><span class="line">    user.setPassword(password);</span><br><span class="line">    user.login(<span class="keyword">new</span> SaveListener&lt;MyUser&gt;() &#123;</span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span>  <span class="keyword">void</span>  <span class="title">done</span><span class="params">(MyUser myUser, BmobException e)</span></span></span><br><span class="line"><span class="function">        </span>&#123;</span><br><span class="line">            <span class="keyword">if</span>(e==<span class="keyword">null</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                MyUser user=MyUser.getCurrentUser(MyUser<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line">                Intent intent =<span class="keyword">new</span> Intent(MainActivity.<span class="keyword">this</span>,nextActivity<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line">                startActivity(intent);</span><br><span class="line">                Toast.makeText(getApplicationContext(),<span class="string">"登陆成功"</span>,Toast.LENGTH_LONG).show();</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">            &#123;</span><br><span class="line">                Toast.makeText(getApplicationContext(),<span class="string">""</span>+e.getMessage(),Toast.LENGTH_LONG).show();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>




<p>详细可以去我github去看完整<br><a href="https://github.com/kurumi2501314/Bmobdemo" target="_blank" rel="external nofollow noopener noreferrer">https://github.com/kurumi2501314/Bmobdemo</a></p>
<p>欢迎下载<br><a href="https://github.com/kurumi2501314/Bmobdemo/blob/master/demo.apk" target="_blank" rel="external nofollow noopener noreferrer">https://github.com/kurumi2501314/Bmobdemo/blob/master/demo.apk</a></p>
]]></content>
      <categories>
        <category>后端云</category>
      </categories>
      <tags>
        <tag>bmob</tag>
        <tag>登录注册</tag>
      </tags>
  </entry>
  <entry>
    <title>百度云api调用时出现“Max retries exceeded with url”的解决</title>
    <url>/article/358ad26.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\css\APlayer.min.css"><script src="\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\js\Meting.min.js"></script><p>这个是因为qps限制问题我们需要加sleep，例子：</p>
<a id="more"></a>

<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">for</span> i in <span class="title">range</span><span class="params">(<span class="number">0</span>,len(df)</span>):</span></span><br><span class="line"><span class="function">       <span class="title">print</span><span class="params">(i)</span></span></span><br><span class="line"><span class="function">       time.<span class="title">sleep</span><span class="params">(<span class="number">1</span>)</span> #这里</span></span><br><span class="line"><span class="function">       inputText</span>=df.at[i,<span class="string">"微博正文"</span>]</span><br><span class="line">       print(inputText)</span><br><span class="line">       <span class="keyword">if</span>(len(inputText)&lt;<span class="number">2048</span>):</span><br><span class="line">           accessToken = getToken()</span><br><span class="line">           everyday_list.append(last_getProEmotion(inputText,accessToken))</span><br><span class="line">       <span class="keyword">else</span>:</span><br><span class="line">           data = cut_text(inputText, 1500)  # 如果文章字节长度大于1500，则切分</span><br><span class="line">           accessToken = getToken()</span><br><span class="line">           everyday_list.append(last_getProEmotion(data , accessToken))</span><br><span class="line"> print(everyday_list)</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>百度云</category>
      </categories>
      <tags>
        <tag>百度云接口</tag>
        <tag>情感分析</tag>
      </tags>
  </entry>
  <entry>
    <title>借助百度云接口完成文本情感分析(通用版)</title>
    <url>/article/2b97b46c.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\css\APlayer.min.css"><script src="\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\js\Meting.min.js"></script><p>借助百度云接口完成文本情感分析(通用版)，如果没有购买一秒可以处理两条数据，可以用在小项目上，如果是批量，那么建议使用模型或者购买，价钱不详。</p>
<a id="more"></a>

<h1 id="实现步骤"><a href="#实现步骤" class="headerlink" title="实现步骤"></a>实现步骤</h1><h2 id="1注册百度云"><a href="#1注册百度云" class="headerlink" title="1注册百度云"></a>1注册百度云</h2><p>我这里就到控制台了</p>
<p><a href="https://cloud.baidu.com/?from=console" target="_blank" rel="external nofollow noopener noreferrer">https://cloud.baidu.com/?from=console</a></p>
<p><img src= "/img/loading.gif" data-src="https://img-blog.csdnimg.cn/20200629112827986.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxMzE4NDAw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<h2 id="2进入控制台创建应用"><a href="#2进入控制台创建应用" class="headerlink" title="2进入控制台创建应用"></a>2进入控制台创建应用</h2><p><a href="https://console.bce.baidu.com/ai/#/ai/nlp/overview/index" target="_blank" rel="external nofollow noopener noreferrer">https://console.bce.baidu.com/ai/#/ai/nlp/overview/index</a><br><strong>1进入nlp相关</strong><br><img src= "/img/loading.gif" data-src="https://img-blog.csdnimg.cn/20200629113003656.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxMzE4NDAw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<p><strong>2创建自己的应用</strong><br><img src= "/img/loading.gif" data-src="https://img-blog.csdnimg.cn/202006291137425.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxMzE4NDAw,size_16,color_FFFFFF,t_70" alt></p>
<p><strong>3得到AK和SK</strong></p>
<p>AK是api key，SK是secret key。</p>
<p>##3获取Access Token</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="function">def <span class="title">getToken</span><span class="params">()</span>:</span></span><br><span class="line"><span class="function">    # client_id 为官网获取的AK， client_secret 为官网获取的SK</span></span><br><span class="line"><span class="function">    host </span>= <span class="string">'https://aip.baidubce.com/oauth/2.0/token?grant_type=client_credentials&amp;client_id='</span> + App_Key + <span class="string">'&amp;client_secret='</span> + Secret_Key</span><br><span class="line">    response = requests.get(host)</span><br><span class="line"></span><br><span class="line">    if response.status_code == 200: #响应成功</span><br><span class="line">        info = json.loads(response.text)  # 将字符串转成字典</span><br><span class="line">        access_token = info['access_token']  # 解析数据到access_token</span><br><span class="line">        <span class="keyword">return</span> access_token</span><br><span class="line">    <span class="keyword">return</span> <span class="string">''</span></span><br></pre></td></tr></table></figure>





<h2 id="4情感分析"><a href="#4情感分析" class="headerlink" title="4情感分析"></a>4情感分析</h2><p>首先看接口返回信息</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="string">"text"</span>:<span class="string">"苹果是一家伟大的公司"</span>,</span><br><span class="line">    <span class="string">"items"</span>:[</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="string">"sentiment"</span>:<span class="number">2</span>,    <span class="comment">//表示情感极性分类结果</span></span><br><span class="line">            <span class="string">"confidence"</span>:<span class="number">0.40</span>, <span class="comment">//表示分类的置信度</span></span><br><span class="line">            <span class="string">"positive_prob"</span>:<span class="number">0.73</span>, <span class="comment">//表示属于积极类别的概率</span></span><br><span class="line">            <span class="string">"negative_prob"</span>:<span class="number">0.27</span>  <span class="comment">//表示属于消极类别的概率</span></span><br><span class="line">        &#125;</span><br><span class="line">    ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="function">def <span class="title">getEmotion</span><span class="params">(inputText, access_token)</span>:</span></span><br><span class="line"><span class="function">    url </span>= <span class="string">'https://aip.baidubce.com/rpc/2.0/nlp/v1/sentiment_classify?access_token='</span> + access_token</span><br><span class="line">    header = &#123;<span class="string">'Content-Type	'</span>: <span class="string">'application/json'</span>&#125;</span><br><span class="line">    body = &#123;<span class="string">'text'</span>: inputText&#125;</span><br><span class="line">    requests.packages.urllib3.disable_warnings()</span><br><span class="line">    res = requests.post(url=url, data=json.dumps(body), headers=header, verify=False)</span><br><span class="line">    <span class="keyword">if</span> res.status_code == <span class="number">200</span>:</span><br><span class="line">        info = json.loads(res.text)</span><br><span class="line">        print(info)</span><br><span class="line">        <span class="keyword">if</span> <span class="string">'items'</span> <span class="function">in info and <span class="title">len</span><span class="params">(info[<span class="string">'items'</span>])</span> &gt; 0:</span></span><br><span class="line"><span class="function">            sentiment </span>= info[<span class="string">'items'</span>][<span class="number">0</span>][<span class="string">'sentiment'</span>]</span><br><span class="line">            <span class="keyword">if</span> sentiment == <span class="number">2</span>:</span><br><span class="line">                print(inputText + <span class="string">'  情感分析结果是:正向'</span>)</span><br><span class="line">            elif sentiment == <span class="number">1</span>:</span><br><span class="line">                print(inputText + <span class="string">'  情感分析结果是:中性'</span>)</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                print(inputText + <span class="string">'  情感分析结果是:负向'</span>)</span><br></pre></td></tr></table></figure>
<h2 id="5实现"><a href="#5实现" class="headerlink" title="5实现"></a>5实现</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> json</span><br><span class="line"></span><br><span class="line">App_Key = <span class="string">'自己申请的AK'</span></span><br><span class="line">Secret_Key = <span class="string">'自己申请的SK'</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># 情感分析</span><br><span class="line"><span class="function">def <span class="title">getEmotion</span><span class="params">(inputText, access_token)</span>:</span></span><br><span class="line"><span class="function">    url </span>= <span class="string">'https://aip.baidubce.com/rpc/2.0/nlp/v1/sentiment_classify?access_token='</span> + access_token</span><br><span class="line">    header = &#123;<span class="string">'Content-Type	'</span>: <span class="string">'application/json'</span>&#125;</span><br><span class="line">    body = &#123;<span class="string">'text'</span>: inputText&#125;</span><br><span class="line">    requests.packages.urllib3.disable_warnings()</span><br><span class="line">    res = requests.post(url=url, data=json.dumps(body), headers=header, verify=False)</span><br><span class="line">    <span class="keyword">if</span> res.status_code == <span class="number">200</span>:</span><br><span class="line">        info = json.loads(res.text)</span><br><span class="line">        print(info) #打印接口返回信息，如果报错方便查看，也可以忽略报错继续执行</span><br><span class="line">        <span class="keyword">if</span> <span class="string">'items'</span> <span class="function">in info and <span class="title">len</span><span class="params">(info[<span class="string">'items'</span>])</span> &gt; 0:</span></span><br><span class="line"><span class="function">            sentiment </span>= info[<span class="string">'items'</span>][<span class="number">0</span>][<span class="string">'sentiment'</span>]</span><br><span class="line">            <span class="keyword">if</span> sentiment == <span class="number">2</span>:</span><br><span class="line">                print(inputText + <span class="string">'  情感分析结果是:正向'</span>)</span><br><span class="line">            elif sentiment == <span class="number">1</span>:</span><br><span class="line">                print(inputText + <span class="string">'  情感分析结果是:中性'</span>)</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                print(inputText + <span class="string">'  情感分析结果是:负向'</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># 获取token</span><br><span class="line"><span class="function">def <span class="title">getToken</span><span class="params">()</span>:</span></span><br><span class="line"><span class="function">    # client_id 为官网获取的AK， client_secret 为官网获取的SK</span></span><br><span class="line"><span class="function">    host </span>= <span class="string">'https://aip.baidubce.com/oauth/2.0/token?grant_type=client_credentials&amp;client_id='</span> + App_Key + <span class="string">'&amp;client_secret='</span> + Secret_Key</span><br><span class="line">    response = requests.get(host)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> response.status_code == <span class="number">200</span>:</span><br><span class="line">        info = json.loads(response.text)  # 将字符串转成字典</span><br><span class="line">        access_token = info['access_token']  # 解析数据到access_token</span><br><span class="line">        <span class="keyword">return</span> access_token</span><br><span class="line">    <span class="keyword">return</span> <span class="string">''</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># 主函数</span><br><span class="line"><span class="function">def <span class="title">main</span><span class="params">()</span>:</span></span><br><span class="line">    inputText ="今天天气真好" #进行识别的语句，根据需求可以改成读取文件或者输入</span><br><span class="line">    accessToken = getToken()</span><br><span class="line">    getEmotion(inputText, accessToken)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    main()</span><br></pre></td></tr></table></figure>

<p>输出结果：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">&#123;<span class="string">'log_id'</span>: <span class="number">2064186719012084925</span>, <span class="string">'text'</span>: <span class="string">'今天天气真好'</span>, <span class="string">'items'</span>: [&#123;<span class="string">'positive_prob'</span>: <span class="number">0.997986</span>, <span class="string">'confidence'</span>: <span class="number">0.995524</span>, <span class="string">'negative_prob'</span>: <span class="number">0.00201416</span>, <span class="string">'sentiment'</span>: <span class="number">2</span>&#125;]&#125;</span><br><span class="line">今天天气真好  情感分析结果是:正向</span><br></pre></td></tr></table></figure>


<h2 id="6注意点"><a href="#6注意点" class="headerlink" title="6注意点"></a>6注意点</h2><p>1个人账户的情感识别的QPS是2，所以多条文本报错一般是因为数据太多</p>
<p>2文本不能过长，不要超过2048</p>
]]></content>
      <categories>
        <category>百度云</category>
      </categories>
      <tags>
        <tag>百度云接口</tag>
        <tag>情感分析</tag>
      </tags>
  </entry>
  <entry>
    <title>百度云情感分析定制版</title>
    <url>/article/c386a086.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\css\APlayer.min.css"><script src="\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\js\Meting.min.js"></script><p>借助百度云接口完成文本情感分析(通用版)，如果没有购买一秒可以处理两条数据，可以用在小项目上，如果是批量，那么建议使用模型或者购买，价钱不详。</p>
<a id="more"></a>

<h1 id="实现步骤"><a href="#实现步骤" class="headerlink" title="实现步骤"></a>实现步骤</h1><h2 id="1先看通用版有个大体印象"><a href="#1先看通用版有个大体印象" class="headerlink" title="1先看通用版有个大体印象"></a>1先看通用版有个大体印象</h2><p>链接<a href="https://blog.csdn.net/qq_41318400/article/details/107016732" target="_blank" rel="external nofollow noopener noreferrer">添加链接描述</a><br>链接详情：<a href="https://blog.csdn.net/qq_41318400/article/details/107016732" target="_blank" rel="external nofollow noopener noreferrer">https://blog.csdn.net/qq_41318400/article/details/107016732</a></p>
<h2 id="2进入应用管理创建模型"><a href="#2进入应用管理创建模型" class="headerlink" title="2进入应用管理创建模型"></a>2进入应用管理创建模型</h2><p><img src= "/img/loading.gif" data-src="https://img-blog.csdnimg.cn/20200629120753213.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxMzE4NDAw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>地址：<br><a href="https://console.bce.baidu.com/ai/#/ai/nlp/sentiment/dict/list" target="_blank" rel="external nofollow noopener noreferrer">https://console.bce.baidu.com/ai/#/ai/nlp/sentiment/dict/list</a></p>
<h2 id="3创建模型"><a href="#3创建模型" class="headerlink" title="3创建模型"></a>3创建模型</h2><p><img src= "/img/loading.gif" data-src="https://img-blog.csdnimg.cn/20200629120851530.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxMzE4NDAw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>写好名称和场景描述，之后把正负样本放进去，最后训练，训练好之后确认模型。<br>例子：<br><img src= "/img/loading.gif" data-src="https://img-blog.csdnimg.cn/20200629121100106.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxMzE4NDAw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>这个我放入了微博的数据大概各是5w之后效果到大概98%，没截图现在不能截了</p>
<h2 id="4情感分析"><a href="#4情感分析" class="headerlink" title="4情感分析"></a>4情感分析</h2><p>Access Token是不变的，post的url要改变。<br>接口返回信息是不变的</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="string">"text"</span>:<span class="string">"苹果是一家伟大的公司"</span>,</span><br><span class="line">    <span class="string">"items"</span>:[</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="string">"sentiment"</span>:<span class="number">2</span>,    <span class="comment">//表示情感极性分类结果</span></span><br><span class="line">            <span class="string">"confidence"</span>:<span class="number">0.40</span>, <span class="comment">//表示分类的置信度</span></span><br><span class="line">            <span class="string">"positive_prob"</span>:<span class="number">0.73</span>, <span class="comment">//表示属于积极类别的概率</span></span><br><span class="line">            <span class="string">"negative_prob"</span>:<span class="number">0.27</span>  <span class="comment">//表示属于消极类别的概率</span></span><br><span class="line">        &#125;</span><br><span class="line">    ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="function">def <span class="title">getEmotion</span><span class="params">(inputText, access_token)</span>:</span></span><br><span class="line">    url = 'https://aip.baidubce.com/rpc/2.0/nlp/v1/sentiment_classify_custom?access_token=' + access_token #就是这里</span><br><span class="line">    header = &#123;<span class="string">'Content-Type	'</span>: <span class="string">'application/json'</span>&#125;</span><br><span class="line">    body = &#123;<span class="string">'text'</span>: inputText&#125;</span><br><span class="line">    requests.packages.urllib3.disable_warnings()</span><br><span class="line">    res = requests.post(url=url, data=json.dumps(body), headers=header, verify=False)</span><br><span class="line">    <span class="keyword">if</span> res.status_code == <span class="number">200</span>:</span><br><span class="line">        info = json.loads(res.text)</span><br><span class="line">        print(info)</span><br><span class="line">        <span class="keyword">if</span> <span class="string">'items'</span> <span class="function">in info and <span class="title">len</span><span class="params">(info[<span class="string">'items'</span>])</span> &gt; 0:</span></span><br><span class="line"><span class="function">            sentiment </span>= info[<span class="string">'items'</span>][<span class="number">0</span>][<span class="string">'sentiment'</span>]</span><br><span class="line">            <span class="keyword">if</span> sentiment == <span class="number">2</span>:</span><br><span class="line">                print(inputText + <span class="string">'  情感分析结果是:正向'</span>)</span><br><span class="line">            elif sentiment == <span class="number">1</span>:</span><br><span class="line">                print(inputText + <span class="string">'  情感分析结果是:中性'</span>)</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                print(inputText + <span class="string">'  情感分析结果是:负向'</span>)</span><br></pre></td></tr></table></figure>
<p> ！！！一定要让模型生效再使用，不然会报错的</p>
<h2 id="5实现"><a href="#5实现" class="headerlink" title="5实现"></a>5实现</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> json</span><br><span class="line"></span><br><span class="line">App_Key = <span class="string">'自己申请的AK'</span></span><br><span class="line">Secret_Key = <span class="string">'自己申请的SK'</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># 情感分析</span><br><span class="line"><span class="function">def <span class="title">getEmotion</span><span class="params">(inputText, access_token)</span>:</span></span><br><span class="line"><span class="function">    url </span>= <span class="string">'https://aip.baidubce.com/rpc/2.0/nlp/v1/sentiment_classify_custom?access_token='</span> + access_token</span><br><span class="line">    header = &#123;<span class="string">'Content-Type	'</span>: <span class="string">'application/json'</span>&#125;</span><br><span class="line">    body = &#123;<span class="string">'text'</span>: inputText&#125;</span><br><span class="line">    requests.packages.urllib3.disable_warnings()</span><br><span class="line">    res = requests.post(url=url, data=json.dumps(body), headers=header, verify=False)</span><br><span class="line">    <span class="keyword">if</span> res.status_code == <span class="number">200</span>:</span><br><span class="line">        info = json.loads(res.text)</span><br><span class="line">        print(info) #打印接口返回信息，如果报错方便查看，也可以忽略报错继续执行</span><br><span class="line">        <span class="keyword">if</span> <span class="string">'items'</span> <span class="function">in info and <span class="title">len</span><span class="params">(info[<span class="string">'items'</span>])</span> &gt; 0:</span></span><br><span class="line"><span class="function">            sentiment </span>= info[<span class="string">'items'</span>][<span class="number">0</span>][<span class="string">'sentiment'</span>]</span><br><span class="line">            <span class="keyword">if</span> sentiment == <span class="number">2</span>:</span><br><span class="line">                print(inputText + <span class="string">'  情感分析结果是:正向'</span>)</span><br><span class="line">            elif sentiment == <span class="number">1</span>:</span><br><span class="line">                print(inputText + <span class="string">'  情感分析结果是:中性'</span>)</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                print(inputText + <span class="string">'  情感分析结果是:负向'</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># 获取token</span><br><span class="line"><span class="function">def <span class="title">getToken</span><span class="params">()</span>:</span></span><br><span class="line"><span class="function">    # client_id 为官网获取的AK， client_secret 为官网获取的SK</span></span><br><span class="line"><span class="function">    host </span>= <span class="string">'https://aip.baidubce.com/oauth/2.0/token?grant_type=client_credentials&amp;client_id='</span> + App_Key + <span class="string">'&amp;client_secret='</span> + Secret_Key</span><br><span class="line">    response = requests.get(host)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> response.status_code == <span class="number">200</span>:</span><br><span class="line">        info = json.loads(response.text)  # 将字符串转成字典</span><br><span class="line">        access_token = info['access_token']  # 解析数据到access_token</span><br><span class="line">        <span class="keyword">return</span> access_token</span><br><span class="line">    <span class="keyword">return</span> <span class="string">''</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># 主函数</span><br><span class="line"><span class="function">def <span class="title">main</span><span class="params">()</span>:</span></span><br><span class="line">    inputText ="哎哟，不错哟" #进行识别的语句，根据需求可以改成读取文件或者输入</span><br><span class="line">    accessToken = getToken()</span><br><span class="line">    getEmotion(inputText, accessToken)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    main()</span><br></pre></td></tr></table></figure>

<p>输出结果：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">&#123;<span class="string">'log_id'</span>: <span class="number">8877028948092554077</span>, <span class="string">'text'</span>: <span class="string">'哎哟，不错哟'</span>, <span class="string">'items'</span>: [&#123;<span class="string">'positive_prob'</span>: <span class="number">0.954273</span>, <span class="string">'confidence'</span>: <span class="number">0.898385</span>, <span class="string">'negative_prob'</span>: <span class="number">0.0457269</span>, <span class="string">'sentiment'</span>: <span class="number">2</span>&#125;]&#125;</span><br><span class="line">哎哟，不错哟  情感分析结果是:正向</span><br></pre></td></tr></table></figure>





]]></content>
      <categories>
        <category>百度云</category>
      </categories>
      <tags>
        <tag>百度云接口</tag>
        <tag>情感分析</tag>
      </tags>
  </entry>
</search>
